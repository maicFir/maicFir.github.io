{
  "version": 3,
  "sources": ["dep:@moefy-canvas_theme-sparkler", "../../../../node_modules/@moefy-canvas/theme-sparkler/dist/index.es.js", "../../../../node_modules/@moefy-canvas/core/dist/index.es.js", "../../../../node_modules/@moefy-canvas/utils/dist/index.es.js", "../../../../node_modules/color2k/src/guard.ts", "../../../../node_modules/color2k/src/ColorError.ts", "../../../../node_modules/color2k/src/parseToRgba.ts", "../../../../node_modules/color2k/src/parseToHsla.ts", "../../../../node_modules/color2k/src/hsla.ts", "../../../../node_modules/color2k/src/adjustHue.ts", "../../../../node_modules/color2k/src/darken.ts", "../../../../node_modules/color2k/src/desaturate.ts", "../../../../node_modules/color2k/src/getLuminance.ts", "../../../../node_modules/color2k/src/getContrast.ts", "../../../../node_modules/color2k/src/rgba.ts", "../../../../node_modules/color2k/src/mix.ts", "../../../../node_modules/color2k/src/getScale.ts", "../../../../node_modules/color2k/src/hasBadContrast.ts", "../../../../node_modules/color2k/src/lighten.ts", "../../../../node_modules/color2k/src/transparentize.ts", "../../../../node_modules/color2k/src/opacify.ts", "../../../../node_modules/color2k/src/readableColorIsBlack.ts", "../../../../node_modules/color2k/src/readableColor.ts", "../../../../node_modules/color2k/src/saturate.ts", "../../../../node_modules/color2k/src/toHex.ts", "../../../../node_modules/color2k/src/toRgba.ts", "../../../../node_modules/color2k/src/toHsla.ts", "../../../../node_modules/ts-debounce/src/index.ts"],
  "sourcesContent": ["\nexport * from \"../../../../node_modules/@moefy-canvas/theme-sparkler/dist/index.es.js\"", "var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\nvar _startTime, _startPosition, _duration, _distance, _angle, _size, _color, _direction, _opacity, _position, _mode, _numParticles, _sparkleFactor, _particleDurationRange, _particleDistanceRange, _particleSizeRange, _canvasOptions, _board, _particles, _mousePosition, _originalSparkleFactor, _paused, _stopped, _eventsHandler, _listen, listen_fn, _unlisten, unlisten_fn, _startAnimation, startAnimation_fn, _handleMouseMove, handleMouseMove_fn, _handleMouseDown, handleMouseDown_fn, _handleMouseUp, handleMouseUp_fn, _handleResize, handleResize_fn, _handleVisibilityChange, handleVisibilityChange_fn;\nimport { DrawBoard } from \"@moefy-canvas/core\";\nexport * from \"@moefy-canvas/core\";\nimport { Random, EventsHandler, showBadge, isMobile, isTouchEvent } from \"@moefy-canvas/utils\";\nimport { opacify } from \"color2k\";\nimport { debounce } from \"ts-debounce\";\nfunction normalize(x, MIN, MAX) {\n  return (x - MIN) / (MAX - MIN);\n}\nclass Particle {\n  constructor(startTime = 0, startPosition = { x: 0, y: 0 }, duration = Random.randomInt(50, 500), distance = Random.randomInt(40, 100), angle = Random.randomFloat(0, Math.PI * 2), size = Random.randomInt(1, 3), color = Random.choice([\"yellow\", \"pink\", \"red\", \"orange\", \"purple\", \"cyan\"])) {\n    __privateAdd(this, _startTime, void 0);\n    __privateAdd(this, _startPosition, void 0);\n    __privateAdd(this, _duration, void 0);\n    __privateAdd(this, _distance, void 0);\n    __privateAdd(this, _angle, void 0);\n    __privateAdd(this, _size, void 0);\n    __privateAdd(this, _color, void 0);\n    __privateAdd(this, _direction, void 0);\n    __privateAdd(this, _opacity, 1);\n    __privateAdd(this, _position, void 0);\n    __privateSet(this, _startTime, startTime);\n    __privateSet(this, _startPosition, startPosition);\n    __privateSet(this, _duration, duration);\n    __privateSet(this, _distance, distance);\n    __privateSet(this, _angle, angle);\n    __privateSet(this, _size, size);\n    __privateSet(this, _color, color);\n    __privateSet(this, _direction, {\n      x: Math.cos(__privateGet(this, _angle)) * __privateGet(this, _distance),\n      y: Math.sin(__privateGet(this, _angle)) * __privateGet(this, _distance)\n    });\n    __privateSet(this, _position, __spreadValues({}, __privateGet(this, _startPosition)));\n  }\n  move(currentTime) {\n    const step = normalize(currentTime, __privateGet(this, _startTime), __privateGet(this, _startTime) + __privateGet(this, _duration));\n    __privateGet(this, _position).x = __privateGet(this, _startPosition).x + __privateGet(this, _direction).x * step;\n    __privateGet(this, _position).y = __privateGet(this, _startPosition).y + __privateGet(this, _direction).y * step;\n    __privateSet(this, _opacity, 1 - step);\n  }\n  draw(canvasContext, currentTime) {\n    canvasContext.fillStyle = opacify(__privateGet(this, _color), __privateGet(this, _opacity));\n    canvasContext.beginPath();\n    canvasContext.arc(__privateGet(this, _position).x, __privateGet(this, _position).y, __privateGet(this, _size), 0, Math.PI * 2);\n    canvasContext.fill();\n  }\n  shouldRemove(currentTime) {\n    return currentTime > __privateGet(this, _startTime) + __privateGet(this, _duration);\n  }\n}\n_startTime = new WeakMap();\n_startPosition = new WeakMap();\n_duration = new WeakMap();\n_distance = new WeakMap();\n_angle = new WeakMap();\n_size = new WeakMap();\n_color = new WeakMap();\n_direction = new WeakMap();\n_opacity = new WeakMap();\n_position = new WeakMap();\nvar SparklerMode = /* @__PURE__ */ ((SparklerMode2) => {\n  SparklerMode2[\"FOLLOW\"] = \"follow\";\n  SparklerMode2[\"TRAIL\"] = \"trail\";\n  return SparklerMode2;\n})(SparklerMode || {});\nclass Sparkler {\n  constructor({\n    mode = \"trail\",\n    numParticles = 20,\n    sparkleFactor = 1,\n    particleDurationRange = [50, 500],\n    particleDistanceRange = [40, 100],\n    particleSizeRange = [1, 3]\n  } = {}, canvasOptions = {}) {\n    __privateAdd(this, _listen);\n    __privateAdd(this, _unlisten);\n    __privateAdd(this, _startAnimation);\n    __privateAdd(this, _handleMouseMove);\n    __privateAdd(this, _handleMouseDown);\n    __privateAdd(this, _handleMouseUp);\n    __privateAdd(this, _handleResize);\n    __privateAdd(this, _handleVisibilityChange);\n    __privateAdd(this, _mode, void 0);\n    __privateAdd(this, _numParticles, void 0);\n    __privateAdd(this, _sparkleFactor, void 0);\n    __privateAdd(this, _particleDurationRange, void 0);\n    __privateAdd(this, _particleDistanceRange, void 0);\n    __privateAdd(this, _particleSizeRange, void 0);\n    __privateAdd(this, _canvasOptions, void 0);\n    __privateAdd(this, _board, null);\n    __privateAdd(this, _particles, /* @__PURE__ */ new Set());\n    __privateAdd(this, _mousePosition, null);\n    __privateAdd(this, _originalSparkleFactor, void 0);\n    __privateAdd(this, _paused, false);\n    __privateAdd(this, _stopped, false);\n    __privateAdd(this, _eventsHandler, new EventsHandler());\n    __privateSet(this, _mode, mode);\n    __privateSet(this, _numParticles, numParticles);\n    __privateSet(this, _sparkleFactor, sparkleFactor);\n    __privateSet(this, _particleDurationRange, particleDurationRange);\n    __privateSet(this, _particleDistanceRange, particleDistanceRange);\n    __privateSet(this, _particleSizeRange, particleSizeRange);\n    __privateSet(this, _originalSparkleFactor, __privateGet(this, _sparkleFactor));\n    __privateSet(this, _canvasOptions, canvasOptions);\n    this.animate = this.animate.bind(this);\n  }\n  mount(el) {\n    __privateSet(this, _stopped, false);\n    __privateSet(this, _board, new DrawBoard(el, window.innerWidth, window.innerHeight, true, true, __privateGet(this, _canvasOptions)));\n    __privateMethod(this, _listen, listen_fn).call(this);\n    showBadge(\"Theme Sparkler \\u{1F387}\", { leftBgColor: \"#989900\" });\n  }\n  unmount() {\n    __privateMethod(this, _unlisten, unlisten_fn).call(this);\n    __privateSet(this, _stopped, true);\n    __privateSet(this, _mousePosition, null);\n  }\n  animate(currentTime) {\n    if (__privateGet(this, _stopped)) {\n      __privateGet(this, _board).clear();\n      return;\n    }\n    requestAnimationFrame(this.animate);\n    if (__privateGet(this, _paused)) {\n      return;\n    }\n    for (const particle of __privateGet(this, _particles)) {\n      particle.move(currentTime);\n    }\n    __privateGet(this, _board).draw((ctx, canvasSize) => {\n      for (const particle of __privateGet(this, _particles)) {\n        particle.draw(ctx, currentTime);\n        if (particle.shouldRemove(currentTime)) {\n          __privateGet(this, _particles).delete(particle);\n        }\n      }\n    });\n    __privateGet(this, _board).render();\n    while (__privateGet(this, _particles).size < __privateGet(this, _numParticles)) {\n      __privateGet(this, _particles).add(new Particle(currentTime + Random.randomInt(0, 300 / __privateGet(this, _sparkleFactor)), __privateGet(this, _mode) === \"trail\" ? __spreadValues({}, __privateGet(this, _mousePosition)) : __privateGet(this, _mousePosition), Random.randomFloat(__privateGet(this, _particleDurationRange)[0], __privateGet(this, _particleDurationRange)[1] / __privateGet(this, _sparkleFactor)), Random.randomFloat(__privateGet(this, _particleDistanceRange)[0], __privateGet(this, _particleDistanceRange)[1] * (__privateGet(this, _sparkleFactor) === 1 ? 1 : __privateGet(this, _sparkleFactor) / 3)), Random.randomFloat(0, Math.PI * 2), Random.randomInt(__privateGet(this, _particleSizeRange)[0], __privateGet(this, _particleSizeRange)[1] * (__privateGet(this, _sparkleFactor) === 1 ? 1 : __privateGet(this, _sparkleFactor) / 3)), Random.choice([\"yellow\", \"pink\", \"red\", \"orange\", \"purple\", \"cyan\"])));\n    }\n  }\n}\n_mode = new WeakMap();\n_numParticles = new WeakMap();\n_sparkleFactor = new WeakMap();\n_particleDurationRange = new WeakMap();\n_particleDistanceRange = new WeakMap();\n_particleSizeRange = new WeakMap();\n_canvasOptions = new WeakMap();\n_board = new WeakMap();\n_particles = new WeakMap();\n_mousePosition = new WeakMap();\n_originalSparkleFactor = new WeakMap();\n_paused = new WeakMap();\n_stopped = new WeakMap();\n_eventsHandler = new WeakMap();\n_listen = new WeakSet();\nlisten_fn = function() {\n  if (isMobile()) {\n    __privateGet(this, _eventsHandler).add(\"touchstart\", __privateMethod(this, _handleMouseDown, handleMouseDown_fn).bind(this));\n    __privateGet(this, _eventsHandler).add(\"touchmove\", __privateMethod(this, _handleMouseMove, handleMouseMove_fn).bind(this));\n    __privateGet(this, _eventsHandler).add(\"touchend\", __privateMethod(this, _handleMouseUp, handleMouseUp_fn).bind(this));\n  } else {\n    __privateGet(this, _eventsHandler).add(\"mousedown\", __privateMethod(this, _handleMouseDown, handleMouseDown_fn).bind(this));\n    __privateGet(this, _eventsHandler).add(\"mousemove\", __privateMethod(this, _handleMouseMove, handleMouseMove_fn).bind(this));\n    __privateGet(this, _eventsHandler).add(\"mouseup\", __privateMethod(this, _handleMouseUp, handleMouseUp_fn).bind(this));\n  }\n  __privateGet(this, _eventsHandler).add(\"visibilitychange\", __privateMethod(this, _handleVisibilityChange, handleVisibilityChange_fn).bind(this));\n  __privateGet(this, _eventsHandler).add(\"resize\", debounce(__privateMethod(this, _handleResize, handleResize_fn).bind(this), 500));\n  __privateGet(this, _eventsHandler).startAll();\n};\n_unlisten = new WeakSet();\nunlisten_fn = function() {\n  __privateGet(this, _eventsHandler).stopAll();\n  __privateGet(this, _eventsHandler).clear();\n};\n_startAnimation = new WeakSet();\nstartAnimation_fn = function() {\n  requestAnimationFrame(this.animate);\n};\n_handleMouseMove = new WeakSet();\nhandleMouseMove_fn = function(event) {\n  const currentPosition = {\n    x: isTouchEvent(event) ? event.touches[0].clientX : event.clientX,\n    y: isTouchEvent(event) ? event.touches[0].clientY : event.clientY\n  };\n  if (!__privateGet(this, _mousePosition)) {\n    __privateSet(this, _mousePosition, { x: currentPosition.x, y: currentPosition.y });\n    __privateMethod(this, _startAnimation, startAnimation_fn).call(this);\n    return;\n  }\n  __privateGet(this, _mousePosition).x = currentPosition.x;\n  __privateGet(this, _mousePosition).y = currentPosition.y;\n};\n_handleMouseDown = new WeakSet();\nhandleMouseDown_fn = function(event) {\n  const currentPosition = {\n    x: isTouchEvent(event) ? event.touches[0].clientX : event.clientX,\n    y: isTouchEvent(event) ? event.touches[0].clientY : event.clientY\n  };\n  if (!__privateGet(this, _mousePosition)) {\n    __privateSet(this, _mousePosition, { x: currentPosition.x, y: currentPosition.y });\n    __privateMethod(this, _startAnimation, startAnimation_fn).call(this);\n  }\n  __privateGet(this, _mousePosition).x = currentPosition.x;\n  __privateGet(this, _mousePosition).y = currentPosition.y;\n  if (__privateGet(this, _sparkleFactor) === __privateGet(this, _originalSparkleFactor)) {\n    __privateSet(this, _sparkleFactor, __privateGet(this, _sparkleFactor) * 4);\n  }\n};\n_handleMouseUp = new WeakSet();\nhandleMouseUp_fn = function(event) {\n  __privateSet(this, _sparkleFactor, __privateGet(this, _originalSparkleFactor));\n};\n_handleResize = new WeakSet();\nhandleResize_fn = function(event) {\n  __privateGet(this, _board).handleResize(event);\n};\n_handleVisibilityChange = new WeakSet();\nhandleVisibilityChange_fn = function(event) {\n  __privateSet(this, _paused, document.hidden);\n};\nexport { Sparkler, SparklerMode };\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _rawSize, _hd, _canvas, _offscreenCanvas;\nclass Theme {\n  constructor(themeConfig, canvasOptions) {\n  }\n}\nconst MAX_Z_INDEX = 2147483647;\nconst _Canvas = class {\n  constructor(el, width, height, hd = true) {\n    __privateAdd(this, _rawSize, void 0);\n    __privateAdd(this, _hd, void 0);\n    __privateSet(this, _rawSize, { width: 0, height: 0 });\n    const { el: el_, ctx } = _Canvas.initCanvas(el);\n    this.el = el_;\n    this.ctx = ctx;\n    __privateSet(this, _hd, hd);\n    this.size = { width: width || window.innerWidth, height: height || window.innerHeight };\n  }\n  get size() {\n    return __spreadValues({}, __privateGet(this, _rawSize));\n  }\n  set size({ width: newWidth, height: newHeight }) {\n    var _a;\n    if (__privateGet(this, _rawSize).width === newWidth && __privateGet(this, _rawSize).height === newHeight) {\n      return;\n    }\n    __privateGet(this, _rawSize).width = newWidth;\n    __privateGet(this, _rawSize).height = newHeight;\n    const dpr = (_a = __privateGet(this, _hd) ? window.devicePixelRatio : 1) != null ? _a : 1;\n    this.el.width = Math.round(__privateGet(this, _rawSize).width * dpr);\n    this.el.height = Math.round(__privateGet(this, _rawSize).height * dpr);\n    this.el.style.width = __privateGet(this, _rawSize).width + \"px\";\n    this.el.style.height = __privateGet(this, _rawSize).height + \"px\";\n    __privateGet(this, _hd) && this.ctx.scale(dpr, dpr);\n  }\n  clear() {\n    _Canvas.clearCanvas(this.ctx, __spreadValues({}, __privateGet(this, _rawSize)));\n  }\n  to(canvas) {\n    canvas.ctx.drawImage(this.el, 0, 0, __privateGet(this, _rawSize).width, __privateGet(this, _rawSize).height);\n  }\n  handleResize(_) {\n    this.size = { width: window.innerWidth, height: window.innerHeight };\n  }\n  static setCanvasStyle(canvas, canvasOptions, canvasSize) {\n    const style = canvas.style;\n    const { zIndex = 0, opacity = 1 } = canvasOptions;\n    style.position = \"fixed\";\n    style.top = \"0\";\n    style.left = \"0\";\n    style.zIndex = zIndex.toString();\n    style.width = (canvasSize ? canvasSize.width : canvas.width).toString() + \"px\";\n    style.height = (canvasSize ? canvasSize.height : canvas.height).toString() + \"px\";\n    opacity !== 1 && (style.opacity = opacity.toString());\n    style.pointerEvents = \"none\";\n  }\n  static initCanvas(el) {\n    if (!el) {\n      el = document.createElement(\"canvas\");\n    }\n    const ctx = el.getContext(\"2d\");\n    return {\n      el,\n      ctx\n    };\n  }\n  static createOffscreenCanvas() {\n    return new _Canvas();\n  }\n  static clearCanvas(ctx, canvasSize) {\n    const { width, height } = canvasSize;\n    ctx.clearRect(0, 0, width, height);\n  }\n};\nlet Canvas = _Canvas;\n_rawSize = new WeakMap();\n_hd = new WeakMap();\nclass DrawBoard {\n  constructor(el, width, height, hd = true, useOffscreenCanvas = true, canvasOptions = {\n    zIndex: 0,\n    opacity: 1\n  }) {\n    __privateAdd(this, _canvas, void 0);\n    __privateAdd(this, _offscreenCanvas, void 0);\n    __privateSet(this, _canvas, new Canvas(el, width, height, hd));\n    Canvas.setCanvasStyle(__privateGet(this, _canvas).el, canvasOptions, { width, height });\n    __privateSet(this, _offscreenCanvas, useOffscreenCanvas ? new Canvas(void 0, width, height, hd) : null);\n  }\n  get size() {\n    return __privateGet(this, _canvas).size;\n  }\n  draw(callback) {\n    var _a;\n    const drawingCanvas = (_a = __privateGet(this, _offscreenCanvas)) != null ? _a : __privateGet(this, _canvas);\n    drawingCanvas.clear();\n    callback(drawingCanvas.ctx, __spreadValues({}, drawingCanvas.size));\n  }\n  render() {\n    if (!__privateGet(this, _offscreenCanvas)) {\n      return;\n    }\n    __privateGet(this, _canvas).clear();\n    __privateGet(this, _offscreenCanvas).to(__privateGet(this, _canvas));\n  }\n  handleResize(event) {\n    __privateGet(this, _canvas).handleResize(event);\n    __privateGet(this, _offscreenCanvas) && __privateGet(this, _offscreenCanvas).handleResize(event);\n  }\n  clear() {\n    __privateGet(this, _canvas).clear();\n    __privateGet(this, _offscreenCanvas) && __privateGet(this, _offscreenCanvas).clear();\n  }\n}\n_canvas = new WeakMap();\n_offscreenCanvas = new WeakMap();\nexport { DrawBoard, MAX_Z_INDEX, Theme };\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _eventMap;\nclass EventsHandler {\n  constructor() {\n    __privateAdd(this, _eventMap, void 0);\n    __privateSet(this, _eventMap, /* @__PURE__ */ new Map());\n  }\n  add(type, listener) {\n    var _a;\n    if (!__privateGet(this, _eventMap).has(type)) {\n      __privateGet(this, _eventMap).set(type, /* @__PURE__ */ new Set());\n    }\n    (_a = __privateGet(this, _eventMap).get(type)) == null ? void 0 : _a.add(listener);\n  }\n  start(type) {\n    if (__privateGet(this, _eventMap).has(type)) {\n      for (const event of __privateGet(this, _eventMap).get(type)) {\n        window.addEventListener(type, event);\n      }\n    }\n  }\n  stop(type) {\n    if (__privateGet(this, _eventMap).has(type)) {\n      for (const event of __privateGet(this, _eventMap).get(type)) {\n        window.removeEventListener(type, event);\n      }\n    }\n  }\n  startAll() {\n    for (const type of __privateGet(this, _eventMap).keys()) {\n      this.start(type);\n    }\n  }\n  stopAll() {\n    for (const type of __privateGet(this, _eventMap).keys()) {\n      this.stop(type);\n    }\n  }\n  clear() {\n    __privateGet(this, _eventMap).clear();\n  }\n}\n_eventMap = new WeakMap();\nfunction isMobile() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\nfunction isTouchEvent(event) {\n  if (event.touches) {\n    return true;\n  }\n  return false;\n}\nclass Random {\n  static randomFloat(start, end) {\n    return Math.random() * (end - start) + start;\n  }\n  static randomInt(start, end) {\n    return Math.floor(Random.randomFloat(start, end));\n  }\n  static choice(range) {\n    const length = range.length;\n    const randomIndex = Math.floor(length * Math.random());\n    return range[randomIndex];\n  }\n  static color(colorHexStringOrArray = \"0123456789ABCDEF\") {\n    return \"#\" + Random.choice(colorHexStringOrArray) + Random.choice(colorHexStringOrArray) + Random.choice(colorHexStringOrArray) + Random.choice(colorHexStringOrArray) + Random.choice(colorHexStringOrArray) + Random.choice(colorHexStringOrArray);\n  }\n}\nfunction showBadge(appName, {\n  leftColor = \"#fff\",\n  rightColor = \"#444\",\n  leftBgColor = \"#35495e\",\n  rightBgColor = \"#00ffc0\"\n} = {}) {\n  console.log(`%c ${appName} %c v${\"0.3.3\"} ${\"a117dec\"} %c`, `background: ${leftBgColor}; padding: 2px; color: ${leftColor}; font-weight: bold; text-transform: uppercase;`, `background: ${rightBgColor}; padding: 2px; color: ${rightColor}; font-weight: bold; text-transform: uppercase;`, \"background: transparent\");\n}\nexport { EventsHandler, Random, isMobile, isTouchEvent, showBadge };\n", "/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low: number, high: number, value: number): number {\n  return Math.min(Math.max(low, value), high);\n}\n\nexport default guard;\n", "class ColorError extends Error {\n  constructor(color: string) {\n    super(`Failed to parse color: \"${color}\"`);\n  }\n}\n\nexport default ColorError;\n", "import guard from './guard';\nimport ColorError from './ColorError';\n\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\nfunction parseToRgba(color: string): [number, number, number, number] {\n  if (typeof color !== 'string') throw new ColorError(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n\n  let normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n\n  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n  if (reducedHexMatch) {\n    const arr = Array.from(reducedHexMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(r(x, 2), 16)),\n      parseInt(r(arr[3] || 'f', 2), 16) / 255,\n    ] as [number, number, number, number];\n  }\n\n  const hexMatch = hexRegex.exec(normalizedColor);\n  if (hexMatch) {\n    const arr = Array.from(hexMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(x, 16)),\n      parseInt(arr[3] || 'ff', 16) / 255,\n    ] as [number, number, number, number];\n  }\n\n  const rgbaMatch = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatch) {\n    const arr = Array.from(rgbaMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(x, 10)),\n      parseFloat(arr[3] || '1'),\n    ] as [number, number, number, number];\n  }\n\n  const hslaMatch = hslaRegex.exec(normalizedColor);\n  if (hslaMatch) {\n    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);\n    if (guard(0, 100, s) !== s) throw new ColorError(color);\n    if (guard(0, 100, l) !== l) throw new ColorError(color);\n    return [...hslToRgb(h, s, l), a || 1] as [number, number, number, number];\n  }\n\n  throw new ColorError(color);\n}\n\nfunction hash(str: string) {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return (hash >>> 0) % 2341;\n}\n\nconst colorToInt = (x: string) => parseInt(x.replace(/_/g, ''), 36);\n\nconst compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'\n  .split(' ')\n  .reduce((acc, next) => {\n    const key = colorToInt(next.substring(0, 3));\n    const hex = colorToInt(next.substring(3)).toString(16);\n\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    let prefix = '';\n    for (let i = 0; i < 6 - hex.length; i++) {\n      prefix += '0';\n    }\n\n    acc[key] = `${prefix}${hex}`;\n    return acc;\n  }, {} as { [key: string]: string });\n\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\nfunction nameToHex(color: string): string {\n  const normalizedColorName = color.toLowerCase().trim();\n  const result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError(color);\n  return `#${result}`;\n}\n\nconst r = (str: string, amount: number) =>\n  Array.from(Array(amount))\n    .map(() => str)\n    .join('');\n\nconst reducedHexRegex = new RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i');\nconst hexRegex = new RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i');\nconst rgbaRegex = new RegExp(\n  `^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*${r(\n    ',\\\\s*(\\\\d+)\\\\s*',\n    2\n  )}(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$`,\n  'i'\n);\nconst hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nconst namedColorRegex = /^[a-z]+$/i;\n\nconst roundColor = (color: number): number => {\n  return Math.round(color * 255);\n};\n\nconst hslToRgb = (\n  hue: number,\n  saturation: number,\n  lightness: number\n): [number, number, number] => {\n  let l = lightness / 100;\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor) as [number, number, number];\n  }\n\n  // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n  const huePrime = (((hue % 360) + 360) % 360) / 60;\n  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  const secondComponent = chroma * (1 - Math.abs((huePrime % 2) - 1));\n\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  const lightnessModification = l - chroma / 2;\n  const finalRed = red + lightnessModification;\n  const finalGreen = green + lightnessModification;\n  const finalBlue = blue + lightnessModification;\n\n  return [finalRed, finalGreen, finalBlue].map(roundColor) as [\n    number,\n    number,\n    number\n  ];\n};\n\nexport default parseToRgba;\n", "// taken from:\n// https://github.com/styled-components/polished/blob/a23a6a2bb26802b3d922d9c3b67bac3f3a54a310/src/internalHelpers/_rgbToHsl.js\nimport parseToRgba from './parseToRgba';\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\nfunction parseToHsla(color: string): [number, number, number, number] {\n  const [red, green, blue, alpha] = parseToRgba(color).map((value, index) =>\n    // 3rd index is alpha channel which is already normalized\n    index === 3 ? value : value / 255\n  );\n\n  const max = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const lightness = (max + min) / 2;\n\n  // achromatic\n  if (max === min) return [0, 0, lightness, alpha];\n\n  const delta = max - min;\n  const saturation =\n    lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n  const hue =\n    60 *\n    (red === max\n      ? (green - blue) / delta + (green < blue ? 6 : 0)\n      : green === max\n      ? (blue - red) / delta + 2\n      : (red - green) / delta + 4);\n\n  return [hue, saturation, lightness, alpha];\n}\n\nexport default parseToHsla;\n", "import guard from './guard';\n\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction hsla(\n  hue: number,\n  saturation: number,\n  lightness: number,\n  alpha: number\n): string {\n  return `hsla(${(hue % 360).toFixed()}, ${guard(\n    0,\n    100,\n    saturation * 100\n  ).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(\n    guard(0, 1, alpha).toFixed(3)\n  )})`;\n}\n\nexport default hsla;\n", "import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\nfunction adjustHue(color: string, degrees: number): string {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h + degrees, s, l, a);\n}\n\nexport default adjustHue;\n", "import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction darken(color: string, amount: number): string {\n  const [hue, saturation, lightness, alpha] = parseToHsla(color);\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n\nexport default darken;\n", "import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\nfunction desaturate(color: string, amount: number): string {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h, s - amount, l, a);\n}\n\nexport default desaturate;\n", "import parseToRgba from './parseToRgba';\n// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\nfunction getLuminance(color: string): number {\n  if (color === 'transparent') return 0;\n\n  function f(x: number) {\n    const channel = x / 255;\n    return channel <= 0.03928\n      ? channel / 12.92\n      : Math.pow(((channel + 0.055) / 1.055), 2.4);\n  }\n\n  const [r, g, b] = parseToRgba(color);\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n}\n\nexport default getLuminance;\n", "// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getContrast.js\nimport getLuminance from './getLuminance';\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\nfunction getContrast(color1: string, color2: string): number {\n  const luminance1 = getLuminance(color1);\n  const luminance2 = getLuminance(color2);\n\n  return luminance1 > luminance2\n    ? (luminance1 + 0.05) / (luminance2 + 0.05)\n    : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n\nexport default getContrast;\n", "import guard from './guard';\n\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction rgba(red: number, green: number, blue: number, alpha: number): string {\n  return `rgba(${guard(0, 255, red).toFixed()}, ${guard(\n    0,\n    255,\n    green\n  ).toFixed()}, ${guard(0, 255, blue).toFixed()}, ${parseFloat(\n    guard(0, 1, alpha).toFixed(3)\n  )})`;\n}\n\nexport default rgba;\n", "import parseToRgba from './parseToRgba';\nimport rgba from './rgba';\n\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\nfunction mix(color1: string, color2: string, weight: number): string {\n  const normalize = (n: number, index: number) =>\n    // 3rd index is alpha channel which is already normalized\n    index === 3 ? n : n / 255;\n\n  const [r1, g1, b1, a1] = parseToRgba(color1).map(normalize);\n  const [r2, g2, b2, a2] = parseToRgba(color2).map(normalize);\n\n  // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  const alphaDelta = a2 - a1;\n  const normalizedWeight = weight * 2 - 1;\n  const combinedWeight =\n    normalizedWeight * alphaDelta === -1\n      ? normalizedWeight\n      : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  const weight2 = (combinedWeight + 1) / 2;\n  const weight1 = 1 - weight2;\n\n  const r = (r1 * weight1 + r2 * weight2) * 255;\n  const g = (g1 * weight1 + g2 * weight2) * 255;\n  const b = (b1 * weight1 + b2 * weight2) * 255;\n  const a = a2 * weight + a1 * (1 - weight);\n\n  return rgba(r, g, b, a);\n}\n\nexport default mix;\n", "import mix from './mix';\nimport guard from './guard';\n\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\nfunction getScale(...colors: string[]): (n: number) => string {\n  return (n) => {\n    const lastIndex = colors.length - 1;\n    const lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    const highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n\n    const color1 = colors[lowIndex];\n    const color2 = colors[highIndex];\n\n    const unit = 1 / lastIndex;\n    const weight = (n - unit * lowIndex) / unit;\n\n    return mix(color1, color2, weight);\n  };\n}\n\nexport default getScale;\n", "import getContrast from './getContrast';\n\nconst guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7,\n};\n\n/**\n * Returns whether or not a color has bad contrast against a background\n * according to a given standard.\n */\nfunction hasBadContrast(\n  color: string,\n  standard: 'decorative' | 'readable' | 'aa' | 'aaa' = 'aa',\n  background: string = '#fff'\n): boolean {\n  return getContrast(color, background) < guidelines[standard];\n}\n\nexport default hasBadContrast;\n", "import darken from './darken';\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction lighten(color: string, amount: number): string {\n  return darken(color, -amount);\n}\n\nexport default lighten;\n", "import parseToRgba from './parseToRgba';\nimport rgba from './rgba';\n\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\nfunction transparentize(color: string, amount: number): string {\n  const [r, g, b, a] = parseToRgba(color);\n  return rgba(r, g, b, a - amount);\n}\n\nexport default transparentize;\n", "import transparentize from './transparentize';\n\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\nfunction opacify(color: string, amount: number): string {\n  return transparentize(color, -amount);\n}\n\nexport default opacify;\n", "import getLuminance from './getLuminance';\n\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\nfunction readableColorIsBlack(color: string): boolean {\n  return getLuminance(color) > 0.179;\n}\n\nexport default readableColorIsBlack;\n", "import readableColorIsBlack from './readableColorIsBlack';\n\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\nfunction readableColor(color: string): string {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n\nexport default readableColor;\n", "import desaturate from './desaturate';\n\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction saturate(color: string, amount: number): string {\n  return desaturate(color, -amount);\n}\n\nexport default saturate;\n", "import parseToRgba from './parseToRgba';\nimport guard from './guard';\n\n/**\n * Takes in any color and returns it as a hex code.\n */\nfunction toHex(color: string): string {\n  const [r, g, b, a] = parseToRgba(color);\n\n  let hex = (x: number) => {\n    const h = guard(0, 255, x).toString(16);\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    return h.length === 1 ? `0${h}` : h;\n  };\n\n  return `#${hex(r)}${hex(g)}${hex(b)}${a < 1 ? hex(Math.round(a * 255)) : ''}`;\n}\n\nexport default toHex;\n", "import parseToRgba from './parseToRgba';\nimport rgba from './rgba';\n\n/**\n * Takes in any color and returns it as an rgba string.\n */\nfunction toRgba(color: string): string {\n  return rgba(...parseToRgba(color));\n}\n\nexport default toRgba;\n", "import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Takes in any color and returns it as an hsla string.\n */\nfunction toHsla(color: string): string {\n  return hsla(...parseToHsla(color));\n}\n\nexport default toHsla;\n", "export type Options<Result> = {\n  isImmediate?: boolean;\n  maxWait?: number;\n  callback?: (data: Result) => void;\n};\n\nexport interface DebouncedFunction<\n  Args extends any[],\n  F extends (...args: Args) => any\n> {\n  (this: ThisParameterType<F>, ...args: Args): Promise<ReturnType<F>>;\n  cancel: (reason?: any) => void;\n}\n\ninterface DebouncedPromise<FunctionReturn> {\n  resolve: (result: FunctionReturn) => void;\n  reject: (reason?: any) => void;\n}\n\nexport function debounce<Args extends any[], F extends (...args: Args) => any>(\n  func: F,\n  waitMilliseconds = 50,\n  options: Options<ReturnType<F>> = {}\n): {\n  (this: ThisParameterType<F>, ...args: Parameters<F> & Args): Promise<\n    ReturnType<F>\n  >;\n  cancel: (reason?: any) => void;\n} {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  const isImmediate = options.isImmediate ?? false;\n  const callback = options.callback ?? false;\n  const maxWait = options.maxWait;\n  let lastInvokeTime = Date.now();\n\n  let promises: DebouncedPromise<ReturnType<F>>[] = [];\n\n  function nextInvokeTimeout() {\n    if (maxWait !== undefined) {\n      const timeSinceLastInvocation = Date.now() - lastInvokeTime;\n\n      if (timeSinceLastInvocation + waitMilliseconds >= maxWait) {\n        return maxWait - timeSinceLastInvocation;\n      }\n    }\n\n    return waitMilliseconds;\n  }\n\n  const debouncedFunction = function (\n    this: ThisParameterType<F>,\n    ...args: Parameters<F>\n  ) {\n    const context = this;\n    return new Promise<ReturnType<F>>((resolve, reject) => {\n      const invokeFunction = function () {\n        timeoutId = undefined;\n        lastInvokeTime = Date.now();\n        if (!isImmediate) {\n          const result = func.apply(context, args);\n          callback && callback(result);\n          promises.forEach(({ resolve }) => resolve(result));\n          promises = [];\n        }\n      };\n\n      const shouldCallNow = isImmediate && timeoutId === undefined;\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n\n      if (shouldCallNow) {\n        const result = func.apply(context, args);\n        callback && callback(result);\n        return resolve(result);\n      }\n      promises.push({ resolve, reject });\n    });\n  };\n\n  debouncedFunction.cancel = function (reason?: any) {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    promises.forEach(({ reject }) => reject(reason));\n    promises = [];\n  };\n\n  return debouncedFunction;\n}\n"],
  "mappings": "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",
  "names": []
}
