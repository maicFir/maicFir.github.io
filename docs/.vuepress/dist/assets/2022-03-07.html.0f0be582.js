import{_ as e,o as t,c as o,a as s,d as p,e as c,b as n,r as l}from"./app.b0cbb33e.js";const i={},u=c(`<p>\u6700\u8FD1\u534A\u5E74\u9879\u76EE\u5347\u7EA7 ts,\u4E00\u8FB9\u770B\u6587\u6863\uFF0C\u4E00\u8FB9\u5B9E\u8DF5\uFF0C<code>ts</code>\u57FA\u7840\u8BED\u6CD5\u975E\u5E38\u7B80\u5355\uFF0C\u4F46\u662F\u5199\u597D<code>ts</code>\u5C31\u975E\u5E38\u4E0D\u7B80\u5355\uFF0C<code>typescript</code>\u4E25\u683C\u6765\u8BB2\u7B97\u662F\u4E00\u95E8\u5F3A\u7C7B\u578B\u8BED\u8A00\uFF0C\u5B83\u8D4B\u4E88<code>js</code>\u7C7B\u578B\u4F53\u7CFB\uFF0C\u8BA9\u5F00\u53D1\u8005\u5199<code>js</code>\u66F4\u52A0\u4E25\u8C28\uFF0C\u5E76\u4E14\u5B83\u5177\u5907\u5F3A\u5927\u7684\u7C7B\u578B\u63A8\u65AD\uFF0C\u5E76\u4E14\u80FD\u5728<code>node</code>\u548C<code>\u6D4F\u89C8\u5668</code>\u4E2D\u8FD0\u884C\u3002\u5BF9\u4E8E\u9879\u76EE\u800C\u8A00\uFF0C\u4F7F\u7528 typescipt \u5BF9\u63D0\u5347\u9879\u76EE\u7684\u89C4\u8303\u4E0E\u4E25\u8C28\u6027\u66F4\u52A0\u53CB\u597D\u3002</p><p>\u672C\u6587\u53EA\u505A\u7B14\u8005\u9879\u76EE\u4E2D\u5E38\u9047\u5230\u7684\u4E00\u4E9B<code>ts</code>\u7ECF\u9A8C\uFF0C\u5E0C\u671B\u5728\u9879\u76EE\u4E2D\u4F60\u80FD\u7528\u5F97\u5230\u3002</p><p>\u6B63\u6587\u5F00\u59CB...</p><h3 id="\u5B9A\u4E49\u5E38\u7528\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u5E38\u7528\u7C7B\u578B" aria-hidden="true">#</a> \u5B9A\u4E49\u5E38\u7528\u7C7B\u578B</h3><p>type<code>[string|number|boolean|Array|Object|Function]</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name">NameType</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> nameStr<span class="token operator">:</span> NameType <span class="token operator">=</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">;</span> <span class="token comment">// const nameStr: string</span>
<span class="token comment">//or</span>
<span class="token keyword">const</span> nameStr2<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// number</span>
<span class="token keyword">type</span> <span class="token class-name">AgeType</span> <span class="token operator">=</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> age<span class="token operator">:</span> AgeType <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">const</span> age2<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> age2<span class="token operator">:</span> AgeType <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// const age: number \u4E0D\u80FD\u5C06\u7C7B\u578B\u201Cstring\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201Cnumber\u201D\u3002</span>
<span class="token comment">// Array&lt;string&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">NamesType</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> students<span class="token operator">:</span> NamesType <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// or \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">type</span> <span class="token class-name">NamesType2</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> students2<span class="token operator">:</span> NamesType2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9A\u4E49\u6570\u7EC4\u5BF9\u8C61\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u6570\u7EC4\u5BF9\u8C61\u7684\u7C7B\u578B" aria-hidden="true">#</a> \u5B9A\u4E49\u6570\u7EC4\u5BF9\u8C61\u7684\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F8B\u5982\u4E00\u4E2A\u6570\u7EC4</span>
<span class="token doc-comment comment">/**
 const arr = [<span class="token punctuation">{</span>
  name: &#39;Maic&#39;,
  age: 18,
  lovePlay: &#39;basketball&#39;
<span class="token punctuation">}</span>];
**/</span>
<span class="token comment">// \u5982\u4F55\u5B9A\u4E49\u8BE5\u6570\u7EC4\u5185\u90E8\u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">itemArr</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr<span class="token operator">:</span> itemArr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;tick&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u578B\u63A8\u65AD\u548C\u63D0\u793A <img src="https://files.mdnice.com/user/24614/92ffa37a-eabe-47da-bc88-ac50007d4922.png" alt=""></p><h3 id="\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B" aria-hidden="true">#</a> \u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Object</span>
<span class="token keyword">type</span> <span class="token class-name">Attrs</span> <span class="token operator">=</span> Object<span class="token punctuation">;</span>
<span class="token keyword">const</span> personObj<span class="token operator">:</span> Attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">type</span> <span class="token class-name">nameObj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> personObj2<span class="token operator">:</span> nameObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;\u5927\u5927&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>personObj2<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u5B9A\u4E49\u51FD\u6570\u7C7B\u578B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>type Fn <span class="token operator">=</span> Function<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">getAge</span><span class="token operator">:</span> <span class="token function-variable function">Fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// const getAge: Function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u51FD\u6570\u5F62\u53C2\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5F62\u53C2\u7C7B\u578B" aria-hidden="true">#</a> \u51FD\u6570\u5F62\u53C2\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NameType</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span>name<span class="token operator">:</span> NameType<span class="token punctuation">,</span> age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u7684\u540D\u5B57\u662F\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// or</span>
<span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u7684\u540D\u5B57\u662F\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">getName</span><span class="token punctuation">(</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u4EE5\u4E0A\u7B2C\u4E8C\u4E2A\u5F62\u53C2\u4E2D<code>?age:number</code>\u4EE3\u8868\u8FD9\u4E2A\u5F62\u53C2\u53EF\u4F20\u53EF\u4E0D\u4F20,\u5E76\u4E14\u8FD9\u4E2A\u51FD\u6570\u8FD4\u56DE\u7684\u503C\u7C7B\u578B\u662F\u4E00\u4E2A<code>\u5B57\u7B26\u4E32</code></p><h3 id="\u8054\u5408\u7C7B\u578B-string-number" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B-string-number" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B[string[] | number]</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">idTypes</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ids<span class="token operator">:</span> idTypes <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">const</span> ids2<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getIds</span><span class="token punctuation">(</span>id<span class="token operator">:</span> idTypes<span class="token punctuation">,</span> name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// console.log(id.join(&#39;,&#39;)); \u5982\u679C\u4E0D\u5224\u65AD\u7C7B\u578B\uFF0C\u5219\u4F1A\u76F4\u63A5\u63D0\u793A</span>
  <span class="token comment">// \u7C7B\u578B\u201CidTypes\u201D\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027\u201Cjoin\u201D\u3002</span>
  <span class="token comment">// \u7C7B\u578B\u201Cnumber\u201D\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027\u201Cjoin\u201D\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">getIds</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>toString</code>\u8FD9\u4E2A\u65B9\u6CD5\u5728\u6570\u7EC4\u548C<code>number</code>\u4E2D\u90FD\u6709\u8BE5\u65B9\u6CD5\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4F7F\u7528\uFF0C\u5982\u679C\u67D0\u4E2A\u65B9\u6CD5\u53EA\u5B58\u5728\u4E8E\u4E00\u79CD\u7C7B\u578B\u4E2D\uFF0C\u5219\u8981<code>\u7C7B\u578B\u6536\u7A84</code>\u5224\u65AD\u8BE5\u7C7B\u578B</p><h3 id="interface-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#interface-\u63A5\u53E3" aria-hidden="true">#</a> interface \u63A5\u53E3</h3><p><code>interface</code>\u6211\u4EEC\u53EF\u4EE5\u7406\u89E3\u5B83\u662F\u5B9A\u4E49\u5BF9\u8C61\u7684\u4E00\u79CD\u7C7B\u578B\uFF0C\u5E76\u4E14\u5B83\u5177\u5907<code>\u6269\u5C55</code>\u5BF9\u8C61\u5C5E\u6027\uFF0C\u7EE7\u627F\u5BF9\u8C61\u7279\u5F81 \u5728\u4E4B\u524D\u6211\u4EEC\u7528<code>type</code>\u5B9A\u4E49\u4E86\u5BF9\u8C61\u6570\u636E</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">nameObj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> personObj2<span class="token operator">:</span> nameObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;\u5927\u5927&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7528<code>interface</code>\u5B9A\u4E49\u5BF9\u8C61</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">personObj2</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> personObj4<span class="token operator">:</span> personObj2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u9700\u8981\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\u7684\u5C5E\u6027\u662F<code>\u53EF\u9009\u7684</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">personObj2</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u9700\u8981\u5728\u5B9A\u4E49\u7684\u5C5E\u6027\u540E\u9762\u52A0\u4E2A<code>?</code>\u5C31\u884C</p><h3 id="extends-\u7EE7\u627F\u5E76\u6269\u5C55\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#extends-\u7EE7\u627F\u5E76\u6269\u5C55\u5C5E\u6027" aria-hidden="true">#</a> extends \u7EE7\u627F\u5E76\u6269\u5C55\u5C5E\u6027</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// personObj5\u7EE7\u627FpersonObj2\u5C5E\u6027\uFF0C\u6240\u4EE5personObj5\u5177\u6709personObj2\u7684\u6240\u6709\u5C5E\u6027</span>
<span class="token keyword">interface</span> <span class="token class-name">personObj5</span> <span class="token keyword">extends</span> <span class="token class-name">personObj2</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">personObj5</span> <span class="token keyword">extends</span> <span class="token class-name">personObj2</span> <span class="token punctuation">{</span>
  money<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> personObj5<span class="token operator">:</span> personObj5 <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
  money<span class="token operator">:</span> <span class="token number">1000</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>type</code>\u901A\u8FC7\u4EA4\u96C6\u6269\u5C55\u5C5E\u6027</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/*** type \u901A\u8FC7\u4EA4\u96C6\u6269\u5C55\u5C5E\u6027 */</span>
<span class="token keyword">type</span> <span class="token class-name">personObj6</span> <span class="token operator">=</span> personObj2 <span class="token operator">&amp;</span> <span class="token punctuation">{</span> money<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> personObj6<span class="token operator">:</span> personObj6 <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
  money<span class="token operator">:</span> <span class="token number">100</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u6CE8\u610F\u6BD4\u8F83\u4E0B<code>type</code>\u4E0E<code>interfance</code>\u7684\u533A\u522B</p><p>\u76F8\u540C\u70B9</p><p>\u6240\u6709\u5BF9\u8C61\u7C7B\u578B\u90FD\u53EF\u4EE5\u7528<code>type</code>\u6216\u8005<code>interface</code>\u6765\u5B9A\u4E49\uFF0C<code>type</code>\u5728\u5B9E\u9645\u9879\u76EE\u4E2D\u66F4\u5E7F\u4E49\u4E9B\uFF0C\u800C<code>interface</code>\u66F4\u591A\u7684\u65F6\u5019\u63CF\u8FF0\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\u66F4\u72ED\u4E49\u4E00\u4E9B\uFF0C\u4ED6\u4EEC\u90FD\u53EF\u4EE5\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B</p><p>\u4E0D\u540C\u70B9</p><p><code>type</code> \u5B9A\u4E49\u597D\u4E86\u7684\u6570\u636E\uFF0C\u4E0D\u80FD\u91CD\u8F7D\uFF0C\u4E14\u6269\u5C55\u5C5E\u6027\u9700\u8981\u4F7F\u7528<code>\u4EA4\u96C6\u6269\u5C55&amp;</code></p><p><code>interface</code>\u53EF\u4EE5\u91CD\u8F7D\uFF0C\u6269\u5C55\u5C5E\u6027\u9700\u4F7F\u7528<code>extends</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Animal</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u6807\u8BC6\u7B26\u201CAnimal\u201D\u91CD\u590D\u3002ts(2300)</span>
<span class="token comment">// type\u5B9A\u4E49\u5B8C\u4E86\u7684\u7C7B\u578B,\u4E0D\u80FD\u91CD\u590D\u5B9A\u4E49</span>

<span class="token comment">// type Animal = {</span>
<span class="token comment">//   age: string;</span>
<span class="token comment">// }</span>
<span class="token comment">// &amp; \u6269\u5C55\u5C5E\u6027</span>
<span class="token keyword">type</span> <span class="token class-name">NewAnimal</span> <span class="token operator">=</span> Animal <span class="token operator">&amp;</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> dog<span class="token operator">:</span> Dog <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">childDog</span> <span class="token keyword">extends</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>
  money<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cDog<span class="token operator">:</span> childDog <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;xx&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
  money<span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="as-\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#as-\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> as \u7C7B\u578B\u65AD\u8A00</h3><p>\u5728\u9879\u76EE\u4E2D\uFF0C\u5982\u679C\u4F60\u4E0D\u77E5\u9053\u8BE5\u5F62\u53C2\u6216\u8005\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u53EA\u662F\u4E3A\u4E86\u5FEB\u70B9\u7CCA\u9879\u76EE\uFF0C\u4E0D\u60F3\u88AB\u8FD9\u4E2A\u7C7B\u578B\u6240\u62D8\u675F\uFF0C\u90A3\u4E48\u4F60\u53EF\u4EE5\u7528<code>as any</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">$id</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">elm</span> <span class="token operator">=</span> HTMLElement<span class="token punctuation">;</span>
<span class="token keyword">const</span> dom<span class="token operator">:</span> elm <span class="token operator">=</span> <span class="token function">$id</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">namesType</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getNames</span><span class="token punctuation">(</span>name<span class="token operator">:</span> namesType <span class="token operator">|</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">getNames</span><span class="token punctuation">(</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// or getNames(123)</span>

<span class="token keyword">function</span> <span class="token function">handlequest</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> methods<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> params<span class="token operator">:</span> Object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token string">&#39;https://www.baidu.com&#39;</span><span class="token punctuation">,</span>
  methods<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  params<span class="token operator">:</span> <span class="token punctuation">{</span>
    q<span class="token operator">:</span> <span class="token string">&#39;test&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token function">handlequest</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>url<span class="token punctuation">,</span> options<span class="token punctuation">.</span>methods <span class="token keyword">as</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="in-\u6536\u7A84\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#in-\u6536\u7A84\u7C7B\u578B" aria-hidden="true">#</a> in \u6536\u7A84\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">shopList</span> <span class="token punctuation">{</span>
  js<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  node<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">printShop</span><span class="token punctuation">(</span>books<span class="token operator">:</span> shopList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;js&#39;</span> <span class="token keyword">in</span> books<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u4E70\u4E86 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>books<span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span> <span class="token keyword">in</span> books<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u8FD9\u662F\u4E00\u672C </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>books<span class="token punctuation">[</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u4E66\u7C4D</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">printShop</span><span class="token punctuation">(</span><span class="token punctuation">{</span> js<span class="token operator">:</span> <span class="token string">&#39;js\u8BBE\u8BA1\u6A21\u5F0F&#39;</span><span class="token punctuation">,</span> node<span class="token operator">:</span> <span class="token string">&#39;nodejs\u5165\u95E8\u5230\u653E\u5F03&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u4E00\u4E2A\u7684<code>enums</code>\u503C\u7684<code>value</code>\u505A\u4E3A\u53E6\u4E00\u4E2A\u5BF9\u8C61\u7684<code>key</code>,\u5C06\u4E00\u4E2A\u679A\u4E3E\u503C\u7684<code>key</code>\u4F5C\u4E3A\u4E00\u4E2A\u5BF9\u8C61\u7684<code>value</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token keyword">enum</span> <span class="token constant">FOODS</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> <span class="token string">&#39;\u9E2D\u5B50&#39;</span><span class="token punctuation">,</span>
  b <span class="token operator">=</span> <span class="token string">&#39;\u9E21\u817F&#39;</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">FOODS</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">values</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> <span class="token constant">FOODS</span><span class="token punctuation">;</span> <span class="token comment">// type values = &quot;a&quot; | &quot;b&quot;</span>
<span class="token keyword">const</span> foods<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token constant">FOODS</span><span class="token punctuation">]</span><span class="token operator">:</span> values<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">FOODS</span><span class="token punctuation">.</span>a<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token constant">FOODS</span><span class="token punctuation">.</span>b<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * const foods: <span class="token punctuation">{</span>
    \u9E2D\u5B50: &quot;a&quot; | &quot;b&quot;;
    \u9E21\u817F: &quot;a&quot; | &quot;b&quot;;
<span class="token punctuation">}</span>
 */</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foods<span class="token punctuation">[</span><span class="token constant">FOODS</span><span class="token punctuation">.</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="instanceof-\u6536\u7A84" tabindex="-1"><a class="header-anchor" href="#instanceof-\u6536\u7A84" aria-hidden="true">#</a> instanceof \u6536\u7A84</h3><p>\u6211\u4EEC\u53EF\u4EE5\u7528<code>instanceof</code>\u6536\u7A84\u6570\u636E\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">transformParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>params <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>params <span class="token keyword">instanceof</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">transformParams</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">transformParams</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="is-\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#is-\u5224\u65AD" aria-hidden="true">#</a> is \u5224\u65AD</h3><p>\u6211\u4E48\u5224\u65AD\u4E00\u4E2A\u5F62\u53C2\u662F\u5426\u5728\u4E00\u4E2A\u7C7B\u578B\u4E2D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * is \u5224\u65AD\u53C2\u6570\u7C7B\u578B
 */</span>
<span class="token keyword">interface</span> <span class="token class-name">Fish</span> <span class="token punctuation">{</span>
  swim<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Bird</span> <span class="token punctuation">{</span>
  fly<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">isFish</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Fish <span class="token operator">|</span> Bird<span class="token punctuation">)</span><span class="token operator">:</span> arg <span class="token keyword">is</span> Fish <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>arg <span class="token keyword">as</span> Fish<span class="token punctuation">)</span><span class="token punctuation">.</span>swim <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> isfish <span class="token operator">=</span> <span class="token function">isFish</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function-variable function">swim</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> isBird <span class="token operator">=</span> <span class="token function">isFish</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function-variable function">fly</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rest-params" tabindex="-1"><a class="header-anchor" href="#rest-params" aria-hidden="true">#</a> rest params</h3><p>\u53EF\u4EE5\u8DDF<code>es6</code>\u4E00\u6837<code>...</code>\u6269\u5C55\u591A\u4E2A\u53C2\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * rest params
 */</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token operator">...</span>arg<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s <span class="token operator">+</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3,5,6,7]</span>
<span class="token keyword">interface</span> <span class="token class-name">params</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  fav<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> curentParams<span class="token operator">:</span> params <span class="token operator">=</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> fav<span class="token operator">:</span> <span class="token string">&#39;play&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> <span class="token operator">...</span>arg <span class="token punctuation">}</span> <span class="token operator">=</span> curentParams<span class="token punctuation">;</span>
<span class="token comment">/*
const arg: {
  name: string;
  age: number;
  fav: string;
}
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53EF\u9009\u5C5E\u6027-or-\u53EA\u8BFB\u5C5E\u6027-readonly" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u5C5E\u6027-or-\u53EA\u8BFB\u5C5E\u6027-readonly" aria-hidden="true">#</a> \u53EF\u9009\u5C5E\u6027[?]or \u53EA\u8BFB\u5C5E\u6027[readonly]</h3><p>\u6211\u4EEC\u60F3\u4E00\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\u53EF\u6709\u53EF\u65E0\uFF0C\u6216\u8005\u4E00\u4E2A\u5BF9\u8C61\u5C5E\u6027\u4E0D\u80FD\u4FEE\u6539</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/***
 *
 * \u5BF9\u8C61\u5C5E\u6027\u4FEE\u9970\u7B26  ? \u53EF\u9009  readonly \u53EA\u8BFB
 */</span>
<span class="token keyword">interface</span> <span class="token class-name">params2</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> curentParams2<span class="token operator">:</span> params2 <span class="token operator">=</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// age \u53EF\u6709\u53EF\u65E0</span>
<span class="token comment">// curentParams2.id = 456; // \u65E0\u6CD5\u5206\u914D\u5230 &quot;id&quot; \uFF0C\u56E0\u4E3A\u5B83\u662F\u53EA\u8BFB\u5C5E\u6027\u3002 readonly id\u7684\u5C5E\u6027\u4E0D\u80FD\u4FEE\u6539</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BF9\u8C61\u7D22\u5F15\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7D22\u5F15\u7C7B\u578B" aria-hidden="true">#</a> \u5BF9\u8C61\u7D22\u5F15\u7C7B\u578B</h3><p>\u901A\u5E38\u6211\u4EEC\u4E00\u4E2A\u5BF9\u8C61\u7684<code>key</code>\u662F\u5B57\u7B26\u4E32\u6216\u8005\u662F\u7D22\u5F15\uFF0C\u90A3\u4E48\u6B63\u786E\u5B9A\u4E49\u5BF9\u8C61\u7D22\u5F15\u7684\u7C7B\u578B\u5C31\u5982\u4E0B\u9762</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u5BF9\u8C61\u5C5E\u6027\u7D22\u5F15\u7C7B\u578B
 */</span>
<span class="token keyword">interface</span> <span class="token class-name">params3</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> params3<span class="token operator">:</span> params3 <span class="token operator">=</span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token operator">:</span> <span class="token number">123</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u9700\u8981\u5C06\u4E00\u4E2A\u5BF9\u8C61<code>key</code>\u58F0\u660E\u6210\u53E6\u4E00\u4E2A\u5BF9\u8C61\u7684<code>key</code>\u5462\uFF1F\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>[key in xxx]: string</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> <span class="token constant">LANGUAGE</span> <span class="token punctuation">{</span>
  ru <span class="token operator">=</span> <span class="token string">&#39;\u4FC4\u7F57\u65AF&#39;</span><span class="token punctuation">,</span>
  ch <span class="token operator">=</span> <span class="token string">&#39;\u4E2D\u56FD&#39;</span><span class="token punctuation">,</span>
  usa <span class="token operator">=</span> <span class="token string">&#39;\u7F8E\u56FD&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">languKey</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> <span class="token constant">LANGUAGE</span><span class="token punctuation">;</span> <span class="token comment">// type languKey = &quot;ru&quot; | &quot;ch&quot; | &quot;usa&quot;</span>
<span class="token doc-comment comment">/**
 * const lang: <span class="token punctuation">{</span>
    ru: string;
    ch: string;
    usa: string;
<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">const</span> lang<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key <span class="token keyword">in</span> languKey<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  ru<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
  ch<span class="token operator">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span>
  usa<span class="token operator">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4EA4\u53C9\u7C7B\u578B-x-b" tabindex="-1"><a class="header-anchor" href="#\u4EA4\u53C9\u7C7B\u578B-x-b" aria-hidden="true">#</a> \u4EA4\u53C9\u7C7B\u578B x &amp; b</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u4EA4\u53C9\u7C7B\u578B
 */</span>
<span class="token keyword">interface</span> <span class="token class-name">span</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">a</span> <span class="token punctuation">{</span>
  cursor<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">divType</span> <span class="token operator">=</span> span <span class="token operator">&amp;</span> a<span class="token punctuation">;</span>

<span class="token keyword">const</span> divStyle<span class="token operator">:</span> divType <span class="token operator">=</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token string">&#39;#111&#39;</span><span class="token punctuation">,</span>
  cursor<span class="token operator">:</span> <span class="token string">&#39;pointer&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>divStyle<span class="token punctuation">.</span>color<span class="token punctuation">,</span> divStyle<span class="token punctuation">.</span>cursor<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u6211\u4EEC\u4F7F\u7528<code>extends</code>\u4E5F\u4E00\u6837\u53EF\u4EE5\u4E00\u6837\u7684\u6548\u679C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">a</span> <span class="token punctuation">{</span>
  cursor<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// img \u7C7B\u578B\u540C\u65F6\u62E5\u6709cursor\u4E0E{color: string}\u4E24\u4E2A\u5C5E\u6027\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">img</span> <span class="token keyword">extends</span> <span class="token class-name">a</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> imgStyle<span class="token operator">:</span> img <span class="token operator">=</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token string">&#39;#111&#39;</span><span class="token punctuation">,</span>
  cursor<span class="token operator">:</span> <span class="token string">&#39;pointer&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5229\u7528\u6CDB\u578B\u590D\u7528-interface" tabindex="-1"><a class="header-anchor" href="#\u5229\u7528\u6CDB\u578B\u590D\u7528-interface" aria-hidden="true">#</a> \u5229\u7528\u6CDB\u578B\u590D\u7528 interface</h3><p>\u901A\u5E38\u5728\u5B9E\u9645\u4E1A\u52A1\u4E2D\uFF0C \u901A\u7528\u7684\u5C5E\u6027\u503C\u53EF\u80FD\u7C7B\u578B\u4E0D\u540C\u90A3\u4E48\u6211\u4EEC\u4F1A\u91CD\u590D\u5B9A\u4E49\u5F88\u591A\u7C7B\u578B\uFF0C\u6BD4\u5982\u4E0B\u9762</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">obj1</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">obj2</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj1<span class="token operator">:</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj2<span class="token operator">:</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token string">&#39;111&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u8FD9\u4E48\u505A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5C06\u591A\u884C\u7C7B\u578B\u5408\u5E76\u6210\u4E00\u4E2A</span>
<span class="token keyword">interface</span> <span class="token class-name">objType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj3<span class="token operator">:</span> objType<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj4<span class="token operator">:</span> objType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u770B\u5230<code>interface objType&lt;T&gt; { a: T }</code>,\u6211\u4EEC\u600E\u4E48\u7406\u89E3\uFF0C\u9996\u5148<code>objType</code>\u4F60\u53EF\u4EE5\u628A\u5B83\u770B\u6210\u4E00\u4E2A\u63A5\u53E3\u540D\u79F0\uFF0C\u5176\u5B9E\u4E0E\u666E\u901A\u7533\u660E\u4E00\u4E2A<code>\u666E\u901A\u63A5\u53E3\u540D</code>\u4E00\u6837,<code>T</code>\u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u5F62\u53C2\uFF0C\u4E00\u4E2A\u5360\u4F4D\u7B26\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u5B9E\u9645\u7528\u7684\u5730\u65B9\u7075\u6D3B\u7684\u4F20\u5165\u4E0D\u540C\u7C7B\u578B\u3002</p><h3 id="type-\u6CDB\u578B\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#type-\u6CDB\u578B\u590D\u7528" aria-hidden="true">#</a> type \u6CDB\u578B\u590D\u7528</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Type\u6CDB\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">obj2</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">obj4Type<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  content<span class="token operator">:</span> Type<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj5<span class="token operator">:</span> obj4Type<span class="token operator">&lt;</span>obj2<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  content<span class="token operator">:</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj5<span class="token punctuation">.</span>content<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65B9\u6CD5\u6CDB\u578B\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u6CDB\u578B\u590D\u7528" aria-hidden="true">#</a> \u65B9\u6CD5\u6CDB\u578B\u590D\u7528</h3><p>\u901A\u5E38\u6211\u4EEC\u5728\u9879\u76EE\u4E2D\u7ECF\u5E38\u770B\u5230\u5C01\u88C5\u7684\u5DE5\u5177\u51FD\u6570\u4E2D\u6709\u6CDB\u578B\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u7B80\u5355\u7684\u5199\u4E2A,\u5177\u4F53\u53EF\u4EE5\u770B\u4E0B\u4E0B\u9762\u7B80\u5355\u7684\u4E00\u4E2A\u4E00\u4E2A\u5DE5\u5177\u8BF7\u6C42\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/***
 *
 * \u65B9\u6CD5\u6CDB\u578B
 */</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">genterFeach</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> config<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
        body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token operator">...</span>config
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">post</span><span class="token operator">:</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> config<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
        body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token operator">...</span>config
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">paramsF</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> useInfo <span class="token operator">=</span> <span class="token generic-function"><span class="token function">genterFeach</span><span class="token generic class-name"><span class="token operator">&lt;</span>paramsF<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;/v1/useInfo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> login <span class="token operator">=</span> <span class="token generic-function"><span class="token function">genterFeach</span><span class="token generic class-name"><span class="token operator">&lt;</span>paramsF<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;/v1/login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
useInfo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">111</span><span class="token punctuation">,</span> password<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
login<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">111</span><span class="token punctuation">,</span> password<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readonly-\u53EA\u8BFB" tabindex="-1"><a class="header-anchor" href="#readonly-\u53EA\u8BFB" aria-hidden="true">#</a> readOnly \u53EA\u8BFB</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * readonly
 */</span>
<span class="token keyword">type</span> <span class="token class-name">readData</span> <span class="token operator">=</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data<span class="token operator">:</span> readData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// data[1] = 20; \u65E0\u6CD5\u5206\u914D\u5230 &quot;1&quot; \uFF0C\u56E0\u4E3A\u5B83\u662F\u53EA\u8BFB\u5C5E\u6027</span>
<span class="token keyword">type</span> <span class="token class-name">readData2<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data2<span class="token operator">:</span> readData2<span class="token operator">&lt;</span><span class="token keyword">readonly</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// data2[0] = &#39;tom&#39;;// \u7C7B\u578B\u201Creadonly string[]\u201D\u4E2D\u7684\u7D22\u5F15\u7B7E\u540D\u4EC5\u5141\u8BB8\u8BFB\u53D6</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="xx-xx-xx-as-const" tabindex="-1"><a class="header-anchor" href="#xx-xx-xx-as-const" aria-hidden="true">#</a> [xx,xx,xx] as const</h3><p>\u5185\u90E8\u5143\u7D20\u4F1A\u53D8\u6210\u4E00\u4E2A\u5E38\u91CF\uFF0C\u4E0D\u53EF\u4FEE\u6539</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> strArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">strVal</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> strArr<span class="token punctuation">;</span>

<span class="token keyword">const</span> strArr2<span class="token operator">:</span> strVal <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getStrArr</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// getStrArr(strArr);// \u7C7B\u578B &quot;readonly [&quot;a&quot;, &quot;b&quot;, 3]&quot; \u4E3A &quot;readonly&quot;\uFF0C\u4E0D\u80FD\u5206\u914D\u7ED9\u53EF\u53D8\u7C7B\u578B &quot;[string, string, number]&quot;\u3002</span>

<span class="token keyword">function</span> <span class="token function">getStrArr2</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span><span class="token operator">:</span> strVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">getStrArr2</span><span class="token punctuation">(</span>strArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h3><p>\u5BF9\u4E8E<code>\u6CDB\u578B</code>\u5728\u7B14\u8005\u521D\u6B21\u9047\u89C1\u5979\u65F6\uFF0C\u8FD8\u662F\u76F8\u5F53\u964C\u751F\u7684\uFF0C\u611F\u89C9\u8FD9\u8BCD\u5F88\u62BD\u8C61\uFF0C\u4E0D\u597D\u7406\u89E3\uFF0C\u5149\u770B\u522B\u4EBA\u5199\u7684\uFF0C\u4E00\u5806\u6CDB\u578B\uFF0C\u6216\u8BB8\u589E\u52A0\u4E86\u9605\u8BFB\u4EE3\u7801\u7684\u590D\u6742\u5EA6\uFF0C\u4F46\u662F\u6CDB\u578B\u7528\u597D\u4E86\uFF0C\u90A3\u4E48\u4F1A\u6781\u5927\u7684\u589E\u52A0\u4EE3\u7801\u7684\u590D\u7528\u5EA6\u3002\u5F53\u7136\uFF0C\u7B80\u5355\u4E8B\u60C5\u590D\u6742\u5316\u4E86\uFF0C\u90A3\u4E48\u6CDB\u578B\u4E5F\u5BB9\u6613\u51FA\u9519\uFF0C\u4EE3\u7801\u4E5F\u53D8\u5F97\u4E0D\u6613\u8BFB\u3002</p><p>\u6211\u4EEC\u5199\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u6765\u611F\u53D7\u4E00\u4E0B\u6CDB\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">resopnseID</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">responseName</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> responseId<span class="token operator">:</span> resopnseID <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token number">123</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> responseName<span class="token operator">:</span> responseName <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u60F3<code>resopnseID</code>\u6216\u8005<code>responseName</code>\u9AD8\u5EA6\u590D\u7528\u5462\uFF0C\u5982\u679C\u6709\u5F88\u591A\u7C7B\u4F3C\u7684\u5B57\u6BB5\uFF0C\u90A3\u4E48\u6211\u662F\u4E0D\u662F\u8981\u5199\u5F88\u591A\u8FD9\u79CD\u63A5\u53E3\u7C7B\u578B\u5462</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">keysType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">V</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> responseId2<span class="token operator">:</span> keysType<span class="token operator">&lt;</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> responseName2<span class="token operator">:</span> keysType<span class="token operator">&lt;</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseName2<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7C7B\u578B\u201CkeysType&lt;{ name: string; }, string&gt;\u201D\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027\u201Cage\u201D\u3002</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseName2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u51FD\u6570\u6CDB\u578B</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">setParamsType</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">setParamsType</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;maic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">setParamsType</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u4E0B\u9762\u7B49\u4EF7\uFF0C\u53EF\u4EE5\u7528<code>interface</code>\u7533\u660E\u51FD\u6570\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u63A5\u53E3\u6CDB\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">paramsType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">setParamsType</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> myParams<span class="token operator">:</span> parsType<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> setParamsType<span class="token punctuation">;</span>
<span class="token comment">// type \u6CDB\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">parsType2<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myParams2<span class="token operator">:</span> parsType2<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> setParamsType<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6CDB\u578B" aria-hidden="true">#</a> \u7C7B\u6CDB\u578B</h3><p>\u6211\u4EEC\u5728\u7528<code>class</code>\u7533\u660E\u7C7B\u65F6\uFF0C\u5C31\u53EF\u4EE5\u7EA6\u5B9A\u7C7B\u4E2D\u6210\u5458\u5C5E\u6027\u7684\u7C7B\u578B\u4EE5\u53CA<code>class</code>\u5185\u90E8\u65B9\u6CD5\u8FD4\u56DE\u7684\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Calculate<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  initNum<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
  max<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Calculate<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span>initNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">const</span> cal2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Calculate<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span>max <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
cal<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cal<span class="token punctuation">.</span>max<span class="token punctuation">,</span> <span class="token string">&#39;456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7EA6\u675F\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u7EA6\u675F\u6CDB\u578B" aria-hidden="true">#</a> \u7EA6\u675F\u6CDB\u578B</h3><p>\u5728\u5E73\u65F6\u9879\u76EE\u4E2D\u6211\u4EEC\u4F7F\u7528\u6CDB\u578B\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u6709\u65F6\u5019\uFF0C\u51FD\u6570\u5185\u90E8\u4F7F\u7528\u53C2\u6570\u65F6\uFF0C\u5F80\u5F80\u4F1A\u63D0\u793A\u5C5E\u6027\u4E0D\u5B58\u5728\uFF0C\u6BD4\u5982</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u7C7B\u578B\u201CT\u201D\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027\u201Cid\u201D\u3002</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getParams</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8FDB\u884Cxxx\u64CD\u4F5C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u6211\u4EEC\u5C31\u53EF\u4EE5\u5229\u7528<code>extends</code>\u7EA6\u675F\u6CDB\u578B\u505A\u5230\u51FD\u6570\u5185\u90E8\u80FD\u6B63\u786E\u8BBF\u95EE</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getParams</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8FDB\u884Cxxx\u64CD\u4F5C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">parmasType</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getParams2</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> parmasType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8FDB\u884Cxxx\u64CD\u4F5C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u770B\u4E00\u6BB5\u539F\u578B\u5C5E\u6027\u63A8\u65AD\u4E0E\u7EA6\u675F,\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\u6784\u9020\u51FD\u6570\u4E0E\u5B9E\u4F8B\u7684\u5173\u7CFB</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Animal2</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;animal&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Sleep</span> <span class="token punctuation">{</span>
  hour<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Bee</span> <span class="token keyword">extends</span> <span class="token class-name">Animal2</span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  action<span class="token operator">:</span> Sleep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createInstance</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Animal2<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">createInstance</span><span class="token punctuation">(</span>Bee<span class="token punctuation">)</span><span class="token punctuation">.</span>action<span class="token punctuation">.</span>hour<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// animal</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="keyof" tabindex="-1"><a class="header-anchor" href="#keyof" aria-hidden="true">#</a> keyof</h3><p>\u6211\u4EEC\u5BF9\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\u63A5\u53E3\u8FDB\u884C<code>keyof</code>\u90A3\u4E48\u4F1A\u8FD4\u56DE\u5BF9\u8C61\u5C5E\u540D\u7EC4\u6210\u7684\u96C6\u5408</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">keysObj</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  date<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">keytype</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> keysObj<span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u4EF7\u4E8Etype keytype = &#39;id&#39; | &#39;name&#39; | &#39;date&#39; | &#39;content&#39;</span>
<span class="token keyword">const</span> objkey<span class="token operator">:</span> keytype <span class="token operator">=</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">const</span> objkey2<span class="token operator">:</span> <span class="token keyword">keyof</span> keysObj <span class="token operator">=</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B80\u5199</span>
<span class="token comment">// const objkey: keyof keysObj = &#39;content&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">keysP</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">keysType3</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> keysP<span class="token punctuation">;</span> <span class="token comment">// type keysType3 = number</span>
<span class="token keyword">const</span> objkey3<span class="token operator">:</span> <span class="token keyword">keyof</span> keysP <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4F55\u83B7\u53D6\u4E00\u4E2A\u5BF9\u8C61\u503C\u7684\u6240\u6709<code>key</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> objkey4 <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token string">&#39;111&#39;</span><span class="token punctuation">,</span>
  b<span class="token operator">:</span> <span class="token string">&#39;222&#39;</span><span class="token punctuation">,</span>
  c<span class="token operator">:</span> <span class="token number">333</span><span class="token punctuation">,</span>
  d<span class="token operator">:</span> <span class="token number">444</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">result</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> objkey4<span class="token punctuation">;</span> <span class="token comment">// type result = &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot;</span>
<span class="token keyword">const</span> objkey5<span class="token operator">:</span> result <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7<code>keyof</code>\u6211\u4EEC\u5DF2\u7ECF\u7EA6\u675F\u4E86\u4E00\u65B0\u503C\u7684\u6240\u6709\u503C\uFF0C\u90A3\u4E48\u5B83\u5C31\u518D\u4E5F\u4E0D\u80FD\u8D4B\u503C\u5176\u4ED6\u503C\u4E86\uFF0C\u6BD4\u5982</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">...</span>
<span class="token keyword">const</span> objkey5<span class="token operator">:</span>result <span class="token operator">=</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">;</span> <span class="token comment">// error \u4E0D\u80FD\u5C06\u7C7B\u578B\u201C&quot;e&quot;\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201C&quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot;\u201D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="extract" tabindex="-1"><a class="header-anchor" href="#extract" aria-hidden="true">#</a> Extract</h3><p>\u5F53\u6211\u4EEC\u5BF9\u4E00\u4E2A\u5BF9\u4E00\u4E2A\u6CDB\u578B\u8FDB\u884C<code>keyof</code>\u65F6\uFF0C\u6B64\u65F6\u7C7B\u578B\u4F1A\u53D8\u6210<code>string | number | symbol</code>\u4E09\u79CD\u7C7B\u578B,\u6211\u4EEC\u5BF9\u53D8\u91CF\u8FDB\u884C\u8D4B\u503C\u65F6\uFF0C<code>ts</code>\u4F1A\u62A5\u9519</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> Key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keyName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> key<span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u80FD\u5C06\u7C7B\u578B\u201Cstring | number | symbol\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201Cstring\u201D</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>keyName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u6B64\u65F6\u6211\u4EEC\u9700\u8981\u501F\u52A9<code>Extract</code>\u8FDB\u4E00\u6B65\u8FDB\u884C\u7EA6\u675F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey2</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Key <span class="token keyword">extends</span> Extract<span class="token operator">&lt;</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> Key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keyName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>keyName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u6211\u4EEC\u770B\u4E0B<code>ts</code>\u5168\u5C40\u7ED9\u6211\u4EEC\u63D0\u4F9B\u7684\u8FD9\u4E2A<code>Extract</code>\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Extract<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u4EEC\u89C2\u5BDF\u5230<code>Extract</code>\u5C31\u662F\u7EA6\u675F\u4E86<code>Key</code>\u7684\u7C7B\u578B\uFF0C\u90A3\u4E48\u6211\u4EEC\u4E5F\u53EF\u4EE5\u8FD9\u4E48\u5199\uFF0C\u65E2\u7136\u6211\u77E5\u9053<code>Key</code>\u662F\u5B57\u7B26\u4E32</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey3</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Key <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> Key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keyName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>keyName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u4F60\u4E5F\u53EF\u4EE5\u7528\u6216\u7C7B\u578B\uFF0C\u6307\u5B9A<code>keyName</code>\u53EF\u4EE5\u662F<code>string | number | symbol</code>\u8FD9\u4E09\u79CD\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useKey4</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> Key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> keyName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>keyName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h3><p><code>typeof</code>\u53EA\u80FD\u7528\u4E8E\u5DF2\u7ECF\u5B9E\u9645\u5B9A\u4E49\u7533\u660E\u4E86\u7684\u53D8\u91CF\uFF0C\u8FD4\u56DE\u8BE5\u5B9A\u4E49\u7684\u53D8\u91CF\u7684\u5B9E\u9645\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> publicWebTech <span class="token operator">=</span> <span class="token string">&#39;\u5173\u6CE8\u516C\u4F17\u53F7\uFF1AWeb\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">publicWeb</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> publicWebTech<span class="token punctuation">;</span>
<span class="token comment">//type publicWeb = string</span>
<span class="token keyword">const</span> publicName<span class="token operator">:</span> publicWeb <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u6CE8\u610F\u5982\u679C\u7528<code>const</code>\u5B9A\u4E49\u7684\u53D8\u91CF\uFF0C\u5982\u679C\u4F60<code>keyof</code>\u4E00\u4E2A\u5E38\u91CF\uFF0C\u90A3\u4E48\u5C31\u4F1A\u4E0D\u4E00\u6837\u4E86</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> publicWebAuthor <span class="token operator">=</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// or let publicWebAuthor = &#39;Maic&#39; as const;</span>
<span class="token keyword">type</span> <span class="token class-name">publicWebAuthor</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> publicWebAuthor<span class="token punctuation">;</span>
<span class="token keyword">const</span> publicAuthor<span class="token operator">:</span> publicWebAuthor <span class="token operator">=</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u4E00\u4E2A<code>\u5BF9\u8C61</code>\u7684\u6240\u6709\u5C5E\u6027\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> objResult <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token string">&#39;222&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">objResultType</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> objResult<span class="token punctuation">;</span>
<span class="token comment">/*
  type objResultType = {
    a: string;
    b: string;
  }
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u4E00\u4E2A<code>\u51FD\u6570</code>\u7684\u8FD4\u56DE\u7C7B\u578B,<code>ReturnType</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fnTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token string">&#39;111&#39;</span><span class="token punctuation">,</span>
    b<span class="token operator">:</span> <span class="token string">&#39;222&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">fntest</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> fnTest<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
  type fntest = <span class="token punctuation">{</span>
    a: string;
    b: string;
  <span class="token punctuation">}</span>
 **/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u770B\u4E0B<code>ReturnType</code>\u7684\u7C7B\u578B\u5B9A\u4E49</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6709\u65F6\u5019\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u679A\u4E3E\uFF0C\u6211\u4EEC\u60F3\u83B7\u53D6\u679A\u4E3E\u7684<code>Key</code>,\u90A3\u4E48\u53EF\u4EE5\u8FD9\u4E48\u505A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> <span class="token constant">SERVER</span> <span class="token punctuation">{</span>
  <span class="token constant">TEST</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">PRD</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token constant">DEV</span> <span class="token operator">=</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">serverType</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> <span class="token constant">SERVER</span><span class="token punctuation">;</span>
<span class="token comment">// type serverType = &quot;TEST&quot; | &quot;PRD&quot; | &quot;DEV&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8BBF\u95EE\u7D22\u5F15\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE\u7D22\u5F15\u7C7B\u578B" aria-hidden="true">#</a> \u8BBF\u95EE\u7D22\u5F15\u7C7B\u578B</h3><p>\u6709\u65F6\u6211\u4EEC\u9700\u8981\u8BBF\u95EE\u5177\u4F53\u63A5\u53E3\u7684\u67D0\u4E2A\u5B57\u6BB5\u7684\u7C7B\u578B\u6216\u8005\u6570\u7EC4\u4E2D\u7684\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">nametype</span> <span class="token operator">=</span> person<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// type nametype = number</span>
<span class="token keyword">type</span> <span class="token class-name">nameOrAge</span> <span class="token operator">=</span> person<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// type nameOrAge = string | number</span>

<span class="token keyword">type</span> <span class="token class-name">personKeys</span> <span class="token operator">=</span> person<span class="token punctuation">[</span><span class="token keyword">keyof</span> person<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// type personKeys = string | number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u4E2D\u7684\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> personArr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">10</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    id<span class="token operator">:</span> <span class="token number">189</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">items</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> personArr<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/*
type items = {
    name: string;
    age: number;
    id?: undefined;
} | {
    name: string;
    age: number;
    id: number;
}
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6761\u4EF6\u7C7B\u578B-extends" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B-extends" aria-hidden="true">#</a> \u6761\u4EF6\u7C7B\u578B extends</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u7C7B\u578B\u201C&quot;message&quot;\u201D\u65E0\u6CD5\u7528\u4E8E\u7D22\u5F15\u7C7B\u578B\u201CT\u201D\u3002</span>
<span class="token keyword">type</span> <span class="token class-name">messageOf<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u53EF\u4EE5\u7528<code>extends</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">messageOf<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">isNumber<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">?</span> <span class="token builtin">number</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> num<span class="token operator">:</span> isNumber<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// const num: string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><p>1\u3001\u5728<code>ts</code>\u5B9A\u4E49\u57FA\u7840\u6570\u636E\u7C7B\u578B\uFF0C<code>type</code>\u4E0E<code>interface</code></p><p>2\u3001\u57FA\u7840\u4F7F\u7528\u6CDB\u578B,\u53EF\u4EE5\u5728<code>\u63A5\u53E3</code>,<code>\u51FD\u6570</code>,<code>type</code>\u4F7F\u7528\u6CDB\u578B\uFF0C\u6CDB\u578B\u53EF\u4EE5\u7406\u89E3<code>js</code>\u4E2D\u7684\u5F62\u53C2\uFF0C\u66F4\u52A0\u62BD\u8C61\u548C\u7EC4\u7EC7\u4EE3\u7801</p><p>3\u3001<code>extends</code>\u7EA6\u675F\u6CDB\u578B\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5728<code>ts</code>\u4E2D\u505A\u6761\u4EF6\u5224\u65AD</p><p>4\u3001\u4F7F\u7528<code>keyof</code>\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027<code>key</code>\u503C\uFF0C\u5982\u679C\u9700\u8981\u83B7\u53D6\u4E00\u4E2A\u5BF9\u8C61\u5B9A\u4E49\u7684<code>key</code>,\u53EF\u4EE5\u4F7F\u7528<code>type keys = keyof typeof obj</code></p>`,152),r=n("5\u3001\u6709\u4E00\u7BC7\u7B14\u8005\u5F88\u65E9\u4E4B\u524D\u7684\u4E00\u7BC7"),k={href:"https://note.youdao.com/s/MBwW87Dx",title:"ts\u7B14\u8BB0",target:"_blank",rel:"noopener noreferrer"},d=n("ts \u7B14\u8BB0"),v=n("6\u3001\u672C\u6587\u793A\u4F8B"),m={href:"https://github.com/maicFir/lessonNote/tree/master/typescript/demo",target:"_blank",rel:"noopener noreferrer"},b=n("code-example"),g=n("\u66F4\u591A\u5B66\u4E60"),y=s("code",null,"ts",-1),h=n("\u67E5\u770B"),f={href:"https://www.typescriptlang.org/docs/handbook/2/basic-types.html",title:"TS\u5B98\u65B9\u6587\u6863",target:"_blank",rel:"noopener noreferrer"},w=n("TS \u5B98\u65B9\u6587\u6863"),x=n(",\u4E5F\u53EF\u4EE5\u770B\u5BF9\u5E94\u7FFB\u8BD1\u4E2D\u6587\u7248"),T={href:"https://yayujs.com/handbook/TheBasics.html",title:"https://yayujs.com/",target:"_blank",rel:"noopener noreferrer"},j=n("https://yayujs.com/");function q(O,_){const a=l("ExternalLinkIcon");return t(),o("div",null,[u,s("p",null,[r,s("a",k,[d,p(a)])]),s("p",null,[v,s("a",m,[b,p(a)])]),s("p",null,[g,y,h,s("a",f,[w,p(a)]),x,s("a",T,[j,p(a)])])])}var N=e(i,[["render",q],["__file","2022-03-07.html.vue"]]);export{N as default};
