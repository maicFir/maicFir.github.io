import{_ as e,o,c,a as n,d as t,e as p,b as s,r as l}from"./app.23aa111b.js";const i={},u=p(`<blockquote><p>\u5728 vue \u4E2D\uFF0C\u6211\u4EEC\u77E5\u9053\u5B83\u7684\u6838\u5FC3\u601D\u60F3\u662F\u6570\u636E\u9A71\u52A8\u89C6\u56FE\uFF0C\u8868\u73B0\u5C42\u6211\u4EEC\u77E5\u9053\u5728\u9875\u9762\u4E0A\uFF0C\u5F53\u6570\u636E\u53D1\u751F\u53D8\u5316\uFF0C\u90A3\u4E48\u89C6\u56FE\u5C42\u4E5F\u4F1A\u53D1\u751F\u53D8\u5316\u3002\u8FD9\u79CD\u6570\u636E\u53D8\u5316\u9A71\u52A8\u89C6\u56FE\u80CC\u540E\u4F9D\u9760\u7684\u662F\u4EC0\u4E48\uFF1F</p></blockquote><p>\u6B63\u6587\u5F00\u59CB...</p><h3 id="vue2-\u6E90\u7801\u4E2D\u7684\u6570\u636E\u52AB\u6301" tabindex="-1"><a class="header-anchor" href="#vue2-\u6E90\u7801\u4E2D\u7684\u6570\u636E\u52AB\u6301" aria-hidden="true">#</a> vue2 \u6E90\u7801\u4E2D\u7684\u6570\u636E\u52AB\u6301</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/core/instance/observer/index.js</span>
<span class="token doc-comment comment">/**
 * Define a reactive property on an Object.
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">obj</span><span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> any<span class="token punctuation">,</span> customSetter<span class="token operator">?</span><span class="token operator">:</span> <span class="token operator">?</span>Function<span class="token punctuation">,</span> shallow<span class="token operator">?</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> property <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>configurable <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// cater for pre-defined getter/setters</span>
  <span class="token keyword">const</span> getter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
  <span class="token keyword">const</span> setter <span class="token operator">=</span> property <span class="token operator">&amp;&amp;</span> property<span class="token punctuation">.</span>set<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>getter <span class="token operator">||</span> setter<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>childOb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          childOb<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">dependArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">reactiveSetter</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> value <span class="token operator">=</span> getter <span class="token operator">?</span> <span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
      <span class="token comment">/* eslint-disable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> value <span class="token operator">||</span> <span class="token punctuation">(</span>newVal <span class="token operator">!==</span> newVal <span class="token operator">&amp;&amp;</span> value <span class="token operator">!==</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* eslint-enable no-self-compare */</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> customSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">customSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// #7981: for accessor properties without setter</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>setter<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>setter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      childOb <span class="token operator">=</span> <span class="token operator">!</span>shallow <span class="token operator">&amp;&amp;</span> <span class="token function">observe</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4F1A\u53D1\u73B0\u5176\u5B9E\u5728<code>vue2</code>\u6E90\u7801\u4E2D\uFF0C\u672C\u8D28\u4E0A\u5C31\u662F\u5229\u7528<code>Object.defineProperty</code>\u6765\u52AB\u6301\u5BF9\u8C61\u3002</p><p>\u6BCF\u52AB\u6301\u4E00\u7EC4\u5BF9\u8C61\uFF0C\u9996\u5148\u4F1A\u5B9E\u4F8B\u5316\u4E00\u4E2A<code>Dep</code>\u5BF9\u8C61\uFF0C\u6BCF\u4E2A\u62E6\u622A\u7684\u5BF9\u8C61\u5C5E\u6027\u90FD\u4F1A\u52A8\u6001\u6DFB\u52A0<code>get</code>\u548C<code>set</code>\u5C06\u4F20\u5165\u7684<code>data</code>\u6216\u8005<code>prop</code>\u53D8\u6210\u54CD\u5E94\u5F0F\uFF0C\u5728<code>Object.defineProperty</code>\u7684<code>get</code>\u4E2D\uFF0C\u5F53\u6211\u4EEC\u8BBF\u95EE\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u65F6\uFF0C\u5C31\u4F1A\u5148\u8C03\u7528<code>get</code>\u65B9\u6CD5\uFF0C\u4F9D\u8D56\u6536\u96C6\u8C03\u7528<code>dep.depend()</code>\uFF0C\u5F53\u6211\u4EEC\u8BBE\u7F6E\u8BE5\u5C5E\u6027\u503C\u65F6\u5C31\u4F1A\u8C03\u7528<code>set</code>\u65B9\u6CD5\u8C03\u7528<code>dep.notify()\`\`\u6D3E\u53D1\u66F4\u65B0</code>\u6240\u6709\u7684\u6570\u636E\uFF0C\u5728\u8C03\u7528<code>notify</code>\u65F6\u4F1A\u8C03\u7528\u5B9E\u4F8B<code>Watch</code>\u7684<code>run</code>,\u4ECE\u800C\u6267\u884C<code>watch</code>\u7684\u56DE\u8C03\u65B9\u6CD5\u3002</p><p>\u5728<code>vue2</code>\u6E90\u7801\u4E2D\u52AB\u6301\u5BF9\u8C61\u5B9E\u73B0\u6570\u636E\u9A71\u52A8\u89C6\u56FE\uFF0C\u90A3\u4E48\u6211\u4EEC\u4F9D\u846B\u82A6\u753B\u74E2\uFF0C\u5316\u7E41\u4E3A\u7B80\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u81EA\u5DF1\u7684\u6570\u636E\u52AB\u6301\u5427\u3002</p><p>\u65B0\u5EFA\u4E00\u4E2A<code>index.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">&#39;china&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">renderHtml</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> appDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  appDom<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
    &lt;p&gt;options:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;
    &lt;p&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;
  &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">defineReactive</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> val <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nval</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nval<span class="token punctuation">,</span> <span class="token string">&#39;==nval&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      val <span class="token operator">=</span> nval<span class="token punctuation">;</span>
      <span class="token function">renderHtml</span><span class="token punctuation">(</span>nval<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">defineReactive</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">renderHtml</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u65B0\u5EFA\u4E00\u4E2A<code>html</code>\u5F15\u5165<code>index.js</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>vue2-reactive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F4\u63A5\u6253\u5F00<code>index.html</code><img src="https://files.mdnice.com/user/24614/18c31215-9402-4d77-8818-4515cc0abf11.png" alt=""> \u5F53\u6211\u4EEC\u5927\u5F00\u63A7\u5236\u53F0\u65F6\uFF0C\u6211\u4EEC\u76F4\u63A5\u4FEE\u6539<code>options.age = 10</code>\u6B64\u65F6\u4F1A\u89E6\u53D1\u62E6\u622A\u5668\u7684<code>set</code>\u65B9\u6CD5\uFF0C\u4ECE\u800C\u8FDB\u884C\u66F4\u65B0\u9875\u9762\u6570\u636E\u64CD\u4F5C\u3002</p>`,12),r=s("\u5728\u6E90\u7801\u91CC\u91CC\u9762\u5904\u7406\u662F\u76F8\u5F53\u590D\u6742\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u8BBF\u95EE\u6570\u636E\u65F6\uFF0C\u4F1A\u5148\u8C03\u7528"),k=n("code",null,"get",-1),d=s("\u65B9\u6CD5,\u5728"),v=n("code",null,"dep.depend()",-1),m=s("\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6,\u7136\u540E\u518D\u8BBE\u7F6E\u5BF9\u8C61\u7684\u503C\u65F6\uFF0C\u4F1A\u8C03\u7528"),b=n("code",null,"set",-1),g=s("\u65B9\u6CD5\uFF0C\u6D3E\u53D1\u66F4\u65B0\u64CD\u4F5C\u3002\u66F4\u591A\u5173\u4E8E"),y=n("code",null,"vue2",-1),f=s("\u54CD\u5E94\u5F0F\u539F\u7406\u53EF\u4EE5\u53C2\u8003\u8FD9\u7BC7\u6587\u7AE0"),h={href:"https://ustbhuangyi.github.io/vue-analysis/v2/reactive/reactive-object.html#object-defineproperty",target:"_blank",rel:"noopener noreferrer"},_=s("\u54CD\u5E94\u5F0F\u539F\u7406"),w=n("h3",{id:"vue3-\u662F\u5982\u4F55\u505A\u6570\u636E\u52AB\u6301\u7684",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue3-\u662F\u5982\u4F55\u505A\u6570\u636E\u52AB\u6301\u7684","aria-hidden":"true"},"#"),s(" vue3 \u662F\u5982\u4F55\u505A\u6570\u636E\u52AB\u6301\u7684")],-1),x=n("code",null,"vue3",-1),j=s("\u4E3B\u8981\u5229\u7528"),q=n("code",null,"Proxy",-1),P=s("\u8FD9\u4E2A"),O=n("code",null,"API",-1),T=s("\u6765\u5B9E\u73B0\u5BF9\u8C61\u52AB\u6301\u7684\uFF0C\u5173\u4E8E"),E=n("code",null,"Proxy",-1),V=s("\u53EF\u4EE5\u770B\u4E0B\u962E\u4E00\u5CF0\u8001\u5E08\u7684 es6 \u6559\u7A0B"),D={href:"https://es6.ruanyifeng.com/#docs/proxy",target:"_blank",rel:"noopener noreferrer"},H=s("proxy"),R=s("\uFF0C\u5168\u7F51\u8BB2\u89E3"),N=n("code",null,"Proxy",-1),I=s("\u6700\u597D\u7684\u6559\u7A0B\u4E86\u3002"),S=p(`<p>\u7EE7\u7EED\u7528\u4E2A\u4F8B\u5B50\u6765\u611F\u53D7\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">&#39;china&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">renderHtml</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> appDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  appDom<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;
    &lt;p&gt;options:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;
    &lt;p&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;
  &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">renderHtml</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">renderHtml</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u5728\u63A7\u5236\u8F93\u5165<code>proxy.name = 111</code>\u65F6\uFF0C\u6B64\u65F6\u5C31\u4F1A\u89E6\u53D1<code>new Proxy()</code>\u5185\u90E8\u7684<code>set</code>\u65B9\u6CD5\uFF0C\u800C\u6211\u4EEC\u6B64\u65F6\u91C7\u7528\u7684\u662F\u5229\u7528<code>Reflect.set(target,key,val)</code>\u6210\u529F\u7684\u8BBE\u7F6E\u4E86\uFF0C\u5728<code>get</code>\u4E2D\uFF0C\u6211\u4EEC\u65F6\u7528<code>Relect.get(target, key)</code>\u83B7\u53D6\u5BF9\u5E94\u7684\u5C5E\u6027\u503C\u3002</p><p>\u8FD9\u70B9\u4E0E<code>vue2</code>\u4E2D\u52AB\u6301\u6570\u636E\u7684\u65B9\u5F0F\u6BD4\u8F83\u5927\uFF0C\u5177\u4F53\u53EF\u4EE5\u770B\u4E0B<code>vue3</code>\u6E90\u7801\u54CD\u5E94\u5F0F<code>reactive</code>\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// package/reactivity/src/reactive.ts</span>
<span class="token keyword">function</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">target</span><span class="token operator">:</span> Target<span class="token punctuation">,</span> <span class="token literal-property property">isReadonly</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span> <span class="token literal-property property">baseHandlers</span><span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">collectionHandlers</span><span class="token operator">:</span> ProxyHandler<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">proxyMap</span><span class="token operator">:</span> WeakMap<span class="token operator">&lt;</span>Target<span class="token punctuation">,</span> any<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">value cannot be made reactive: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">String</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// target is already a Proxy, return it.</span>
  <span class="token comment">// exception: calling readonly() on a reactive object</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">RAW</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>isReadonly <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_REACTIVE</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// target already has corresponding Proxy</span>
  <span class="token keyword">const</span> existingProxy <span class="token operator">=</span> proxyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>existingProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> existingProxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// only a whitelist of value types can be observed.</span>
  <span class="token keyword">const</span> targetType <span class="token operator">=</span> <span class="token function">getTargetType</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>targetType <span class="token operator">===</span> TargetType<span class="token punctuation">.</span><span class="token constant">INVALID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> targetType <span class="token operator">===</span> TargetType<span class="token punctuation">.</span><span class="token constant">COLLECTION</span> <span class="token operator">?</span> collectionHandlers <span class="token operator">:</span> baseHandlers<span class="token punctuation">)</span><span class="token punctuation">;</span>
  proxyMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> proxy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u6E90\u7801\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\u5728<code>vue3</code>\u4F7F\u7528<code>reative</code>\u521D\u59CB\u5316\u54CD\u5E94\u5F0F\u6570\u636E\u65F6\uFF0C\u5B9E\u9645\u4E0A\u5B83\u5C31\u662F\u5C31\u662F\u4E00\u4E2A\u88AB<code>proxy</code>\u4EE3\u7406\u540E\u7684\u6570\u636E\uFF0C\u5E76\u4E14\u4F7F\u7528<code>WeakMap</code>\u6765\u5B58\u50A8\u54CD\u5E94\u5F0F\u6570\u636E\u7684\u3002</p><p>\u76F8\u6BD4\u8F83<code>vue2</code>\u7684<code>defineProperty</code>,<code>vue3</code>\u7684<code>Proxy</code>\u66F4\u52A0\u5F3A\u5927\uFF0C\u56E0\u4E3A\u4EE3\u7406\u5BF9\u8C61\u5BF9\u52AB\u6301\u7684\u5BF9\u8C61\u52A8\u6001\u65B0\u589E\u5C5E\u6027\u4E5F\u4E00\u6837\u6709\u68C0\u6D4B\uFF0C\u800C<code>defineProperty</code>\u5C31\u6CA1\u6709\u8FD9\u79CD\u7279\u6027\uFF0C\u5B83\u53EA\u80FD\u52AB\u6301\u5DF2\u6709\u7684\u5BF9\u8C61\u5C5E\u6027\u3002</p><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3>`,8),A=p("<li><p>\u5728<code>vue2</code>\u4E2D\u6570\u636E\u52AB\u6301\u662F\u7528<code>Object.defineProperty</code>\uFF0C\u5F53\u8BBF\u95EE\u5BF9\u8C61\u5C5E\u6027\u65F6\u4F1A\u89E6\u53D1<code>get</code>\u65B9\u6CD5\u8FDB\u884C\u4F9D\u8D56\u6536\u96C6\uFF0C\u5F53\u8BBE\u7F6E\u5BF9\u8C61\u5C5E\u6027\u65F6\u4F1A\u89E6\u53D1<code>set</code>\u65B9\u6CD5\u8FDB\u884C\u6D3E\u53D1\u66F4\u65B0\u64CD\u4F5C\u3002</p></li><li><p>\u5728<code>vue3</code>\u4E2D\u6570\u636E\u52AB\u6301\u65F6\u7528<code>new Proxy()</code>\u6765\u505A\u7684\uFF0C\u53EF\u4EE5\u52A8\u6001\u7684\u76D1\u6D4B\u5BF9\u8C61\u7684\u5C5E\u6027\u65B0\u589E\u4E0E\u5220\u9664\u64CD\u4F5C\uFF0C\u6548\u7387\u9AD8\uFF0C\u5B9E\u7528\u7B80\u5355\u3002</p></li>",2),M=s("\u672C\u6587\u793A\u4F8B"),B={href:"https://github.com/maicFir/lessonNote/tree/master/vue/01-%E5%93%8D%E5%BA%94%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},C=s("code example");function L($,F){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[r,k,d,v,m,b,g,y,f,n("a",h,[_,t(a)])]),w,n("p",null,[x,j,q,P,O,T,E,V,n("a",D,[H,t(a)]),R,N,I]),S,n("ul",null,[A,n("li",null,[n("p",null,[M,n("a",B,[C,t(a)])])])])])}var W=e(i,[["render",L],["__file","2022-05-23.html.vue"]]);export{W as default};
