import{_ as n,o as s,c as a,e as p}from"./app.aa911b4b.js";const t={},e=p(`<blockquote><p>\u9762\u5411\u5BF9\u8C61\u7684\u4E09\u5927\u7279\u5F81\u3001\u5C01\u88C5\u3001\u7EE7\u627F\u3001\u591A\u80BD\uFF0C<code>js</code>\u4E2D\u540C\u6837\u6709\u8FD9\u4E09\u79CD\u7279\u5F81\uFF0C<code>js</code>\u662F\u4E00\u95E8\u5F31\u8BED\u8A00\uFF0C\u4FD7\u79F0\u89E3\u91CA\u6027\u8BED\u8A00\uFF0C\u901A\u5E38\u6765\u8BF4\u6BD4\u8D77\u9AD8\u7EA7\u8BED\u8A00\uFF0C\u4ED6\u6CA1\u6709\u4E25\u683C\u7684\u7C7B\u578B\u7EA6\u675F\uFF0C\u4E3A\u4E86\u8BA9\u4EE3\u7801\u5199\u5F97\u66F4\u5065\u58EE\uFF0C\u7EF4\u62A4\u6027\u66F4\u5F3A\uFF0C\u56E0\u6B64\u6709\u4E86<code>ts</code>\u7EA6\u675F\uFF0C\u800C<code>\u7EE7\u627F</code>\u662F\u80FD\u8BA9\u4EE3\u7801\u66F4\u52A0\u901A\u7528\uFF0C\u8BA9\u4F60\u7684\u4EE3\u7801\u66F4\u52A0\u7684\u62BD\u8C61\u3002</p></blockquote><p>\u5F80\u5F80\u5728\u9879\u76EE\u4E2D\u90FD\u4F1A\u770B\u5230\u6709\u7528<code>class</code>\uFF0C\u6216\u8005<code>OOP</code>\u601D\u60F3\u53BB\u7EC4\u7EC7\u4E1A\u52A1\u4EE3\u7801\uFF0C\u672C\u7BC7\u53EA\u505A\u9879\u76EE\u4E2D\u5E38\u7528\u5230\u7684\u7EE7\u627F\u4EE5\u53CA\u5BF9\u4E0D\u540C\u7EE7\u627F\u65B9\u5F0F\u7684\u56DE\u987E\uFF0C\u4E5F\u662F\u518D\u6B21\u52A0\u6DF1\u5BF9\u7EE7\u627F\u7684\u4E00\u4E9B\u7406\u89E3\uFF0C\u5E0C\u671B\u4F60\u5728\u9879\u76EE\u4E2D\u6709\u4E9B\u5E2E\u52A9\u548C\u601D\u8003\u3002</p><p>\u6B63\u6587\u5F00\u59CB...</p><h4 id="\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570</h4><p>\u6211\u4EEC\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6784\u5EFA\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> tigger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;tigger&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u901A\u8FC7<code>new \u6784\u9020\u51FD\u6570()</code>\u65B9\u5F0F\u65B0\u5EFA\u4E86\u4E24\u4E2A\u5BF9\u8C61<code>tigger</code>\u3001<code>cat</code>,\u5176\u5B9E\u6211\u4EEC\u4F1A\u53D1\u73B0\uFF0C\u76F8\u5F53\u4E8E\u6709\u591A\u5C11\u5BF9\u8C61\uFF0C\u6211\u5C31\u8981\u5B9E\u4F8B\u5316\u591A\u5C11\u4E2A\u5BF9\u8C61\u3002\u5E76\u4E14\u5B9E\u4F8B\u5316\u7684\u5BF9\u8C61\u90FD\u76F8\u4E92\u72EC\u7ACB\uFF0C\u4E92\u4E0D\u5F71\u54CD\u3002\u73B0\u5728\u6211\u60F3<code>trigger</code>\u4E0E<code>cat</code>\u62E5\u6709\u540C\u6837\u7684\u5C5E\u6027\u6216\u8005\u65B9\u6CD5\u5462\uFF1F</p><p>\u53EF\u4EE5\u5229\u7528\u539F\u578B\u94FE<code>prototype</code>\u5171\u4EAB\u65B9\u6CD5\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello,&#39;</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
cat<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello, cat</span>
tigger<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello,trigger</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4F7F\u7528<code>new Animal(&#39;cat&#39;)</code>\u6216\u8005<code>new Animal(&#39;tigger&#39;)</code>,\u4F60\u4F1A\u53D1\u73B0\u540C\u6837\u7684\u4E8B\u60C5\uFF0C\u6211\u4EEC\u5B9E\u4F8B\u5316\u4E86\u591A\u6B21\uFF0C\u56E0\u4E3A\u8FD9\u6837\u505A\uFF0C<code>tigger</code>\u4E0E<code>cat</code>\u5E76\u4E0D\u76F8\u7B49\uFF0C\u90A3\u4E48\u5982\u4F55\u53EF\u51CF\u5C11\u5185\u5B58\u5F00\u9500\u5462\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u5229\u7528<code>\u5355\u4EF6\u6A21\u5F0F</code>\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\u53BB\u5904\u7406\uFF0C\u4E3E\u4E2A\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> instance<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    instance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getInstance</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> trigger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;trigger&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cat <span class="token operator">===</span> trigger<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u5728\u6784\u9020\u51FD\u6570\u4E0A\u7ED1\u5B9A\u4E00\u4E2A\u9759\u6001\u5C5E\u6027\uFF0C\u8FD9\u6837\u6BD4\u5B9A\u4E49\u5168\u5C40\u53D8\u91CF\u8981\u597D\u5F97\u591A\uFF0C\u63A8\u8350\u4E0B\u9762\u8FD9\u79CD\u65B9\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Animal</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Animal<span class="token punctuation">.</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Animal<span class="token punctuation">.</span>instance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Animal<span class="token punctuation">.</span>instance<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> trigger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;trigger&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cat <span class="token operator">===</span> trigger<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u8FD9\u6837\u6211\u4EEC\u4F1A\u53D1\u73B0<code>const trigger = new Animal(&#39;trigger&#39;)</code>\u5B9E\u9645\u4E0A\u65E0\u8BBA\u5B9E\u4F8B\u5316\u591A\u5C11\u4E2A\uFF0C\u90FD\u53EA\u4F1A\u8FD4\u56DE\u9996\u6B21\u5B9E\u4F8B\u5316\u7684\u5BF9\u8C61,\u5BF9\u4E8E\u4E0D\u540C\u573A\u666F\u8FD8\u662F\u5F97\u7279\u6B8A\u5904\u7406\u3002</p><p>\u81EA\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5B8C\u5168\u7EE7\u627F<code>\u6570\u7EC4</code>\u6240\u6709\u7279\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">MyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">MyArray</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6307\u5B9A\u6784\u9020\u51FD\u6570</span>
<span class="token class-name">MyArray</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> MyArray<span class="token punctuation">;</span>
<span class="token keyword">var</span> mine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mine <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// \u4EE5\u4E0A\u7B49\u4EF7</span>
<span class="token class-name">MyArray</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">isPrototypeOf</span><span class="token punctuation">(</span>mine<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h4><p>\u67E5\u627E\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> print <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Print</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">===</span> print<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>print<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">Print</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5224\u65AD<code>print</code>\u7684\u6784\u9020\u51FD\u6570\u662F\u4E0D\u662F<code>Print</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
print <span class="token keyword">instanceof</span> <span class="token class-name">Print</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u53EF\u4EE5\u7528\u8FD9\u4E2A\u6765\u4EE3\u66FF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token class-name">Print</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">isPrototypeOf</span><span class="token punctuation">(</span>print<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u539F\u578B\u7EE7\u627F\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u7EE7\u627F\u6CD5" aria-hidden="true">#</a> \u539F\u578B\u7EE7\u627F\u6CD5</h4><p>\u6240\u6709\u5BF9\u8C61\u5171\u4EAB\u4E00\u4E2A\u539F\u578B\u5BF9\u8C61\uFF0C\u57FA\u4E8E\u6784\u5EFA\u5668\u5DE5\u4F5C\u6A21\u5F0F,\u5C06\u7236\u7C7B\u7684<code>prototype</code>\u76F4\u63A5\u8D4B\u503C\u7ED9\u5B50\u7C7B\u7684<code>prototype</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>ParentName <span class="token operator">=</span> <span class="token string">&#39;parent&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>cname <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cname<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 666</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5B50\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>childname <span class="token operator">=</span> <span class="token string">&#39;childname&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// this.ParentName = &#39;888&#39;;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Child</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token comment">// Child.prototype.cname = &#39;666&#39;; \u4F1A\u4FEE\u6539\u7236\u7C7B\u7684cname</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>ParentName<span class="token punctuation">,</span> c<span class="token punctuation">.</span>childname<span class="token punctuation">,</span> c<span class="token punctuation">.</span>cname<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// undefined childname  123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u6253\u5370\u91CC\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF0C\u5B50\u7C7B\u53EF\u4EE5\u8BBF\u95EE\u7236\u7C7B<code>prototype</code>\u4E0A\u7684\u5C5E\u6027\u6216\u8005<code>prototype</code>\u65B9\u6CD5\uFF0C\u4F46\u662F\u7236\u7C7B<code>\u81EA\u8EAB\u5C5E\u6027</code>\u6216\u8005<code>\u81EA\u8EAB\u65B9\u6CD5</code>\u4E0D\u80FD\u8BBF\u95EE\uFF0C\u4F46\u662F\uFF0C\u6211\u4EEC\u6CE8\u610F\u5230\u5982\u679C\u5B50\u7C7B<code>prototype</code>\u5C5E\u6027\u6709\u7236\u7C7B\u76F8\u540C\u7684<code>prototype</code>\u5C5E\u6027\u540D\u65F6\uFF0C\u6B64\u65F6\u5B50\u7C7B\u4F1A\u8986\u76D6\u7236\u7C7B<code>prototype</code>\u7684\u5C5E\u6027\u3002\u5B50\u7C7B\u81EA\u8EAB\u5C5E\u6027\u4E0E\u7236\u7C7B\u81EA\u8EAB\u5C5E\u6027\u540C\u540D\u65F6\uFF0C\u6B64\u65F6\u5B50\u7C7B\u8BBF\u95EE\u5C31\u4F1A\u6709\u503C\uFF0C\u8BBF\u95EE\u7684\u662F\u81EA\u8EAB\u5C5E\u6027\uFF0C<code>c.ParentName</code>\u6253\u5370\u5C31\u4F1A\u662F<code>888</code></p><p>\u4E8E\u6B64\u540C\u65F6\u5B50\u7C7B<code>prototype</code>\u4FEE\u6539\u4F1A\u540C\u65F6\u4FEE\u6539\u7236\u7C7B\u7684<code>prototype</code></p><h4 id="\u4E34\u65F6\u6784\u9020\u5668" tabindex="-1"><a class="header-anchor" href="#\u4E34\u65F6\u6784\u9020\u5668" aria-hidden="true">#</a> \u4E34\u65F6\u6784\u9020\u5668</h4><p>\u73B0\u5728\u6211\u6709\u4E00\u4E2A\u9700\u6C42\uFF0C\u5B50\u7C7B\u53EA\u7EE7\u627F\u7236\u7C7B\u7684<code>prototype</code>,\u4E0D\u9700\u8981\u7EE7\u627F\u7236\u7C7B\u81EA\u8EAB\u672C\u8EAB\u7684\u5C5E\u6027,\u4E3E\u4E2A\u6817\u5B50\u4F50\u8BC1\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token keyword">extends</span><span class="token punctuation">(</span><span class="token parameter">Child<span class="token punctuation">,</span> Parent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token function-variable function">F</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
      <span class="token class-name">Child</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06Child\u7684\u6784\u9020\u51FD\u6570\u6307\u5B9A\u6210Child</span>
      <span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Child<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parentName <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>childName <span class="token operator">=</span> <span class="token string">&#39;childname&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// Child.prototype.age = 666; // \u5E76\u4E0D\u4F1A\u4FEE\u6539\u7236\u7C7Bage\u5C5E\u6027</span>
  <span class="token function">extend</span><span class="token punctuation">(</span>Child<span class="token punctuation">,</span> Parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>age<span class="token punctuation">,</span> c<span class="token punctuation">.</span>childName<span class="token punctuation">,</span> c<span class="token punctuation">.</span>parentName<span class="token punctuation">)</span>
  <span class="token comment">// 18, childname,undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u53D1\u73B0\u5B9E\u9645\u4E0A\u5229\u7528<code>extends</code>\u65B9\u6CD5\uFF0C\u5229\u7528\u4E86\u4E00\u4E2A\u4E2D\u95F4\u7684<code>F</code>\u6784\u9020\u51FD\u6570\uFF0C\u901A\u8FC7<code>F.prototype = Parent.prototype</code>,\u7136\u540E\u5C06<code>Child.prototype = new F()</code>,\u4E0E\u4E0A\u9762\u539F\u578B\u7EE7\u627F\u4E0D\u540C\u7684\u662F\uFF0C\u4FEE\u6539\u5B50\u7C7B<code>prototype</code>\u4E0E\u7236\u7C7B\u76F8\u540C\u7684\u5C5E\u6027\u65F6,\u5E76\u4E0D\u4F1A\u4FEE\u6539\u7236\u7C7B<code>prototype</code>\u7684\u5C5E\u6027\u3002\u672C\u8D28\u4E0A\u5C31\u662F\u501F\u9E21\u751F\u86CB\uFF0C\u501F\u7528\u4E86<code>F</code>\u7684<code>prototype</code>,\u4E0D\u76F4\u63A5\u4FEE\u6539\u7236\u7C7B\u7684<code>prototype</code></p><h4 id="\u539F\u578B\u5C5E\u6027\u62F7\u8D1D\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u5C5E\u6027\u62F7\u8D1D\u7EE7\u627F" aria-hidden="true">#</a> \u539F\u578B\u5C5E\u6027\u62F7\u8D1D\u7EE7\u627F</h4><p>\u5C06\u7236\u7C7B\u7684<code>prototype</code>\u5C5E\u6027\u503C\u62F7\u8D1D\u7ED9\u5B50\u7C7B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token keyword">extends</span><span class="token punctuation">(</span><span class="token parameter">Child<span class="token punctuation">,</span> Parent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> c_proto <span class="token operator">=</span> <span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token keyword">const</span> p_proto <span class="token operator">=</span> <span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> p_proto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c_proto<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> p_proto<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Child</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;child&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;parent&#39;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>money <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">extends</span><span class="token punctuation">(</span>Child<span class="token punctuation">,</span> Parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>money<span class="token punctuation">,</span> c<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// 100, child</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u53EA\u4F1A\u7EE7\u627F\u7236\u7C7B<code>prototype</code>\u5C5E\u6027\uFF0C\u7236\u7C7B\u81EA\u8EAB\u5C5E\u6027\u5E76\u4E0D\u4F1A\u7EE7\u627F\uFF0C\u56E0\u6B64\u8FD9\u79CD\u4E0E<code>\u4E34\u65F6\u6784\u9020\u5668</code>\u529F\u80FD\u4E0A\u5982\u51FA\u4E00\u8F99\uFF0C\u5B50\u7C7B\u5E76\u4E0D\u80FD\u4FEE\u6539\u7236\u7C7B\u81EA\u8EAB\u7684\u5C5E\u6027\u3002</p><h4 id="\u5BC4\u751F\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u5BC4\u751F\u7EE7\u627F" aria-hidden="true">#</a> \u5BC4\u751F\u7EE7\u627F</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">extends2</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">F</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> target<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;parent&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">extends2</span><span class="token punctuation">(</span><span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> parent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// child.__protototype__.age = 88;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>age<span class="token punctuation">,</span> child<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 100, undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span>age<span class="token punctuation">,</span> parent<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 100, parent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u7EE7\u627F\u672C\u8D28\u4E0A\u4ECD\u7136\u662F\u7528\u5229\u7528\u7236\u7C7B\u7684<code>prototype</code>\u8D4B\u503C\u7ED9\u4E86\u4E00\u4E2A\u4E2D\u95F4\u6784\u9020\u51FD\u6570<code>F</code>\u7684<code>prototype</code>,\u4ED6\u7684\u5F0A\u7AEF\u662F\u5E76\u4E0D\u80FD\u8BBF\u95EE\u7236\u7C7B\u7684\u81EA\u8EAB\u5C5E\u6027\u4E0E\u81EA\u8EAB\u65B9\u6CD5, \u4F46\u662F<code>child.__protototype__.age</code>\u4F1A\u4FEE\u6539\u7236\u7C7B\u7684<code>prototype</code>\u4E0A\u7684\u540C\u540D\u5C5E\u6027\u3002</p><h4 id="\u6784\u9020\u51FD\u6570\u7EE7\u627F-\u5229\u7528-call-\u7EE7\u627F\u3010\u6784\u9020\u5668\u7EE7\u627F\u3011" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u7EE7\u627F-\u5229\u7528-call-\u7EE7\u627F\u3010\u6784\u9020\u5668\u7EE7\u627F\u3011" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u7EE7\u627F,\u5229\u7528 call \u7EE7\u627F\u3010\u6784\u9020\u5668\u7EE7\u627F\u3011</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;parent&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello,&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token comment">// \u5B50\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Parent</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// parent</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello parent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6CE8\u610F\u5230<code>c.age</code>\u8FD4\u56DE\u7684\u662F<code>undefined</code>,\u56E0\u4E3A<code>age</code>\u4E0D\u662F\u6784\u9020\u51FD\u6570\u672C\u8EAB\u7684\u5C5E\u6027\u6216\u8005\u65B9\u6CD5\uFF0C\u5728\u6784\u9020\u51FD\u6570<code>prototype</code>\u7684\u65B9\u6CD5\u6216\u8005\u5C5E\u6027\u65E0\u6CD5\u8BBF\u95EE\uFF0C\u5982\u679C\u6211\u9700\u8981\u8BBF\u95EE\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;parent&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello,&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Parent</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Child</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">888</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 888</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// parent</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5C31\u52A0\u4E86\u4E00\u884C\u4EE3\u7801\u5B9E\u73B0\u4E86<code>Child.prototype = Object.create(Parent.prototype)</code>,\u8FD9\u79CD\u65B9\u5F0F\u5B50\u7C7B\u4E0E\u7236\u7C7B\u7684\u8026\u5408\u975E\u5E38\u4F4E\uFF0C\u5B50\u7C7B\u4FEE\u6539\u4E0E\u7236\u7C7B\u540C\u540D<code>prototype</code>\u7684\u5C5E\u6027\u5E76\u4E0D\u4F1A\u5F71\u54CD\u7236\u7C7B\u3002</p><h3 id="\u539F\u578B\u94FE\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u539F\u578B\u94FE\u7EE7\u627F" aria-hidden="true">#</a> \u539F\u578B\u94FE\u7EE7\u627F</h3><p>\u5B9E\u9645\u4E0A\u8FD8\u6709\u4E00\u79CD\u66F4\u7B80\u5355\u7684\u7EE7\u627F,\u8BA9\u5B50\u7C7B\u7684<code>prototype</code>\u7B49\u4E8E\u7236\u7C7B\u7684<code>\u5B9E\u4F8B</code>,\u4E5F\u79F0\u4E3A<code>\u539F\u578B\u94FE</code>\u7EE7\u627F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;parent&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello,&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name">Child</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;parent&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u591A\u91CD\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u591A\u91CD\u7EE7\u627F" aria-hidden="true">#</a> \u591A\u91CD\u7EE7\u627F</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token constant">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token constant">B</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">C</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">C</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> <span class="token constant">C</span><span class="token punctuation">;</span>
<span class="token comment">// \u5408\u5E76B\u7684prototype</span>
Object<span class="token punctuation">.</span><span class="token function">assigin</span><span class="token punctuation">(</span><span class="token class-name">C</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token class-name">B</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="extends-\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#extends-\u7EE7\u627F" aria-hidden="true">#</a> extends \u7EE7\u627F</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Parent</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Child</span> <span class="token keyword">extends</span> <span class="token class-name">Parent</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Maic</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Maic</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F<code>constructor</code>\u4E2D\u6709<code>super()</code>\u8C03\u7528</p><h4 id="\u6784\u9020\u51FD\u6570\u7684\u53D8\u4F53-es6-\u7684-class" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u7684\u53D8\u4F53-es6-\u7684-class" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u7684\u53D8\u4F53\uFF0Ces6 \u7684 class</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// utils.js</span>
<span class="token keyword">class</span> <span class="token class-name">Utils</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> instance <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">formateDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">formateUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;formateUrl&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Utils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>instance<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Utils<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F15\u5165<code>utils.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Utils <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Utils<span class="token punctuation">.</span><span class="token function">formateUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h4><p>1\u3001<code>obj instanceof A</code>\u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570(A \u662F\u5426\u662F obj \u7684\u6784\u9020\u51FD\u6570)\uFF0C\u5982\u679C\u662F\u5219\u8FD4\u56DE<code>true</code>\u3001\u4E0D\u662F\u8FD4\u56DE<code>false</code></p><p>2\u3001<code>A.prototype.isPrototypeOf(obj)</code>\u5224\u65AD\u6784\u9020\u51FD\u6570<code>A</code>\u662F\u4E0D\u662F<code>obj</code>\u5B9E\u4F8B\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570</p><p>3\u3001\u5E38\u7528\u7684\u51E0\u79CD\u7EE7\u627F\u3001<code>\u539F\u578B\u7EE7\u627F\u6CD5</code>\u3001<code>\u4E34\u65F6\u6784\u9020\u5668</code>\u3001<code>\u539F\u578B\u5C5E\u6027\u62F7\u8D1D\u7EE7\u627F</code>\u3001<code>\u5BC4\u751F\u7EE7\u627F</code>\u3001<code>\u6784\u9020\u5668\u7EE7\u627F\u3010call\u3011</code>\u3001<code>\u539F\u578B\u94FE\u7EE7\u627F</code>\u3001<code>extends\u7EE7\u627F</code> 4\u3001<code>call</code>\u7236\u7C7B\u6784\u9020\u51FD\u6570\u5728\u5B50\u7C7B\u6784\u9020\u51FD\u6570\u8C03\u7528<code>call</code>\u5B9E\u73B0\u7EE7\u627F\uFF0C\u7236\u7C7B\u9664\u4E86\u4E86\u81EA\u8EAB\u5C5E\u6027\u548C\u81EA\u8EAB\u65B9\u6CD5\u80FD\u88AB\u7EE7\u627F\u8BBF\u95EE\uFF0C\u7236\u7C7B\u539F\u578B\u7684\u65B9\u6CD5\u5B50\u7C7B\u65E0\u6CD5\u8BBF\u95EE</p><p>5\u3001<code>Child.prototype = Object.create(Parent.prototype)</code>\u5B9E\u73B0\u7EE7\u627F\u7236\u7C7B</p>`,62),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","2022-04-13.html.vue"]]);export{k as default};
