import{_ as e,o,c,a as n,d as t,e as a,b as s,r as l}from"./app.e95f74c0.js";const i={},u=a(`<p>\u4E3A\u7EC4\u5185\u5B9E\u73B0\u4E00\u4E2A\u79C1\u6709\u901A\u7528\u7684\u7EC4\u4EF6\u5E93\uFF0C\u89E3\u653E\u91CD\u590D\u52B3\u52A8\u529B\uFF0C\u63D0\u9AD8\u6548\u7387\uFF0C\u8BA9\u4F60\u7684\u4EE3\u7801\u88AB\u66F4\u591A\u5C0F\u4F19\u4F34\u4F7F\u7528\u3002</p><p>\u672C\u6587\u662F\u7B14\u8005\u603B\u7ED3\u7684\u4E00\u7BC7\u5173\u4E8E\u6784\u5EFA\u7EC4\u4EF6\u5E93\u7684\u4E00\u4E9B\u7ECF\u9A8C\u548C\u601D\u8003\uFF0C\u5E0C\u671B\u5728\u9879\u76EE\u4E2D\u6709\u6240\u5E2E\u52A9\u3002</p><p>\u6B63\u6587\u5F00\u59CB...</p><h3 id="\u521D\u59CB\u5316\u4E00\u4E2A\u57FA\u7840\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316\u4E00\u4E2A\u57FA\u7840\u9879\u76EE" aria-hidden="true">#</a> \u521D\u59CB\u5316\u4E00\u4E2A\u57FA\u7840\u9879\u76EE</h3><p>\u751F\u6210\u57FA\u7840<code>package.json</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm init <span class="token operator">-</span>y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B89\u88C5\u9879\u76EE\u6307\u5B9A\u9700\u8981\u7684\u63D2\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm i webpack webpack<span class="token operator">-</span>cli html<span class="token operator">-</span>webpack<span class="token operator">-</span>plugin @babel<span class="token operator">/</span>core @babel<span class="token operator">/</span>cli @babel<span class="token operator">/</span>preset<span class="token operator">-</span>env webpack<span class="token operator">-</span>dev<span class="token operator">-</span>server <span class="token operator">--</span>save<span class="token operator">-</span>dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),r=n("code",null,"webpack",-1),k=s("\u5B98\u65B9\u652F\u6301"),d=n("code",null,"ts",-1),v=s("\u7F16\u5199\u914D\u7F6E\u73AF\u5883\uFF0C\u4E0D\u8FC7\u9700\u8981\u5B89\u88C5\u51E0\u4E2A\u63D2\u4EF6\u652F\u6301\uFF0C\u53C2\u8003\u5B98\u7F51"),m={href:"https://webpack.docschina.org/configuration/configuration-languages/#typescript",title:"configuration-languages",target:"_blank",rel:"noopener noreferrer"},b=s("configuration-languages"),g=s("\uFF0C\u6211\u4EEC\u4ECA\u5929\u4F7F\u7528"),y=n("code",null,"ts",-1),w=s("\u914D\u7F6E"),f=n("code",null,"webpack",-1),h=s("\u3002"),x=a(`<h3 id="\u914D\u7F6E\u652F\u6301\u914D\u7F6E\u6587\u4EF6-ts" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u652F\u6301\u914D\u7F6E\u6587\u4EF6-ts" aria-hidden="true">#</a> \u914D\u7F6E\u652F\u6301\u914D\u7F6E\u6587\u4EF6 ts</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev typescript ts<span class="token operator">-</span>node @types<span class="token operator">/</span>node @types<span class="token operator">/</span>webpack
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4FEE\u6539<code>tsconfig.json</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
     ...
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commonjs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span>
    ...
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>.eslintrc.js</code>\u4E2D\u7684\u76F8\u5173\u914D\u7F6E\uFF0C\u914D\u7F6E<code>env.node:true</code>,\u5177\u4F53\u53C2\u8003\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">es2021</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;plugin:@typescript-eslint/recommended&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;@typescript-eslint/parser&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@typescript-eslint&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-var-requires&#39;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;@typescript-eslint/no-non-null-assertion&#39;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6839<code>config</code>\u76EE\u5F55\u65B0\u5EFA<code>webpack.common.ts</code>\u3001<code>webpack.dev.ts</code>\u3001<code>webpack.prod.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// webpack.common.ts</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> webpack <span class="token keyword">from</span> <span class="token string">&#39;webpack&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u914D\u7F6EdevServer</span>
<span class="token keyword">import</span> <span class="token string">&#39;webpack-dev-server&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> configCommon<span class="token operator">:</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token punctuation">{</span>
  entry<span class="token operator">:</span> <span class="token punctuation">{</span>
    app<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../src/index.ts&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  output<span class="token operator">:</span> <span class="token punctuation">{</span>
    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// clean: true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  module<span class="token operator">:</span> <span class="token punctuation">{</span>
    rules<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.ts(x?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        use<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            loader<span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            loader<span class="token operator">:</span> <span class="token string">&#39;ts-loader&#39;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>
    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.js&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  devServer<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      directory<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../example&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u4FEE\u6539\u9ED8\u8BA4\u9759\u6001\u670D\u52A1\u8BBF\u95EEpublic\u76EE\u5F55</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> configCommon<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>webpack.dev.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// config/webpack.dev.ts</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> webpack <span class="token keyword">from</span> <span class="token string">&#39;webpack&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-merge&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> HtmlWebpackPlguin <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> webpackCommon <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./webpack.common&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> devConfig<span class="token operator">:</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>webpackCommon<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  devtool<span class="token operator">:</span> <span class="token string">&#39;inline-source-map&#39;</span><span class="token punctuation">,</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlguin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      inject<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      filename<span class="token operator">:</span> <span class="token string">&#39;index.html&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u53EA\u80FD\u662F\u6587\u4EF6\u540D\uFF0C\u4E0D\u80FD\u662Fxxx/index.html \u4F1A\u9020\u6210\u9875\u9762\u6A21\u7248\u52A0\u8F7Dejs\u89E3\u6790\u9519\u8BEF</span>
      template<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../example/index.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      title<span class="token operator">:</span> <span class="token string">&#39;example&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> devConfig<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>webpack.prod.ts</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// webpack.prod.ts</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-merge&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> webpack <span class="token keyword">from</span> <span class="token string">&#39;webpack&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./webpack.common&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">prodConfig</span><span class="token operator">:</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;production&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> prodConfig<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5728\u6839\u76EE\u5F55\u4E0B\u521B\u5EFA<code>webpack.config.ts</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// webpack.config.ts</span>
type PlainObj <span class="token operator">=</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> devConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/webpack.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> prdConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/webpack.prod&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">env</span><span class="token operator">:</span> PlainObj<span class="token punctuation">,</span> <span class="token literal-property property">argv</span><span class="token operator">:</span> PlainObj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F00\u53D1\u73AF\u5883 argv\u4F1A\u83B7\u53D6package.json\u4E2D\u8BBE\u7F6E--mode\u7684\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> devConfig<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> prdConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>package.json</code>\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve --mode development&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --mode production&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C<code>npm run start</code><img src="https://files.mdnice.com/user/24614/92732490-132c-4a9f-a88f-76f457ffe48e.png" alt=""></p><p>\u6211\u4EEC\u770B\u4E0B<code>src/index.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> domApp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">11122</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
domApp<span class="token operator">!</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;hello word&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u6240\u6709\u7684\u8FD9\u4E9B\u57FA\u672C\u90FD\u662F\u4E3A\u4E86\u652F\u6301<code>ts</code>\u73AF\u5883\uFF0C\u8FD8\u6709\u652F\u6301<code>ts</code>\u53EF\u914D\u7F6E<code>webpack</code>\u73AF\u5883</p><p>\u73B0\u5728\u6211\u4EEC\u8BD5\u56FE\u5C06\u4E00\u4E9B\u901A\u7528\u7684\u5DE5\u5177\u51FD\u6570\u8D21\u732E\u7ED9\u5176\u4ED6\u5C0F\u4F19\u4F34\u7528\u4E86\u3002</p><p>\u5728<code>src</code>\u65B0\u5EFA\u5176\u4ED6\u5DE5\u5177\u51FD\u6570\uFF0C\u4F8B\u5982\u5728\u4E4B\u524D\u6211\u4EEC\u6240\u7528\u5230\u7684<code>timerChunk</code>\u5206\u65F6\u51FD\u6570</p><p><code>timerChunk.ts</code>\u5206\u65F6\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// timerChunk.ts</span>
<span class="token comment">// \u5206\u65F6\u51FD\u6570</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span>sourceArr<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ret<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    timer<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">renderData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> sourceArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53D6\u51FA\u6570\u636E</span>
      ret <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">callback</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5229\u7528\u5B9A\u65F6\u5668\u6BCF\u9694200ms\u53D6\u51FA\u6570\u636E</span>
      timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u6570\u636E\u53D6\u5B8C\u4E86\uFF0C\u5C31\u6E05\u7A7A\u5B9A\u65F6\u5668</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sourceArr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
          ret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">renderData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>memorize</code>\u7F13\u5B58\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// src/memorize.ts</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@desption</span> \u7F13\u5B58\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> callback
 * <span class="token keyword">@returns</span>
 */</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">memorize</span> <span class="token operator">=</span> <span class="token punctuation">(</span>callback<span class="token operator">:</span> callBack<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u7F13\u5B58\u6807\u8BC6\u5B58\u5728\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u7F13\u5B58\u7684\u7ED3\u679C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5C06\u6267\u884C\u7684\u56DE\u8C03\u51FD\u6570\u8D4B\u503C\u7ED9\u7ED3\u679C</span>
      result <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u628A\u7F13\u5B58\u5F00\u5173\u6253\u5F00</span>
      cache <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token comment">// \u6E05\u9664\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570</span>
      callback <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>isType.ts</code>\u68C0\u6D4B\u6570\u636E\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@desption</span> \u5224\u65AD\u57FA\u7840\u6570\u636E\u7C7B\u578B\u4EE5\u53CA\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF0C\u66FF\u4EE3typeof
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> val
 * <span class="token keyword">@returns</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> object <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[object </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>formateUrl.ts</code>\u83B7\u53D6<code>url</code>\u53C2\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./isType&#39;</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@desption</span> \u5C06url\u53C2\u6570\u8F6C\u6362\u6210\u5BF9\u8C61
 * <span class="token keyword">@param</span> <span class="token parameter">params</span>
 * <span class="token keyword">@returns</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formateUrl</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^http(s)?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">URL</span></span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u53C2\u6570\u8F6C\u6362\u6210http://localhost:8080?a=1&amp;b=2   -&gt; {a:1,b:2}</span>
      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// params\u5982\u679C\u4E3Aa=1&amp;b=2,\u5219\u8F6C\u6362\u6210{a:1,b:2}</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>lazyFunction.ts</code>\u61D2\u52A0\u8F7D\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> memorize <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./memorize&#39;</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@desption</span> \u61D2\u52A0\u8F7D\u53EF\u6267\u884C\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> factory
 * <span class="token keyword">@returns</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">lazyFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span>factory<span class="token operator">:</span> callBack<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fac<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token function">memorize</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fac</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> f<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>hasOwn.ts</code>\u5224\u65AD\u4E00\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\u662F\u5426\u5B58\u5728</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> has <span class="token operator">=</span> Reflect<span class="token punctuation">.</span>has<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">hasOwn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>obj<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">has</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> hasOwn <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mergeDeep.ts</code>\u6DF1\u62F7\u8D1D\u5BF9\u8C61</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./isType&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> memorize <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./memorize&#39;</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@desption</span> \u6DF1\u62F7\u8D1D\u4E00\u4E2A\u5BF9\u8C61
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> obj
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>*<span class="token punctuation">}</span> targets
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">mergeDeep</span> <span class="token operator">=</span> <span class="token punctuation">(</span>obj<span class="token operator">:</span> object<span class="token punctuation">,</span> targets<span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> descriptors <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// todo \u9488\u5BF9\u4E0D\u540C\u7684\u6570\u636E\u7C7B\u578B\u505Avalue\u5904\u7406</span>
  <span class="token keyword">const</span> <span class="token function-variable function">helpFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;Object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;Array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> ret<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// todo \u8F85\u52A9\u51FD\u6570\uFF0C\u9012\u5F52\u6570\u7EC4\u5185\u90E8, \u8FD9\u91CC\u9012\u5F52\u53EF\u4EE5\u8003\u8651\u7528\u5206\u65F6\u51FD\u6570\u6765\u4EE3\u66FF\u4F18\u5316</span>
      <span class="token keyword">const</span> <span class="token function-variable function">loopFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>curentVal<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        curentVal<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;Object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">helpFn</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;Array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">loopFn</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">loopFn</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>descriptors<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// todo \u6839\u636Ename\u53D6\u51FA\u5BF9\u8C61\u5C5E\u6027\u7684\u6BCF\u4E2Adescriptor</span>
    <span class="token keyword">const</span> descriptor <span class="token operator">=</span> descriptors<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>get<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> fn <span class="token operator">=</span> descriptor<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        configurable<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        enumerable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        writable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        get<span class="token operator">:</span> <span class="token function">memorize</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token comment">// \u53C2\u8003https://github.com/webpack/webpack/blob/main/lib/index.js</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        value<span class="token operator">:</span> <span class="token function">helpFn</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
        writable<span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5728<code>src</code>\u4E2D\u521B\u5EFA\u4E86\u4EE5\u4E0A\u6240\u6709\u7684\u5DE5\u5177\u51FD\u6570</p><p>\u6211\u4EEC\u5728<code>src/index.ts</code>\u5C06\u4E0A\u9762\u6240\u6709\u7684\u5DE5\u5177\u51FD\u6570\u5BFC\u5165</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// const domApp = document.getElementById(&#39;app&#39;);</span>
<span class="token comment">// console.log(11122);</span>
<span class="token comment">// domApp!.innerHTML = &#39;hello word&#39;;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./memorize&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./lazyFunction&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./hasOwn&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./getOrigin&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./formateUrl&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./mergeDeep&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./isType&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u9700\u8981\u6253\u5305\u4E0D\u540C\u73AF\u5883\u7684<code>lib</code>,\u901A\u7528\u5C31\u662F<code>umd</code>,<code>cjs</code>,<code>esm</code>\u8FD9\u4E09\u79CD\u65B9\u5F0F</p>`,40),_=s("\u4E3B\u8981\u8981\u662F\u4FEE\u6539\u4E0B"),j=n("code",null,"webpack.config.output",-1),q=s("\u7684"),C=n("code",null,"library.type",-1),T=s(",\u53C2\u8003\u5B98\u65B9"),O={href:"https://webpack.docschina.org/configuration/output/#outputlibrary",title:"outputlibrary",target:"_blank",rel:"noopener noreferrer"},A=s("outputlibrary"),E=a(`<p>\u6211\u4EEC\u5728<code>config</code>\u76EE\u5F55\u4E0B\u65B0\u5EFA\u4E00\u4E2A<code>webpack.target.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> webpack <span class="token keyword">from</span> <span class="token string">&#39;webpack&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> prdConfig <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./webpack.prod&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">enum</span> <span class="token constant">LIBARY_TARGET</span> <span class="token punctuation">{</span>
  umd <span class="token operator">=</span> <span class="token string">&#39;umd&#39;</span><span class="token punctuation">,</span>
  cjs <span class="token operator">=</span> <span class="token string">&#39;cjs&#39;</span><span class="token punctuation">,</span>
  esm <span class="token operator">=</span> <span class="token string">&#39;esm&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> targetUMD<span class="token operator">:</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>prdConfig<span class="token punctuation">,</span>
  output<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>prdConfig<span class="token punctuation">.</span>output<span class="token punctuation">,</span>
    filename<span class="token operator">:</span> <span class="token string">&#39;umd/index.js&#39;</span><span class="token punctuation">,</span>
    library<span class="token operator">:</span> <span class="token punctuation">{</span>
      name<span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token string">&#39;umd&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> targetCJS<span class="token operator">:</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>prdConfig<span class="token punctuation">,</span>
  output<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>prdConfig<span class="token punctuation">.</span>output<span class="token punctuation">,</span>
    filename<span class="token operator">:</span> <span class="token string">&#39;cjs/index.js&#39;</span><span class="token punctuation">,</span>
    library<span class="token operator">:</span> <span class="token punctuation">{</span>
      name<span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token string">&#39;commonjs&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> targetESM<span class="token operator">:</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>prdConfig<span class="token punctuation">,</span>
  experiments<span class="token operator">:</span> <span class="token punctuation">{</span>
    outputModule<span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  output<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>prdConfig<span class="token punctuation">.</span>output<span class="token punctuation">,</span>
    filename<span class="token operator">:</span> <span class="token string">&#39;esm/index.js&#39;</span><span class="token punctuation">,</span>
    library<span class="token operator">:</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>
      <span class="token keyword">export</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> libraryTargetConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token constant">LIBARY_TARGET</span><span class="token punctuation">.</span>umd<span class="token punctuation">,</span> targetUMD<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token constant">LIBARY_TARGET</span><span class="token punctuation">.</span>cjs<span class="token punctuation">,</span> targetCJS<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token constant">LIBARY_TARGET</span><span class="token punctuation">.</span>esm<span class="token punctuation">,</span> targetESM<span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> libraryTargetConfig<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>webpack.config.ts</code>\u5F15\u5165<code>webpack.target.ts</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// webpack.config.ts</span>
<span class="token keyword">type</span> <span class="token class-name">PlainObj</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> devConfig <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/webpack.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> libraryTargetConfig <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./config/webpack.target&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span>env<span class="token operator">:</span> PlainObj<span class="token punctuation">,</span> argv<span class="token operator">:</span> PlainObj<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5F00\u53D1\u73AF\u5883 argv\u4F1A\u83B7\u53D6package.json\u4E2D\u8BBE\u7F6E--mode\u7684\u503C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> devConfig<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> libraryTargetConfig<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>argv<span class="token punctuation">.</span>env<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> libraryTargetConfig<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>argv<span class="token punctuation">.</span>env<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token operator">:</span> libraryTargetConfig<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;umd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u6211\u4EEC\u5728<code>package.json</code>\u4E2D\u914D\u7F6E\u4E0D\u540C\u6A21\u5F0F\u6253\u5305</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code> <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack serve --mode development&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:umd&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --mode production --env target=umd&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:esm&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --mode production --env target=esm&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:cjs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --mode production --env target=cjs&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build:umd &amp;&amp; npm run build:esm &amp;&amp; npm run build:cjs&quot;</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u4F9D\u6B21\u6267\u884C<code>npm run build</code></p><p><img src="https://files.mdnice.com/user/24614/47df5bff-313d-430a-822a-3b727bd92093.png" alt=""> \u5728<code>example</code>\u76EE\u5F55\u4E0B\u65B0\u5EFA\u6D4B\u8BD5<code>index.ts</code>\uFF0C\u540C\u65F6\u8BB0\u5F97\u4FEE\u6539<code>webpack.dev.ts</code>\u7684<code>entry</code>\u5165\u53E3\u6587\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// example/index.ts</span>
<span class="token comment">// ok</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> nice_utils <span class="token keyword">from</span> <span class="token string">&#39;../src/index&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// umd</span>
<span class="token comment">// const nice_utils = require(&#39;../dist/umd/index.js&#39;);</span>
<span class="token comment">// cjs</span>
<span class="token comment">// const { nice_utils } = require(&#39;../dist/cjs/index.js&#39;);</span>
<span class="token comment">// esm error</span>
<span class="token comment">// import nice_utils from &#39;../dist/esm/index.js&#39;;</span>

<span class="token keyword">const</span> appDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
appDom<span class="token operator">!</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;hello, \u6B22\u8FCE\u5173\u6CE8\u516C\u4F17\u53F7\uFF1AWeb\u6280\u672F\u5B66\u82D1\uFF0C\u597D\u597D\u5B66\u4E60\uFF0C\u5929\u5929\u5411\u4E0A!&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nice_utils<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;formateUrl:&#39;</span><span class="token punctuation">,</span> nice_utils<span class="token punctuation">.</span><span class="token function">formateUrl</span><span class="token punctuation">(</span><span class="token string">&#39;http://www.example.com?name=Maic&amp;age=18&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hasOwn:&#39;</span><span class="token punctuation">,</span> nice_utils<span class="token punctuation">.</span><span class="token function">hasOwn</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">publictext</span><span class="token operator">:</span> <span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;publictext&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;isType:&#39;</span><span class="token punctuation">,</span> nice_utils<span class="token punctuation">.</span><span class="token function">isType</span><span class="token punctuation">(</span><span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;String&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u8FD0\u884C<code>npm run start</code>,\u6D4B\u8BD5\u8FD0\u884C\u4E0B<code>example</code>\u662F\u5426<code>ok</code><img src="https://files.mdnice.com/user/24614/4b0e462c-5e25-4748-9817-13f223f508b4.png" alt=""></p><p>\u6211\u53D1\u73B0<code>esm</code>\u6253\u5305\u51FA\u6765\u7684\u5C45\u7136\u7528\u4E0D\u4E86\uFF0C\u8FD9\u5C31\u5F88\u5751\u4E86\uFF0C\u96BE\u9053\u662F\u6A21\u5757\u4F7F\u7528\u7684\u95EE\u9898\uFF1F <img src="https://img.soogif.com/2kVolGgyZRQOZAprxSzXn3GH9ssoNLK8.gif?scope=mdnice" alt=""></p><p>\u4F46\u662F\u5176\u4ED6\u4E24\u79CD\u8C8C\u4F3C\u662F<code>ok</code>\u7684</p><h3 id="npm-\u53D1\u5E03\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#npm-\u53D1\u5E03\u7EC4\u4EF6" aria-hidden="true">#</a> npm \u53D1\u5E03\u7EC4\u4EF6</h3><p>\u6211\u4EEC\u73B0\u5728\u5C06\u8FD9\u5305\u53D1\u5E03\u5230<code>npm</code>\u4E0A\u5427</p><ul><li><code>npm run build</code></li></ul><p>\u751F\u6210<code>dist</code>\u5305,\u5E76\u4E14\u4FEE\u6539<code>package.json</code>\u6587\u4EF6\u7684<code>main</code>\uFF0C\u6307\u5B9A\u5230<code>dist/umd/index.js</code>\u4E0B</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@maicfir/nice_utils&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.4&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u4E00\u4E2A\u597D\u7528\u7684\u5DE5\u5177\u7C7B\u5E93&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist/umd/index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src/types/global.d.ts&quot;</span><span class="token punctuation">,</span>
  ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),R=a("<li><p><code>npm login</code></p><ul><li>\u8F93\u5165\u81EA\u5DF1<code>npm</code>\u8D26\u6237\u548C\u5BC6\u7801</li><li>\u8F93\u5165\u81EA\u5DF1\u5BC6\u7801\u540E\uFF0C\u9700\u8981\u8F93\u5165\u90AE\u7BB1\uFF0C\u7136\u540E npm \u4F1A\u7ED9\u4F60\u90AE\u7BB1\u53D1\u4E2A<code>code</code>\uFF0C\u628A<code>code</code>\u8F93\u5165\u5373\u53EF</li></ul></li><li><p><code>npm publish</code></p></li>",2),z=s("\u67E5\u770B npm \u4E0A\u662F\u5426\u6210\u529F\uFF0C\u5177\u4F53\u53EF\u4EE5\u67E5\u770B"),P={href:"https://www.npmjs.com/package/@maicfir/nice_utils",target:"_blank",rel:"noopener noreferrer"},S=s("nice_utils"),B=n("img",{src:"https://files.mdnice.com/user/24614/0b502648-704d-4133-a751-55bb8f44eb98.png",alt:""},null,-1),L=n("h3",{id:"\u603B\u7ED3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u603B\u7ED3","aria-hidden":"true"},"#"),s(" \u603B\u7ED3")],-1),I=a("<li><p>\u5229\u7528<code>webpack5</code>\u914D\u7F6E\u6253\u5305<code>ts</code>\u73AF\u5883\uFF0C\u4E3B\u8981\u662F\u8BA9<code>webpack5</code>\u914D\u7F6E\u6587\u4EF6\u652F\u6301<code>ts</code></p></li><li><p>\u7EC4\u7EC7<code>webpack5</code>\u6253\u5305\u4E0D\u540C<code>library.type</code>,\u652F\u6301\u6253\u5305\u6210\u4E0D\u540C<code>type</code>,<code>umd</code>,<code>cjs</code>,<code>ejs</code>\u4E09\u79CD\u7C7B\u578B</p></li><li><p>\u7F16\u5199\u5177\u4F53\u5DE5\u5177\u7C7B\u51FD\u6570</p></li><li><p>\u5C06\u81EA\u5DF1\u5199\u7684\u5DE5\u5177\u7C7B\u53D1\u5E03\u5230<code>npm</code>\u6216\u8005\u79C1\u670D\u4E0A\uFF0C\u8BA9\u5DE5\u5177\u7C7B\u53D8\u6210\u901A\u7528\u5DE5\u5177\u4EE3\u7801</p></li>",4),M=s("\u672C\u6587\u793A\u4F8B"),D={href:"https://github.com/maicFir/nice_utils",title:"code-example",target:"_blank",rel:"noopener noreferrer"},F=s("code-example");function U(V,G){const p=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[r,k,d,v,n("a",m,[b,t(p)]),g,y,w,f,h]),x,n("p",null,[_,j,q,C,T,n("a",O,[A,t(p)])]),E,n("ul",null,[R,n("li",null,[n("p",null,[z,n("a",P,[S,t(p)]),B])])]),L,n("ul",null,[I,n("li",null,[n("p",null,[M,n("a",D,[F,t(p)])])])])])}var N=e(i,[["render",U],["__file","2022-06-29.html.vue"]]);export{N as default};
