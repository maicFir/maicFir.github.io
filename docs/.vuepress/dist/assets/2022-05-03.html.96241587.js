import{_ as n,o as s,c as a,e as p}from"./app.853ad0f9.js";const t={},e=p(`<h3 id="leetcode-442-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#leetcode-442-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u636E" aria-hidden="true">#</a> leetcode:442 \u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u636E</h3><blockquote><p>\u7ED9\u5B9A\u4E00\u4E2A\u957F\u5EA6\u4E3A n \u7684\u6570\u7EC4<code>nums</code>\uFF0C\u6570\u7EC4<code>nums</code>[1,n]\u5185\u51FA\u73B0\u7684\u91CD\u590D\u7684\u5143\u7D20\uFF0C\u8BF7\u4F60\u627E\u51FA\u6240\u6709\u51FA\u73B0<code>\u4E24\u6B21</code>\u7684\u6574\u6570\uFF0C\u5E76\u4EE5\u6570\u7EC4\u5F62\u5F0F\u8FD4,\u4F60\u5FC5\u987B\u8BBE\u8BA1\u5E76\u5B9E\u73B0\u4E00\u4E2A\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n) \u4E14\u4EC5\u4F7F\u7528\u5E38\u91CF\u989D\u5916\u7A7A\u95F4\u7684\u7B97\u6CD5\u89E3\u51B3\u6B64\u95EE\u9898\u3002</p></blockquote><p>\u89E3\u9898\u601D\u8DEF</p><p>\u590D\u6742\u5EA6 O(n),\u9996\u5148\u80AF\u5B9A\u53EA\u80FD\u5FAA\u73AF\u4E00\u6B21\u6570\u7EC4\uFF0C\u4E14\u6570\u7EC4\u4E2D\u6709\u91CD\u590D\u7684\u5143\u7D20\uFF0C\u5E76\u4E14\u627E\u51FA\u91CD\u590D\u7684\u5143\u7D20\u5E76\u8FD4\u56DE\u3002</p><p>\u5177\u4F53\u5B9E\u73B0\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">findDuplicates</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">findDuplicates</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2,3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u4EE5\u4E0A\u4EE3\u7801\u5757\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u5BFB\u627E\u6570\u7EC4\u4E2D\u7684\u91CD\u590D\u6570\u5B57\u4E86\u3002</p><p>\u4F46\u662F\u6211\u4EEC\u8981\u5177\u4F53\u5206\u6790\u4E0B\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A\u4EC0\u4E48\u662F O(n)</p><p>\u89E3\u91CA\u4E00\u4E0B\u4EC0\u4E48\u662F<code>\u65F6\u95F4\u590D\u6742\u5EA6O(n)</code></p><p>\u767E\u5EA6\u76F8\u5173\u8D44\u6599\u89E3\u91CA\uFF0CO(n)\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u7EBF\u6027\u7684\u4E00\u6B21\u51FD\u6570\uFF0C\u53EF\u4EE5\u770B\u6210 y = x;y \u968F\u7740 x \u7684\u589E\u957F\u800C\u589E\u957F,\u5177\u4F53\u4E00\u5F20\u56FE\u52A0\u6DF1\u4E0B\u5370\u8C61</p><p><img src="https://files.mdnice.com/user/24614/a09db7dd-bae9-4856-a263-a43dce477f2d.png" alt=""></p><p>\u53E6\u5916\u8FD8\u6709\u4E00\u4E2A\u6BD4\u8F83\u8D39\u8111\u58F3\u7684\u8BCD<code>\u7A7A\u95F4\u590D\u6742\u5EA6O(1)</code></p><p>\u4E0D\u7BA1<code>x</code>\u600E\u4E48\u53D8\u5316\uFF0C<code>y</code>\u59CB\u7EC8\u662F\u4E00\u4E2A\u5B9A\u503C <img src="https://files.mdnice.com/user/24614/5aeea693-7c52-420d-b0a7-cd8794622182.png" alt=""></p><p>\u5728\u65F6\u95F4\u590D\u6742\u5EA6 O(n)\u5177\u4F53\u662F\u600E\u4E48\u6837</p><p>\u6211\u4EEC\u4F1A\u53D1\u73B0 n=10,\u4E0B\u9762\u5FAA\u73AF\u5C31\u5FAA\u73AF\u7684 10 \u6B21\uFF0C\u5982\u679C n=100,\u90A3\u4E48\u5C31\u4F1A\u5FAA\u73AF 100 \u6B21\u3002\uFF0C\u6240\u4EE5<code>y</code>\u662F\u968F\u7740<code>n</code>\u5448\u7EBF\u6027\u53D8\u5316\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  y <span class="token operator">+=</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u662F\u53CC\u5C42\u5FAA\u73AF\u5462\uFF0C\u90A3\u4E48\u6B64\u65F6\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F O(n^2),\u6BD4\u5982</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> b<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u53CC\u5C42\u5FAA\u73AF\uFF0C\u90A3\u4E48\u65F6\u95F4\u590D\u6742\u5FAA\u73AF\u5C31\u662F 100 \u6B21\u4E86\uFF0C\u6240\u4EE5\u590D\u6742\u5EA6\u5C31 O(n^2)\u4E86 <img src="https://files.mdnice.com/user/24614/fbb74daa-ea06-48db-ac4f-257afa868d12.png" alt=""></p><p>\u5982\u679C\u6CA1\u6709\u5FAA\u73AF\uFF0C\u5728\u6570\u7EC4\u4E2D\u5BFB\u627E\u6307\u5B9A\u5143\u7D20\u5462\uFF0C\u90A3\u4E48\u590D\u6742\u5EA6\u5C31 O(1);</p><p><code>\u603B\u7ED3\u4EE5\u4E0A\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u6709\u4E00\u5C42\u5FAA\u73AF\u5C31\u662FO(n),\u5982\u679C\u6CA1\u6709\u5FAA\u73AF\uFF0C\u5728\u6570\u7EC4\u4E2D\u627E\u503CO\uFF081\uFF09\uFF0C\u5982\u679C\u662F\u53CC\u5C42\u5FAA\u73AF\u90A3\u4E48\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662FO(n^2)\uFF1B</code></p><p>\u5F88\u663E\u7136\u6211\u4EEC\u8FD9\u9053\u9898\u4F7F\u7528\u7684\u662F\u4E00\u5C42\u5FAA\u73AF\uFF0C\u90A3\u4E48\u590D\u6742\u5EA6\u5C31\u662F O(n),\u6211\u4EEC\u501F\u7528\u4E86\u4E00\u4E2A<code>arr = new Array(n).fill(0)</code>\u5176\u5B9E\u662F\u5728<code>n</code>\u957F\u5EA6\u7684\u6570\u7EC4\u4E2D\u5FEB\u901F\u62F7\u8D1D\u8D4B\u503C\u4E00<code>n</code>\u4E2A\u957F\u5EA6\u7684 0\u3002</p><p>\u4F46\u662F\u6211\u4EEC\u53D1\u73B0\u5728\u5FAA\u73AF\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86<code>continue</code>,<code>continue</code>\u5728<code>for</code>\u5FAA\u73AF\u7684\u4F5C\u7528\u662F\u8DF3\u8FC7\u672C\u6B21\u5FAA\u73AF\uFF0C\u4E5F\u6B63\u662F\u5229\u7528\u8FD9\u4E00\u70B9\uFF0C\u6211\u4EEC\u5C06\u5F53\u4E0B\u6570\u7EC4\u503C\u4F5C\u4E3A<code>arr</code>\u7684\u7D22\u5F15\uFF0C\u5E76\u8BBE\u7F6E\u4E00\u4E2A\u503C\u3002</p><p>\u5173\u4E8E<code>continue</code>\u8DF3\u8FC7\u672C\u6B21\u5FAA\u73AF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5199\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u6D4B\u8BD5\u4E00\u4E0B</p><p>\u5F53<code>i===2</code>\u65F6\uFF0C\u8DF3\u8FC7\u5F53\u524D\u5FAA\u73AF\uFF0C\u90A3\u4E48\u6B64\u65F6\u540E\u9762\u7684<code>result.push(i)</code>\u81EA\u7136\u5C31\u4E0D\u4F1A\u6709\u6548\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0,1,3,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\u4E00\u4E2A\u5BF9\u5E94\u5C31\u662F<code>break</code>;</p><p>\u5F88\u663E\u7136<code>break</code>\u662F\u4E2D\u6B62\u5FAA\u73AF\uFF0C\u5F53<code>i=2</code>\u65F6\uFF0C\u6574\u4E2A\u5FAA\u73AF\u5C31\u7ED3\u675F\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0,1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u6765\u5206\u6790\uFF0C\u5176\u5B9E\u6211\u4EEC\u4F1A\u53D1\u73B0\uFF0C\u5F88\u6709\u610F\u601D\u5C31\u662F</p><p>\u9ED8\u8BA4\u60C5\u51B5\u6570\u7EC4\u4E2D<code>arr</code>\u6240\u6709\u6570\u636E\u90FD\u662F 0,\u6211\u4EEC\u7528<code>nums[i]</code>\u4E5F\u5C31\u662F\u76EE\u6807\u5143\u7D20\u7684\u503C\u4F5C\u4E3A<code>arr</code>\u7D22\u5F15,\u5E76\u4E14\u6807\u8BB0\u4E3A 1,\u5F53\u4E0B\u6B21\u6709\u91CD\u590D\u7684\u503C\u65F6\uFF0C\u5176\u5B9E\u6B64\u65F6\uFF0C\u5C31\u53D6\u53CD\u64CD\u4F5C\u4E86\u3002\u6240\u4EE5\u5C31\u4E0D\u4F1A\u8D70<code>continue</code>\u4E86\uFF0C\u90A3\u4E48\u6B64\u65F6<code>push</code>\u5C31\u662F\u83B7\u53D6\u5BF9\u5E94\u4E4B\u524D\u7684\u91CD\u590D\u503C\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arr<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\u5728<code>leetcode</code>\u8BC4\u8BBA\u533A\u91CC\u4E5F\u6709\u6BD4\u8F83\u597D\u7684\u89E3\u6CD5\uFF0C\u5177\u4F53\u601D\u60F3\u53EF\u4EE5\u53C2\u8003\u4E0B</p><p>\u7ED9\u5BF9\u5E94\u4E0B\u6807\u6570\u5B57\u53D6\u53CD\uFF0C\u5982\u679C\u5DF2\u7ECF\u65F6\u8D1F\u6570\uFF0C\u90A3\u8BC1\u660E\u4E4B\u524D\u51FA\u73B0\u8FC7\u4E86\uFF0C\u90A3\u4E48\u5C31\u5C06\u8BE5\u5143\u7D20\u6DFB\u52A0\u5230\u6570\u7EC4\u4E2D\u53BB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">findDuplicates</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      nums<span class="token punctuation">[</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35),o=[e];function c(u,l){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","2022-05-03.html.vue"]]);export{k as default};
