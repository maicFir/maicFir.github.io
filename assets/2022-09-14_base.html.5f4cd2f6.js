import{_ as t,o as e,c as o,b as n,a as c,e as a,d as s,r as l}from"./app.13e035d0.js";const i={},u=a(`<p><code>\u6570\u7EC4</code>\u5728\u4E1A\u52A1\u4E2D\u662F\u4E00\u4E2A\u975E\u5E38\u9AD8\u9891\u7684API,\u5728\u4E1A\u52A1\u4E2D\u57FA\u672C\u90FD\u6709\u7528\u5B83\uFF0C\u5FC5\u4E0D\u53EF\u5C11\uFF0C\u672C\u6587\u662F\u7B14\u8005\u4E00\u7BC7\u5173\u4E8E\u6570\u7EC4\u5E38\u7528<code>API</code>\u7684\u603B\u7ED3\uFF0C\u5E0C\u671B\u770B\u5B8C\u5728\u9879\u76EE\u4E2D\u6709\u6240\u5E2E\u52A9\u3002</p><p>\u6B63\u6587\u5F00\u59CB...</p><h3 id="\u524D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u524D\u7F6E" aria-hidden="true">#</a> \u524D\u7F6E</h3><p>\u9996\u5148\u6211\u4EEC\u770B\u4E0B\u6570\u7EC4\u672C\u8EAB\u6709\u54EA\u4E9B\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7ED3\u679C:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span>
  <span class="token string">&quot;length&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;constructor&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;at&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;concat&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;copyWithin&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;fill&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;find&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;findIndex&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;lastIndexOf&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;pop&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;push&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;reverse&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;shift&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;unshift&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;slice&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;sort&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;splice&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;includes&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;indexOf&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;join&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;keys&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;entries&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;values&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;forEach&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;filter&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;flat&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;flatMap&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;map&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;every&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;some&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;reduce&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;reduceRight&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;toLocaleString&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;toString&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;findLast&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;findLastIndex&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reduce" tabindex="-1"><a class="header-anchor" href="#reduce" aria-hidden="true">#</a> reduce</h3><p>\u8FD9\u662F\u4E00\u4E2A\u9879\u76EE\u4E0A\u975E\u5E38\u6709\u7528\uFF0C\u4F46\u662F\u4EE3\u7801\u770B\u8D77\u6765\u4E0D\u662F\u5F88\u76F4\u767D\u7684\u4E00\u4E2AAPI</p><ul><li><code>\u573A\u666F</code> \u6211\u9700\u8981\u6839\u636E\u6570\u7EC4\u4E2D\u7684\u67D0\u4E2A\u503C\uFF0C\u7528\u5BF9\u8C61\u4E0E\u539F\u6570\u7EC4\u5EFA\u7ACB\u6620\u5C04\u5173\u7CFB</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> sourceArr <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u6211\u60F3\u901A\u8FC7<code>\u5BF9\u8C61</code>\u8BBF\u95EE\u6570\u7EC4\u7684\u67D0\u4E2A<code>name</code>\u6216\u8005<code>value</code>\u5C31\u80FD\u627E\u5230\u5F53\u524D\u539F\u6570\u636E\u7684<code>item</code>,\u524D\u7F6E\u6761\u4EF6<code>name</code>\u548C<code>value</code>\u4E0D\u4F1A\u4E3A\u76F8\u540C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        prev<span class="token punctuation">[</span>cur<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> cur<span class="token punctuation">;</span>
        <span class="token keyword">return</span> prev
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
// getMap(&#39;name&#39;, sourceArr)
/*
{
  Jack: {name: &#39;Jack&#39;, age: 15, arr: Array(3)}
  Maic: {name: &#39;Maic&#39;, age: 18, arr: Array(2)}
  Tom: {name: &#39;Tom&#39;, age: 20, arr: Array(3)}
}
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> sourceArr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">/*
   {
        name: &#39;Maic&#39;,
        age: 18,
        arr: [&#39;a&#39;, &#39;b&#39;]
    },
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> sourceArr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">/*
  {
    name: &#39;Jack&#39;,
    age: 15,
    arr: [&#39;e&#39;, &#39;d&#39;, &#39;f&#39;]
  }
*/</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token string">&#39;arr&#39;</span><span class="token punctuation">,</span> sourceArr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;a,b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">/*
 {
    name: &#39;Maic&#39;,
    age: 18,
    arr: [&#39;a&#39;, &#39;b&#39;]
  },
*/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u8BA9\u8FD9\u4E2A\u65B9\u6CD5<code>getMap</code>\u53D8\u6210\u66F4\u901A\u7528\uFF0C\u53EA\u9700\u8981\u6302\u8F7D\u539F\u578B\u4E0A\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$getMap</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        prev<span class="token punctuation">[</span>cur<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> cur<span class="token punctuation">;</span>
        <span class="token keyword">return</span> prev
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
sourceArr<span class="token punctuation">.</span><span class="token function">$getMap</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/*
{
  Jack: {name: &#39;Jack&#39;, age: 15, arr: Array(3)}
  Maic: {name: &#39;Maic&#39;, age: 18, arr: Array(2)}
  Tom: {name: &#39;Tom&#39;, age: 20, arr: Array(3)}
}
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4EE5\u4E0A\u4F8B\u5B50\uFF0C\u6211\u4EEC\u5206\u6790\u4E00\u4E0B<code>reduce</code>\u8FD9\u4E2A\u5728\u6570\u7EC4\u4E2D\u6240\u8C13\u7684<code>\u7D2F\u8BA1\u8BA1\u7B97</code>,\u6211\u4EEC\u4EE5\u6700\u7B80\u5355\u7684\u65B9\u5F0F\u6765\u6DF1\u523B\u7406\u89E3<code>reduce</code>\u8FD9\u4E2A\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> sourceArr <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;f&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      prev<span class="token punctuation">[</span>cur<span class="token punctuation">.</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> cur<span class="token punctuation">;</span>
      <span class="token keyword">return</span> prev
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>arr.reduce(callback, init)</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u56DE\u8C03\u51FD\u6570\uFF0C\u7B2C\u4E8C\u53C2\u6570prev<code>init</code>\u7684\u503C\uFF0C<code>callback</code>\u7684<code>prev</code>\u5C31\u662F<code>{}</code>,<code>cur</code>\u662F\u5F53\u524D\u7684\u6570\u7EC4\u7684<code>item</code></p><p>\u7B2C\u4E00\u6B21\u7D2F\u8BA1\u7684\u7ED3\u679C<code>prev</code>\u7684\u503C\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&#39;Maic&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u7ED3\u679C\u4F1A\u5F53\u6210\u7B2C\u4E8C\u6B21\u7D2F\u8BA1\u7684<code>prev</code>\u503C\uFF0C\u8BB0\u4F4F<code>cur</code>\u662F\u5F53\u524D\u539F\u5143\u7D20\u7D2F\u8BA1\u6B21\u6570\u7684<code>item</code>\uFF0C\u6BD4\u5982\u4ECE\u4E0B\u68070\u6B21\u5F00\u59CB\u7D2F\u8BA1\uFF0C\u90A3\u4E48<code>cur</code>\u5C31\u662F\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A<code>item</code></p><p>\u7B2C\u4E8C\u6B21\u7D2F\u8BA1\u7684\u7ED3\u679C\u5C31\u662F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&#39;Maic&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;Tom&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
      <span class="token literal-property property">arr</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F9D\u6B21\u7C7B\u63A8...</p>`,24),r=s("\u6240\u4EE5\u6211\u901A\u8FC7\u5BF9\u8C61\uFF0C\u5C06\u6570\u7EC4\u7684\u503C\u4F5C\u4E3A\u5BF9\u8C61\u7684"),k=n("code",null,"key",-1),d=s(",\u5EFA\u7ACB\u5BF9\u8C61\u4E0E\u539F\u6570\u636E\u7684\u5BF9\u5E94\u5173\u7CFB\uFF0C\u7528"),v=n("code",null,"reduce",-1),m=s("\u8FD9\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u5FEB\u6377\u7684\u8FBE\u5230\u8FD9\u6837\u7684\u9700\u6C42\u6548\u679C,\u5173\u4E8E\u6570\u7EC4"),b=n("code",null,"reduce",-1),g=s("\u540E\u7EED\u4F1A\u5355\u72EC\u5199\u4E00\u7BC7\u6587\u7AE0\u603B\u7ED3\u66F4\u591A\u5728\u5B9E\u9645\u4E1A\u52A1\u4E0A\u7684\u4E00\u4E9B\u601D\u8003\u3002\u4E5F\u53EF\u53C2\u8003\u5B98\u65B9\u6587\u6863"),y=n("code",null,"MDN",-1),f=s("\u8BB2\u89E3"),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce",title:"`reduce`",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"reduce",-1),j=s("\u8FD9\u7BC7\u597D\u6587\u7AE0"),x=a(`<p>\u6709\u4EBA\u8BF4<code>reduce</code>\u5B9E\u73B0\u8FD9\u529F\u80FD\u6709\u70B9\u79C0\u4E86\uFF0C<code>for</code>\u5FAA\u73AF\u4E0D\u662F\u66F4\u597D\u7406\u89E3\u5417</p><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach" aria-hidden="true">#</a> forEach</h3><p><code>forEach</code>\u4E5F\u662F\u4E00\u4E2A\u5FAA\u73AF\u6570\u7EC4\u7684\u7684\u65B9\u6CD5\uFF0C\u5FAA\u73AF\u65B9\u6CD5\u6211\u4EEC\u77E5\u9053\u5728<code>js</code>\u4E2D<code>for..of</code>,<code>for(let i=0;i&lt;len;i++)</code>\u6216\u8005<code>while</code>\u6761\u4EF6\uFF0C\u8FD9\u4E9B\u90FD\u662F\u53EF\u4EE5\u6761\u4EF6\u4E2D\u65AD\uFF0C\u4F46\u662F<code>forEach</code>\u4E0D\u80FD\u4E2D\u65AD\u3010\u975E\u5E38\u89C4\u64CD\u4F5C\u9664\u5916\uFF0C\u6BD4\u5982throw\u629B\u51FA\u5F02\u5E38\u662F\u53EF\u4EE5\u4E2D\u65AD<code>forEach</code>\u7684\u3011</p><p>\u6211\u4EEC\u7528\u540C\u6837\u7684\u4E00\u4E2A\u4F8B\u5B50\u6765\u5B9E\u73B0<code>reduce</code>\u4E00\u6837\u7684\u529F\u80FD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token keyword">function</span> <span class="token function">getMap2</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>v<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">getMap2</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> sourceArr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Maic&#39;</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\u662F\u53EF\u4EE5\u7684\uFF0C\u6761\u6761\u5927\u8DEF\u901A\u7F57\u9A6C,<code>forEach</code>\u8C8C\u4F3C\u770B\u8D77\u6765\u6BD4<code>reduce</code>\u5199\u7684\u90A3\u6BB5\u4EE3\u7801\u9605\u8BFB\u8D1F\u62C5\u8981\u5C0F\u5F97\u591A,\u4F46\u662F\u540C\u6837\u7684\u6548\u679C<code>forEach</code>\u6267\u884C\u6548\u7387\u4E5F\u6BD4<code>reduce</code>\u66F4\u9AD8\u70B9</p><p>\u5177\u4F53\u53EF\u4EE5\u770B\u4E0B\u8FD9\u5F20\u56FE\u6570\u636E <img src="https://files.mdnice.com/user/24614/491ffd86-9532-4d98-876d-4169b3c49f69.png" alt=""></p><p>\u6240\u4EE5\u590D\u6742\u7684\u4E8B\u60C5\uFF0C\u5C3D\u91CF\u7B80\u5355\u5316\uFF0C\u6CA1\u6709\u597D\u574F\u9AD8\u4F4E\u4E4B\u5206\uFF0C\u5BF9\u4E8E\u642C\u7816\u5DE5\u6765\u8BF4\uFF0C\u54EA\u79CD\u719F\u6089\u5C31\u7528\u54EA\u4E2A\u4E86\u3002</p><h3 id="push" tabindex="-1"><a class="header-anchor" href="#push" aria-hidden="true">#</a> push</h3><p>\u8FD9\u662F\u4E00\u4E2A\u6BD4\u8F83\u5E38\u7528\u7684\u65B9\u6CD5\uFF0C\u4E5F\u662F\u5411\u6570\u7EC4\u4E2D\u6DFB\u52A0\u6570\u636E</p><p><code>\u573A\u666F</code>\uFF1A\u5047\u8BBE\u73B0\u5728\u6709\u4E00\u4E2A\u9700\u6C42\uFF0C\u5982\u4F55\u5C06\u4E00\u4E2A\u4E00\u7EF4\u6570\u7EC4\u53D8\u6210\u4E00\u4E2A\u6811\u7ED3\u6784\uFF0C\u5E76\u4E14\u8FD8\u8981\u6309\u7167\u6307\u5B9A\u5206\u7C7B\u8FDB\u884C\u5206\u7EC4</p><p>\u539F\u6570\u636E\u5927\u6982\u5C31\u662F\u8FD9\u6837</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> sourcesData <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
      <span class="token literal-property property">bookType</span><span class="token operator">:</span> <span class="token string">&#39;\u6587\u5B66\u7C7B&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">bookName</span><span class="token operator">:</span> <span class="token string">&#39;\u57FA\u7763\u5C71\u4F2F\u7235&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;x123&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">bookType</span><span class="token operator">:</span> <span class="token string">&#39;\u8D22\u5546\u7C7B&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bookName</span><span class="token operator">:</span> <span class="token string">&#39;\u7A77\u7238\u7238\u4E0E\u5BCC\u7238\u7238&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;x45622&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">bookType</span><span class="token operator">:</span> <span class="token string">&#39;\u7ECF\u6D4E\u5B66&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bookName</span><span class="token operator">:</span> <span class="token string">&#39;\u8D27\u5E01\u6218\u4E89&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;ssxdede&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">bookType</span><span class="token operator">:</span> <span class="token string">&#39;\u6587\u5B66\u7C7B&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bookName</span><span class="token operator">:</span> <span class="token string">&#39;\u767E\u5E74\u5B64\u72EC&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;1234562sx&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540E\u7AEF\u7ED9\u7684\u6570\u636E\u662F\u4E00\u7EF4\u7684\uFF0C\u6211\u4EEC\u9700\u8981\u53D8\u6210\u4E00\u4E2A<code>tree</code>\u7ED3\u6784\u8FDB\u884C\u5206\u7C7B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">transformTree</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceArr<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1\u3001\u5148\u6839\u636Etype\u5B57\u6BB5\u8FDB\u884C\u5206\u7EC4</span>
    <span class="token keyword">const</span> typeData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">type</span> <span class="token operator">=&gt;</span> sourceArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>type <span class="token operator">===</span> type <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// 2\u3001\u5206\u522B\u542B\u6709type\u5B57\u6BB5\u8FDB\u884C\u5206\u7C7B\u540E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>data <span class="token keyword">of</span> typeData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 3\u3001\u6839\u636EbookType\u8FDB\u884C\u5F52\u7EC4\uFF0C\u6587\u4EF6\u5939\u5206\u7C7B\uFF0C\u540C\u4E00\u6587\u4EF6\u5939\u7684\u5F52\u5230\u4E00\u7C7B\u53BB</span>
       <span class="token keyword">const</span> target <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>label <span class="token operator">===</span> item<span class="token punctuation">.</span>bookType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u627E\u5230\u4E86\u5C31\u539F\u6570\u7EC4\u6570\u636E\u6DFB\u52A0\u5230children\u91CC\u53BB</span>
            target<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">label</span><span class="token operator">:</span> item<span class="token punctuation">.</span>bookName<span class="token punctuation">,</span>
                <span class="token operator">...</span>item
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">label</span><span class="token operator">:</span> item<span class="token punctuation">.</span>bookType<span class="token punctuation">,</span>
                <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token punctuation">{</span>
                        <span class="token operator">...</span>item<span class="token punctuation">,</span>
                        <span class="token literal-property property">label</span><span class="token operator">:</span> item<span class="token punctuation">.</span>bookName
                    <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;push:res&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">transformTree</span><span class="token punctuation">(</span>sourcesData<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6253\u5370\u7684\u7ED3\u679C:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u6587\u5B66\u7C7B&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;bookType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u6587\u5B66\u7C7B&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;bookName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u57FA\u7763\u5C71\u4F2F\u7235&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;x123&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u57FA\u7763\u5C71\u4F2F\u7235&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u767E\u5E74\u5B64\u72EC&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;bookType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u6587\u5B66\u7C7B&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;bookName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u767E\u5E74\u5B64\u72EC&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1234562sx&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u8D22\u5546\u7C7B&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;bookType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u8D22\u5546\u7C7B&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;bookName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u7A77\u7238\u7238\u4E0E\u5BCC\u7238\u7238&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;x45622&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u7A77\u7238\u7238\u4E0E\u5BCC\u7238\u7238&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u7ECF\u6D4E\u5B66&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;bookType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u7ECF\u6D4E\u5B66&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;bookName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u8D27\u5E01\u6218\u4E89&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ssxdede&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u8D27\u5E01\u6218\u4E89&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\u6211\u4EEC\u5C31\u5C06\u4E00\u4E2A\u4E00\u56F4\u6570\u7EC4\u53D8\u6210\u4E86\u4E00\u4E2A<code>tree</code>\u7ED3\u6784</p><p>\u6211\u4EEC\u53EF\u4EE5\u5C06\u4E0A\u9762\u4E00\u6BB5<code>forEach</code>\u6539\u6210<code>reduce</code>\uFF0C\u611F\u53D7\u4E0B\u7406\u89E3\u7684\u96BE\u5EA6,\u6700\u540E\u7684\u6548\u679C\u662F\u4E00\u6837\uFF0C\u4F46\u662F<code>reduce</code>\u5BF9\u65B0\u624B\u4E0D\u592A\u53CB\u597D,\u8FD9\u91CC\u5C31\u662F\u4E3A\u4E86\u4F7F\u7528\u800C\u4F7F\u7528\uFF0C\u597D\u50CF\u6CA1\u592A\u5FC5\u8981</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">transformTree2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceArr<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1\u3001\u5148\u6839\u636Etype\u5B57\u6BB5\u8FDB\u884C\u5206\u7EC4</span>
    <span class="token keyword">const</span> typeData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">type</span> <span class="token operator">=&gt;</span> sourceArr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>type <span class="token operator">===</span> type <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// 2\u3001\u5206\u522B\u542B\u6709type\u5B57\u6BB5\u8FDB\u884C\u5206\u7C7B\u540E</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>data <span class="token keyword">of</span> typeData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        data<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// 3\u3001\u6839\u636EbookType\u8FDB\u884C\u5F52\u7EC4\uFF0C\u6587\u4EF6\u5939\u5206\u7C7B\uFF0C\u540C\u4E00\u6587\u4EF6\u5939\u7684\u5F52\u5230\u4E00\u7C7B\u53BB</span>
            <span class="token keyword">const</span> target <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>label <span class="token operator">===</span> cur<span class="token punctuation">.</span>bookType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                target<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">label</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>bookName<span class="token punctuation">,</span>
                    <span class="token operator">...</span>cur
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">label</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>bookType<span class="token punctuation">,</span>
                    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                        <span class="token punctuation">{</span>
                            <span class="token operator">...</span>cur<span class="token punctuation">,</span>
                            <span class="token literal-property property">label</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>bookName
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">]</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> sourceArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">transformTree2</span><span class="token punctuation">(</span>sourcesData<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="some" tabindex="-1"><a class="header-anchor" href="#some" aria-hidden="true">#</a> some</h3><p>\u8FD9\u662F\u4E00\u4E2A\u53EA\u8981\u6761\u4EF6\u6709\u4E00\u4E2A\u6EE1\u8DB3\u5C31\u8FD4\u56DEtrue,\u5426\u5219\u5C31\u8FD4\u56DEfalse <code>\u573A\u666F</code>: \u6211\u9700\u8981\u5728\u539F\u6570\u7EC4\u5927\u4E8E\u67D0\u4E2A\u503C\uFF0C\u4E00\u65E6\u6EE1\u8DB3\uFF0C\u5C31\u8FD4\u56DEtrue</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arraySome</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">&gt;</span> num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;some:&#39;</span><span class="token punctuation">,</span> <span class="token function">arraySome</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">arraySome</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true, false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="every" tabindex="-1"><a class="header-anchor" href="#every" aria-hidden="true">#</a> every</h3><p>\u6070\u597D\u4E0E<code>some</code>\u76F8\u53CD\uFF0C\u5FC5\u987B\u6240\u6709\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u624D\u4F1A\u8FD4\u56DEtrue</p><p><code>\u573A\u666F</code>: \u5728\u4E1A\u52A1\u4E2D\u4F60\u60F3\u4E00\u4E2A\u539F\u6570\u636E\u7684\u6BCF\u4E00\u9879\u90FD\u6EE1\u8DB3\u4E00\u4E2A\u6307\u5B9A\u6761\u4EF6\uFF0C\u6B64\u65F6\u4F1A\u8FD4\u56DEtrue,\u5426\u5219\u5C31\u662Ffalse</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayEvery</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;every:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayEvery</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cdabc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;efg&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">arrayEvery</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cdabc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;aefg&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="at" tabindex="-1"><a class="header-anchor" href="#at" aria-hidden="true">#</a> at</h3><p>\u6BD4\u8F83\u7F55\u89C1\uFF0C\u4E0E\u901A\u8FC7\u4E0B\u6807\u53BB\u503C\u7B49\u4EF7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayAt</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concat" tabindex="-1"><a class="header-anchor" href="#concat" aria-hidden="true">#</a> concat</h3><p>\u5728\u539F\u6709\u6570\u7EC4\u6D45\u62F7\u8D1D\u4E00\u4EFD\u65B0\u7684\u6570\u636E\uFF0C\u7136\u540E\u5728\u65B0\u6570\u636E\u6DFB\u52A0\u5BF9\u5E94\u7684\u5185\u5BB9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * arr: [1,2,3]
 * concat: \u5728\u539F\u6570\u7EC4\u57FA\u7840\u4E0A\u6D45\u62F7\u8D1D\u4E00\u4EFD\u65B0\u7684\u6570\u636E\uFF0C\u7136\u540E\u5728\u65B0\u6570\u636E\u4E0A\u8FFD\u52A0\u5BF9\u5E94\u7684\u5185\u5BB9
 * \u793A\u4F8B\uFF1Aret = arr.concat(4) ----- ret: [1,2,3,4]
 *      ret = arr.concat(&#39;a&#39;, <span class="token punctuation">{</span>a:&#39;Maic&#39;<span class="token punctuation">}</span>, [&#39;abc&#39;,<span class="token punctuation">{</span>a: &#39;Tom&#39;<span class="token punctuation">}</span>])  ret: [1,2,3,&#39;a&#39;,<span class="token punctuation">{</span>a:&#39;Maic&#39;<span class="token punctuation">}</span>,&#39;abc&#39;, <span class="token punctuation">{</span>a: &#39;Tom&#39;<span class="token punctuation">}</span>]
 *      ret = arr.concat(1).concat(2) [1,2,3,1,2]
 * \u573A\u666F\uFF1A\u4E0D\u592A\u60F3\u5F71\u54CD\u539F\u6570\u636E\uFF0C\u53C8\u60F3\u5728\u539F\u6570\u636E\u4E0A\u6DFB\u52A0\u6570\u636E\u65F6\uFF0C\u4F46\u662F\u6CE8\u610F\u8FD9\u4E2A\u65B9\u6CD5\u662F\u4E00\u4E2A\u6D45\u62F7\u8D1D\uFF0C\u5982\u679C\u6570\u7EC4\u4E2D\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF0C\u4FEE\u6539\u65B0\u503C\u4F1A\u5F71\u54CD\u539F\u6709\u7684\u503C
 *                          
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arrayConcat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token keyword">const</span> newArr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>
    newArr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span>
    <span class="token keyword">const</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> arr3 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> arr4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        newArr<span class="token punctuation">,</span>
        arr<span class="token punctuation">,</span>
        arr2<span class="token punctuation">,</span>
        arr3<span class="token punctuation">,</span>
        arr4
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;concat:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayConcat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fill" tabindex="-1"><a class="header-anchor" href="#fill" aria-hidden="true">#</a> fill</h3><p>\u586B\u5145\u4E00\u4EFD\u76F8\u540C\u7684\u6570\u636E</p><p><code>\u573A\u666F</code>\uFF1A \u4F60\u60F3mock\u4E00\u4EFD\u6D4B\u8BD5\u6570\u636E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayFill</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fill:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayFill</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">/*
 [ &#39;Maic&#39;, &#39;Maic&#39;, &#39;Maic&#39; ]
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="find" tabindex="-1"><a class="header-anchor" href="#find" aria-hidden="true">#</a> find</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * find: \u5BFB\u627E\u6570\u7EC4\u7684item,\u5E76\u8FD4\u56DE\u5176\u5BFB\u627E\u5230\u7684\u7ED3\u679C, \u5982\u679C\u6CA1\u6709\u627E\u5230\u5C31\u8FD4\u56DEundefined
 * \u573A\u666F\uFF1A\u9700\u8981\u6839\u636E\u67D0\u4E2A\u6761\u4EF6\u503C\u627E\u5230\u6570\u636E\u4E2D\u7684\u5F53\u524Ditem\u6570\u636E\u65F6
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arrayFind</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceData<span class="token punctuation">,</span> key<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceData<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;find:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayFind</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {name: &#39;Maic&#39;, age: 18}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="findindex" tabindex="-1"><a class="header-anchor" href="#findindex" aria-hidden="true">#</a> findIndex</h3><p>\u5BFB\u627E\u539F\u6570\u636E\u5339\u914D\u7684\u76EE\u6807\u503C\u4E0B\u6807</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * findIndex: \u5BFB\u627E\u76EE\u6807\u503C\u7684\u5F53\u524D\u7D22\u5F15,\u5982\u679C\u6CA1\u627E\u5230\u5C31\u8FD4\u56DE-1
 * \u573A\u666F\uFF1A\u5728\u4F60\u6839\u636E\u67D0\u4E2A\u6761\u4EF6\u60F3\u83B7\u53D6\u5F53\u524D\u6761\u4EF6\u7684\u7D22\u5F15\u503C\uFF0C\u6BD4\u5982\u8FDB\u884C\u5220\u9664\uFF0C\u6216\u8005\u63D2\u5165\uFF0C\u66FF\u6362\u7B49\u64CD\u4F5C
 */</span>

<span class="token keyword">const</span> <span class="token function-variable function">arrayFindIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceData<span class="token punctuation">,</span> key<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;findIndex&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayFindIndex</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lastindexof" tabindex="-1"><a class="header-anchor" href="#lastindexof" aria-hidden="true">#</a> lastIndexOf</h3><p>\u627E\u5230\u76EE\u6807\u5143\u7D20\u7684\u5F53\u524D\u7D22\u5F15</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * lastIndexOf: \u627E\u5230\u5143\u7D20\u7684\u5F53\u524D\u4E0B\u6807\u7D22\u5F15
 * \u573A\u666F\uFF1A\u529F\u80FD\u4E0EfindIndex\u7C7B\u4F3C\uFF0C\u6839\u636E\u5176\u503C\u5BFB\u627E\u76EE\u6807\u503C\u7684\u5F53\u524D\u4E0B\u6807\u7D22\u5F15
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arrayLastIndexOf</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceData<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceData<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;lastIndexOf&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayLastIndexOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pop" tabindex="-1"><a class="header-anchor" href="#pop" aria-hidden="true">#</a> pop</h3><p>\u83B7\u53D6\u6570\u7EC4\u5143\u7D20\u7684\u6700\u540E\u4E00\u53EA\u5143\u7D20\u7684\u503C\uFF0C\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u6BCF\u4E00\u6B21pop\u64CD\u4F5C\u5C06\u4F1A\u628A\u6570\u7EC4\u7684\u6700\u540E\u4E00\u53EA\u503C\u5F39\u51FA\u53BB\uFF0C\u539F\u6570\u7EC4\u957F\u5EA6\u4F1A\u51CF\u4E00</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayPop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">sourceData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceData<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pop:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayPop</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reverse" tabindex="-1"><a class="header-anchor" href="#reverse" aria-hidden="true">#</a> reverse</h3><p>\u5C06\u539F\u6570\u636E\u8FDB\u884C\u5012\u53D9\u6392\u5217</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayReverse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceData<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;reverse&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayReverse</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [4,3,2,1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shift" tabindex="-1"><a class="header-anchor" href="#shift" aria-hidden="true">#</a> shift</h3><p>\u83B7\u53D6\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u4F1A\u6539\u53D8\u539F\u6570\u7EC4 <code>\u573A\u666F</code>\uFF1A\u6A21\u62DF\u961F\u5217</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayShift</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> sourceData<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        sourceData
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayShift</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {data:1, sourceData: [2,3,4]}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="unshift" tabindex="-1"><a class="header-anchor" href="#unshift" aria-hidden="true">#</a> unshift</h3><p>\u5411\u539F\u6570\u636E\u6DFB\u52A0\u6570\u636E\uFF0C\u6BCF\u6B21\u64CD\u4F5C\u90FD\u4F1A\u5F80\u6570\u7EC4\u7684\u9996\u4F4D\u6DFB\u52A0\uFF0C\u4F1A\u6539\u53D8\u539F\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u8FD4\u56DE\u503C\u662F\u5F53\u524D\u6570\u7EC4\u7684\u957F\u5EA6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayUnshift</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceData<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">result</span><span class="token operator">:</span> sourceData<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">,</span>
        sourceData
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;unshift:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayUnshift</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slice" tabindex="-1"><a class="header-anchor" href="#slice" aria-hidden="true">#</a> slice</h3><p>\u83B7\u53D6\u539F\u6570\u636E\u6307\u5B9A\u7D22\u5F15\u8303\u56F4\u7684\u503C\uFF0C\u4E0D\u4F1A\u5F71\u54CD\u539F\u6709\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * slice: \u83B7\u53D6\u539F\u6570\u636E\u6307\u5B9A\u7D22\u5F15\u8303\u56F4\u7684\u503C\uFF0C\u4E0D\u4F1A\u5F71\u54CD\u539F\u6709\u503C
 * \u573A\u666F\uFF1A\u5E94\u7528\u5F88\u591A
 * arr: [1,2,3,4]
 * 
 * arr.slice(0) --- [1,2,3,4] \u6D45\u62F7\u8D1D
 * arr.slice(1) ---  [2,3,4]
 * 
 * arr.slice(1,3) --- [2,3]
 * 
 * arr.slice(-1) ---[4]
 * arr.slice(-2)----[3,4]
 * 
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arraySlice</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arr1 <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> arr2 <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> arr3 <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> arr4 <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> arr5 <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        arr1<span class="token punctuation">,</span>
        arr2<span class="token punctuation">,</span>
        arr3<span class="token punctuation">,</span>
        arr4<span class="token punctuation">,</span>
        arr5
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;slice:&#39;</span><span class="token punctuation">,</span> <span class="token function">arraySlice</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*
slice: {
  arr1: [ 1, 2, 3, 4 ],
  arr2: [ 2, 3, 4 ],
  arr3: [ 2, 3 ],
  arr4: [ 4 ],
  arr5: [ 3, 4 ]
}
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> sort</h3><p>\u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * sort: \u6392\u5E8F
 * arr.sort((a, b) =&gt; a - b) // \u5347\u5E8F
 * arr.sort((a,b) =&gt; b-a) // \u964D\u5E8F
 * \u573A\u666F\uFF1A\u5BF9\u6570\u636E\u7684\u67D0\u4E2A\u5B57\u6BB5\u8FDB\u884C\u6392\u5E8F
 */</span>

<span class="token keyword">const</span> <span class="token function-variable function">arraySort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> upSort <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span>
    <span class="token keyword">const</span> downSort <span class="token operator">=</span> sourceArr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b <span class="token operator">-</span> a<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        upSort<span class="token punctuation">,</span>
        downSort
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="splice" tabindex="-1"><a class="header-anchor" href="#splice" aria-hidden="true">#</a> splice</h3><p>\u5BF9\u539F\u6570\u7EC4\u8FDB\u884C<code>\u5220\u9664</code>\u3001<code>\u66FF\u6362</code>\u3001<code>\u622A\u53D6</code>\u64CD\u4F5C\uFF0C\u4F1A\u5F71\u54CD\u539F\u6570\u7EC4\u7684\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arraySplice</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2,3,4]</span>
    <span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2]</span>
    <span class="token keyword">const</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,4] \u5220\u9664\u4E86\u7D22\u5F15\u4E3A2\u7684\u5143\u7D20\uFF0C\u8FD4\u56DE\u5269\u4E0B\u7684\u5143\u7D20</span>
    <span class="token keyword">const</span> arr4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4]</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        arr1<span class="token punctuation">,</span>
        arr2<span class="token punctuation">,</span>
        arr3<span class="token punctuation">,</span>
        arr4
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;splice:&#39;</span><span class="token punctuation">,</span> <span class="token function">arraySplice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h3><p>\u8FC7\u6EE4\u6570\u7EC4\u64CD\u4F5C\uFF0C\u6839\u636E\u67D0\u4E2A\u6761\u4EF6\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u8FC7\u6EE4\u7ED3\u679C\u7684\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * filter: \u6839\u636E\u6761\u4EF6\u8FDB\u884C\u8FC7\u6EE4\uFF0C\u8FD4\u56DE\u8FC7\u6EE4\u540E\u7684\u7ED3\u679C
 * \u573A\u666F\uFF1A \u9700\u8981\u8FC7\u6EE4\u539F\u6570\u636E\u4E2D\u67D0\u4E9B\u503C\u65F6
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arrayFilter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceData<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceData<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">===</span> val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;filter:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayFilter</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> map</h3><p>\u6839\u636E\u539F\u6570\u7EC4\u91CD\u65B0\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*
 * map: \u5728\u539F\u6709\u57FA\u7840\u4E0A\u91CD\u65B0\u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arrayMap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceArr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceArr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;map:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayMap</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2,3,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flatmap" tabindex="-1"><a class="header-anchor" href="#flatmap" aria-hidden="true">#</a> flatMap</h3><p><code>\u573A\u666F</code>\uFF1A\u53EF\u4EE5\u6839\u636E\u539F\u6570\u7EC4\u7EC4\u5408\u6210\u4E00\u4E2A\u4F60\u60F3\u8981\u7684\u6570\u636E\u7ED3\u6784</p><p>\u6BD4\u5982\u539F\u6570\u636E\u6709\u4E0D\u60F3\u8981\u7684\u5B57\u6BB5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayFlatMap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceArr<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">source</span><span class="token operator">:</span> sourceArr<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> v <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">?</span> <span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">narr</span><span class="token operator">:</span> arr<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> v<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> v<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;flatMap:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayFlatMap</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token doc-comment comment">/**
 * flatMap: <span class="token punctuation">{</span>
        source: [ 1, 2 ],
        narr: [ <span class="token punctuation">{</span> name: &#39;Maic&#39;, value: 0 <span class="token punctuation">}</span>, <span class="token punctuation">{</span> name: &#39;Tom&#39;, value: 1 <span class="token punctuation">}</span> ]
    <span class="token punctuation">}</span>
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>\u5C06\u6570\u7EC4\u8F6C\u6362\u6210\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * toString: \u5C06\u6570\u7EC4\u8FDB\u884C\u8F6C\u6362
 * \u573A\u666F\uFF1A\u60F3\u5C06\u4E00\u4E2A\u6570\u7EC4\u53D8\u6210\u5B57\u7B26\u4E32
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arrayTostring</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">sourceArr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> sourceArr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;toString:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayTostring</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">/*
1,2,3,4
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="includes" tabindex="-1"><a class="header-anchor" href="#includes" aria-hidden="true">#</a> includes</h3><p>\u5224\u65AD\u4E00\u4E2A\u6570\u7EC4\u662F\u5426\u5305\u542B\u67D0\u4E2A\u5143\u7D20</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * includes: \u5305\u542B
 * \u573A\u666F\uFF1A\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u6570\u7EC4\u4E2D\u5B58\u5728
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">arrayIncludes</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;arrayIncludes:&#39;</span><span class="token punctuation">,</span> <span class="token function">arrayIncludes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="indexof" tabindex="-1"><a class="header-anchor" href="#indexof" aria-hidden="true">#</a> indexOf</h3><p>\u83B7\u53D6\u4E00\u4E2A\u5143\u7D20\u7684\u4E0B\u6807\uFF0C\u5982\u679C\u6CA1\u6709\u5C31\u8FD4\u56DE<code>-1</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayIndexOf</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">arrayIndexOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="join" tabindex="-1"><a class="header-anchor" href="#join" aria-hidden="true">#</a> join</h3><p>\u5C06\u4E00\u4E2A\u6570\u7EC4\u4EE5\u7279\u6B8A\u5B57\u7B26\u8FDB\u884C\u62FC\u63A5\uFF0C\u53D8\u6210\u4E00\u4E2A\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayJoin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> split</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>split<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">arrayJoin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// join: 1-2-3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><ul><li><p>\u5229\u7528<code>reduce</code>\u5982\u4F55\u5EFA\u7ACB\u6570\u7EC4\u4E0E\u5BF9\u8C61\u7684\u6620\u5C04\u5173\u7CFB\uFF0C\u8FD8\u6709\u5982\u4F55\u5C06\u4E00\u4E2A\u4E00\u7EF4\u6570\u7EC4\u6784\u5EFA\u6210\u4E00\u4E2A<code>tree</code>\u7ED3\u6784</p></li><li><p>\u5206\u6790\u4E86<code>reduce</code>\u7D2F\u8BA1\u8BA1\u7B97\u5668\u8FD9\u4E2A<code>API</code>\u7684\u4F7F\u7528</p></li><li><p>\u5E38\u7528\u7684\u6570\u7EC4\u65B9\u6CD5\u89E3\u6790\uFF0C\u4EE5\u53CA\u5B9E\u9645\u5E94\u7528\u573A\u666F</p></li><li><p>\u672C\u6587\u793A\u4F8B<a href="&#39;https://github.com/maicFir/lessonNote/tree/master/javascript/20-%E6%95%B0%E7%BB%84" title="code example">code example</a></p></li></ul>`,90);function w(M,A){const p=l("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[r,k,d,v,m,b,g,y,f,n("a",h,[q,c(p)]),j]),x])}var T=t(i,[["render",w],["__file","2022-09-14_base.html.vue"]]);export{T as default};
