import{_ as e,o,c,b as s,a as t,e as a,d as n,r as l}from"./app.13e035d0.js";const i={},u=a(`<p>\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668\u5728\u524D\u7AEF\u4E1A\u52A1\u91CC\u7ECF\u5E38\u6709\u7528\u5230\uFF0C\u4F46\u662F\u53EF\u80FD\u611F\u53D7\u4E0D\u592A\u660E\u663E\u3002\u7279\u522B\u662F\u751F\u6210\u5668\uFF0C\u5728<code>react</code>\u4E2D\u5982\u679C\u4F60\u6709\u7528\u8FC7<code>redux</code>\u4E2D\u95F4\u4EF6<code>redux-saga</code>\u90A3\u4E48\u4F60\u4E00\u5B9A\u5BF9\u751F\u6210\u5668\u5F88\u719F\u6089\u3002</p><p>\u672C\u6587\u662F\u7B14\u8005\u5BF9\u4E8E\u8FED\u4EE3\u5668\u4E0E\u751F\u6210\u5668\u7684\u7406\u89E3\uFF0C\u5E0C\u671B\u5728\u9879\u76EE\u4E2D\u6709\u6240\u5E2E\u52A9.</p><p>\u5728\u9605\u8BFB\u672C\u6587\u4E4B\u524D\uFF0C\u4E3B\u8981\u4F1A\u4ECE\u4EE5\u4E0B\u51E0\u70B9\u53BB\u63A2\u8BA8\u8FED\u4EE3\u5668/\u751F\u6210\u5668</p><ul><li><p>\u8FED\u4EE3\u5668\u662F\u4EC0\u4E48\uFF0C\u60F3\u60F3\u4E3A\u4EC0\u4E48\u4F1A\u6709\u8FED\u4EE3\u5668</p></li><li><p>\u751F\u6210\u5668\u53C8\u662F\u4EC0\u4E48\uFF0C\u5B83\u89E3\u51B3\u4E86\u4EC0\u4E48\u6837\u7684\u95EE\u9898</p></li><li><p>\u4EE5\u5B9E\u9645\u4F8B\u5B50\u9610\u8FF0\u8FED\u4EE3\u5668\u4E0E\u751F\u6210\u5668</p></li></ul><p>\u6B63\u6587\u5F00\u59CB...</p><h3 id="\u8FED\u4EE3\u5668\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u662F\u4EC0\u4E48" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u662F\u4EC0\u4E48</h3><p>\u53C2\u8003<code>mdn</code>\u4E0A\u89E3\u91CA\uFF0C\u8FED\u4EE3\u5668\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6BCF\u6B21\u8C03\u7528<code>next</code>\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A<code>{done: false, value: &#39;&#39;}</code>,\u6BCF\u6B21\u8C03\u7528<code>next</code>\u8FD4\u56DE\u5F53\u524D\u503C\uFF0C\u76F4\u81F3\u6700\u540E\u4E00\u6B21\u8C03\u7528\u65F6\u8FD4\u56DE<code>{value:undefined,done: true}</code>\u65F6\u7ED3\u675F\uFF0C\u65E0\u8BBA\u540E\u9762\u8C03\u7528<code>next</code>\u65B9\u6CD5\u90FD\u53EA\u4F1A\u8FD4\u56DE<code>{value: undefined,done:true}</code></p><p>\u5728\u8FC7\u5F80\u7684\u4E1A\u52A1\u4E2D\uFF0C\u4F60\u4E00\u5B9A\u7528\u8FC7<code>for ... of</code>\u5FAA\u73AF\u8FC7<code>\u6570\u7EC4</code>\u6216\u8005<code>Map</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* {name: &#39;Maic&#39;, age:18},{name: &#39;Maic&#39;, age:18} */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),r=n("\u56E0\u4E3A\u6570\u7EC4\u5C31\u662F\u53EF\u4EE5\u652F\u6301\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF0C\u5E76\u4E14"),k=s("code",null,"for...of",-1),d=n("\u53EF\u4EE5\u4E2D\u65AD\u5FAA\u73AF\uFF0C\u5173\u4E8E\u5FAA\u73AF\u4E2D\u65AD\u53EF\u4EE5\u53C2\u8003\u4EE5\u524D\u5199\u7684\u4E00\u7BC7\u6587\u7AE0"),v={href:"https://mp.weixin.qq.com/s?__biz=Mzk0ODMxODIzNw==&mid=2247485070&idx=1&sn=8ccd16ec243aada2f04beaaf1477a085&chksm=c3683ffcf41fb6eaf72f210cbbbc79d52485cdc37812dd9d0aa3d74fa14a4734dcfac9a8daf2#rd",target:"_blank",rel:"noopener noreferrer"},m=n("\u4F60\u4E0D\u77E5\u9053\u7684JS\u5FAA\u73AF\u4E2D\u65AD "),b=a(`<p>\u56E0\u4E3A\u6570\u7EC4\u662F\u652F\u6301\u53EF\u8FED\u4EE3\u7684\u5BF9\u8C61\uFF0C\u5982\u679C\u4F7F\u7528\u8FED\u4EE3\u5668\u83B7\u53D6\u6BCF\u7EC4\u6570\u636E\u5E94\u8BE5\u600E\u4E48\u505A\u5462\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
<span class="token keyword">const</span> iterator <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6267\u884C<code>node index.js</code>\u53EF\u4EE5\u770B\u5230\u8FD0\u884C\u7ED3\u679C <img src="https://files.mdnice.com/user/24614/05c94965-6ccc-4a0a-9a60-6a2b90a8aa85.png" alt=""> \u5F53\u6211\u4EEC\u6BCF\u6B21\u8C03\u7528<code>iterator.next()</code>\u503C\u65F6\uFF0C\u90FD\u4F1A\u8FD4\u56DE\u5F53\u524D\u7684\u503C\uFF0C\u5E76\u4E14\u8FD4\u56DE\u7684\u503C\u662F<code>{value: xxx, done: false}</code>,\u76F4\u81F3\u6700\u540E\uFF0C\u8FD4\u56DE\u7684\u503C<code>{value: undefined, done: true }</code></p><p>\u4E0D\u77E5\u9053\u4F60\u53D1\u73B0\u6CA1\u6709\uFF0C\u4E0A\u9762\u8FED\u4EE3\u5668\uFF0C\u6211\u662F\u901A\u8FC7\u6570\u7EC4\u8BBF\u95EE<code>Symbol.iterator</code>\u65B9\u6CD5\uFF0C\u518D\u8C03\u7528\u8FD4\u56DE\u7684<code>next</code>\u65B9\u6CD5\uFF0C\u6700\u540E\u5F97\u5230\u5F53\u524D\u7684\u503C</p><p>\u6211\u4EEC\u53EF\u4EE5\u5728\u63A7\u5236\u53F0\u770B\u4E0B <img src="https://files.mdnice.com/user/24614/22f21f45-ae02-44dd-bc3e-3a086b50df9a.png" alt=""> \u6570\u7EC4\u662F\u6709\u8FD9\u4E2A<code>Symbol.iterator</code>\u5C5E\u6027\u7684</p><p>\u4ECE\u4EE5\u4E0A\u8FED\u4EE3\u5668\u7279\u5F81\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5F97\u77E5\uFF0C\u6570\u7EC4\u662F\u901A\u8FC7\u4E00\u4E2A<code>Symbol.iterator</code>\u65B9\u6CD5\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>next</code>\u65B9\u6CD5\uFF0C\u5E76\u4E14<code>next</code>\u65B9\u6CD5\u8FD4\u56DE<code>{value: xx, done: false}</code>\uFF0C\u6211\u4EEC\u6A21\u62DF\u4E00\u4E2A\u8FED\u4EE3\u5668</p><h3 id="\u6A21\u62DF\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u6A21\u62DF\u8FED\u4EE3\u5668</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> iteratorObj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    count\uFF1A <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iteratorObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iteratorObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iteratorObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iteratorObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6253\u5370\u7684\u7ED3\u679C\u4F9D\u6B21\u662F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u4F60\u4F1A\u53D1\u73B0<code>iteratorObj</code>\u5C31\u57FA\u672C\u5B9E\u73B0\u4E86\u4E00\u4E2A\u8FED\u4EE3\u5668\u7684\u57FA\u672C\u529F\u80FD\u3002</p><p>\u6211\u4EEC\u7528\u4E00\u4E2A\u5BF9\u8C61\u6A21\u62DF\u4E86\u8FED\u4EE3\u5668\uFF0C\u4F46\u662F\u6211\u4EEC\u53D1\u73B0\u8FD9\u4E2A\u5BF9\u8C61\u8FED\u4EE3\u5668\u8C8C\u4F3C\u6CA1\u6CD5\u590D\u7528</p><p>\u56E0\u6B64\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A\u8FED\u4EE3\u5668\u7684\u5DE5\u5177\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createIteror</span><span class="token punctuation">(</span><span class="token parameter">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count<span class="token operator">++</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> arr<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token literal-property property">done</span><span class="token operator">:</span> count <span class="token operator">&gt;=</span> arr<span class="token punctuation">.</span>length
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> newCreateInteror <span class="token operator">=</span> <span class="token function">createIteror</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newCreateInteror<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newCreateInteror<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newCreateInteror<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newCreateInteror<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64<code>createIteror</code>\u8FD9\u4E2A\u65B9\u6CD5\u5C31\u5177\u5907\u4E86\u8FED\u4EE3\u5668\u7684\u529F\u80FD</p><p>\u6211\u4EEC\u5728\u8FD9\u4E4B\u524D\u7528<code>iteratorObj</code>\u6A21\u62DF\u4E86\u4E00\u4E2A\u5177\u5907<code>\u8FED\u4EE3\u5668</code>\u7684\u529F\u80FD\uFF0C\u4F46\u662F\u5982\u4F55\u8BA9\u771F\u6B63\u7684\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5462</p><h3 id="\u8BA9\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5668\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u8BA9\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5668\u529F\u80FD" aria-hidden="true">#</a> \u8BA9\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5668\u529F\u80FD</h3><p>\u4E0D\u77E5\u9053\u4F60\u53D1\u73B0\u6CA1\u6709\uFF0C\u5176\u5B9E\u6570\u7EC4\u539F\u578B\u4E0A\u662F\u6709<code>Symbol.iterator</code>\uFF0C\u6240\u4EE5\u5982\u679C\u8981\u8BA9\u4E00\u4E2A\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5668\u529F\u80FD\uFF0C\u90A3\u4E48\u53EA\u9700\u8981\u9075\u5FAA<code>\u8FED\u4EE3\u534F\u8BAE</code>\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> coustomerInteror <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// \u8BA9\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5668\u534F\u8BAE\uFF0C\u9700\u8981\u589E\u52A0\u4E00\u4E2ASymbol.iterator\u53EF\u8BBF\u95EE\u7684\u65B9\u6CD5\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF0C\u8FED\u4EE3\u5668\u5BF9\u8C61\u53EF\u4EE5\u8C03\u7528\`next\`\u65B9\u6CD5\uFF0C\u5728next\u65B9\u6CD5\u4E2D\u8FD4\u56DE\u4E00\u4E2A\u5F53\u524D\u5BF9\u8C61\u7684\u503C</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">done</span><span class="token operator">:</span> count <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>length
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> newInter <span class="token operator">=</span> coustomerInteror<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newInter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newInter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newInter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newInter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> coustomerInteror<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token string">&#39;=result&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u6253\u5370\u7684\u7ED3\u679C <img src="https://files.mdnice.com/user/24614/9cb6d549-52ec-46ec-801a-0935796d2b1a.png" alt=""></p><p>\u56E0\u6B64\u8BA9\u4E00\u4E2A\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5668\u529F\u80FD\uFF0C\u53EA\u9700\u8981\u65B0\u589E\u4E00\u4E2A<code>Symbol.iterator</code>\u65B9\u6CD5\uFF0C\u9075\u5FAA<code>\u8FED\u4EE3\u5668</code>\u539F\u5219</p><h3 id="\u652F\u6301\u6240\u6709\u5BF9\u8C61\u53EF\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u652F\u6301\u6240\u6709\u5BF9\u8C61\u53EF\u8FED\u4EE3" aria-hidden="true">#</a> \u652F\u6301\u6240\u6709\u5BF9\u8C61\u53EF\u8FED\u4EE3</h3><p>\u6211\u4EEC\u4ECE\u4EE5\u4E0A\u7ED3\u679C\u5F97\u77E5\u8981\u60F3\u4E00\u4E2A\u5BF9\u8C61\u652F\u6301\u8FED\u4EE3\u5668\u529F\u80FD\uFF0C\u5FC5\u987B\u8981\u6709<code>Symbol.iterator</code>\u8FD9\u6837\u7684<code>\u8FED\u4EE3\u5668\u534F\u8BAE</code></p><p>\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5728<code>Object</code>\u539F\u578B\u4E0A\u65B0\u589E\u8FD9\u6837\u7684\u4E00\u4E2A<code>\u8FED\u4EE3\u5668\u534F\u8BAE</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728Object.prototype\u539F\u578B\u4E0A\u6269\u5C55Symbol.iterator</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">[</span>keys<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token literal-property property">done</span><span class="token operator">:</span> count <span class="token operator">&gt;=</span> keys<span class="token punctuation">.</span>length
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> cobj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iteror <span class="token operator">=</span> cobj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iteror<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iteror<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iteror<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> cobj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token string">&#39;=rs&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> cobj<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7684\u7ED3\u679C\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token number">1</span> <span class="token operator">=</span>rs
<span class="token number">2</span> <span class="token operator">=</span>rs
<span class="token number">1</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u4F1A\u53D1\u73B0\u5F53\u6211\u4EEC\u4F7F\u7528\u6570\u7EC4\u89E3\u6784\u65F6\uFF0C\u5C45\u7136\u53EF\u4EE5\u89E3\u6784\u5BF9\u8C61\u7684\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> cobj<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u672C\u8D28\u4E0A\u5C31\u662F\u6211\u4EEC\u8FED\u4EE3\u5668\u4F1A\u81EA\u52A8\u8C03\u7528<code>iteror.next().value</code>\u7136\u540E\u4E00\u4E00\u8D4B\u503C\u8FD4\u56DE\u4E86\u3002</p><p>\u6240\u4EE5\u652F\u6301<code>\u8FED\u4EE3\u5668</code>\u5BF9\u8C61\u4E0D\u4EC5\u53EF\u4EE5<code>for...of</code>\u4E5F\u53EF\u4EE5\u88AB<code>\u6570\u7EC4\u89E3\u6784</code>\uFF0C\u8FD9\u6837\u6240\u6709<code>var obj = {}</code>\u8FD9\u6837\u7C7B\u4F3C\u7533\u660E\u7684\u5BF9\u8C61\u90FD\u53EF\u4EE5\u652F\u6301\u8FED\u4EE3\u5668\u4E86\u3002</p><h3 id="\u6784\u9020\u51FD\u6570\u652F\u6301\u53EF\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u652F\u6301\u53EF\u8FED\u4EE3" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u652F\u6301\u53EF\u8FED\u4EE3</h3><p>\u6211\u4EEC\u73B0\u5728\u6709\u4E2A\u9700\u6C42\uFF0C\u9700\u8981\u652F\u6301\u901A\u8FC7\u6784\u9020\u51FD\u6570<code>new</code>\u51FA\u6765\u7684\u5BF9\u8C61\u652F\u6301\u53EF\u8FED\u4EE3\u5668\u529F\u80FD</p><p>\u5177\u4F53\u6211\u4EEC\u770B\u4E0B\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token comment">// \u83B7\u53D6\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027key</span>
                <span class="token keyword">const</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">[</span>keys<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">done</span><span class="token operator">:</span> count <span class="token operator">&gt;=</span> keys<span class="token punctuation">.</span>length
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> iter <span class="token operator">=</span> person<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">===</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u4EE5\u4E2D\u65AD\u5FAA\u73AF</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u91CC\u5E76\u4E0D\u4F1A\u6253\u5370</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> age<span class="token punctuation">]</span> <span class="token operator">=</span> person<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u672C\u8D28\u4E0A\u4E5F\u662F\u5728\u6784\u9020\u51FD\u6570<code>Person</code>\u5185\u90E8\u65B0\u589E\u4E86<code>Symbol.iterator</code>\u65B9\u6CD5\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E86\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61</p><p>\u6253\u5370\u7684\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token operator">==</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token operator">==</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">==</span>
Maic <span class="token number">18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\u4F60\u5E94\u8BE5\u975E\u5E38\u4E86\u89E3\u8FED\u4EE3\u5668\u7684\u5BF9\u8C61\u7684\u7279\u6027\u4E86\u54C8</p><p>\u80FD\u591F<code>for...of</code>\u5FAA\u73AF\u4E2D\u65AD\uFF0C\u4E14\u80FD\u591F<code>\u6570\u7EC4\u89E3\u6784</code>\u3001<code>\u6269\u5C55</code>,\u6240\u4EE5\u4F60\u77E5\u9053\u4E3A\u5565\u4F1A\u6709\u8FED\u4EE3\u5668\u4E86\u5417\uFF1F</p><h3 id="\u90A3\u4E9B\u539F\u751Fapi\u652F\u6301\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u90A3\u4E9B\u539F\u751Fapi\u652F\u6301\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u90A3\u4E9B\u539F\u751FAPI\u652F\u6301\u8FED\u4EE3\u5668</h3><p>\u9996\u5148\u662F\u6570\u7EC4<code>Array</code>\uFF0C<code>Map</code>\uFF0C<code>Set</code></p><p>\u53EA\u8981\u662F\u6709\u8FED\u4EE3\u5668\u7279\u6027\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u88AB<code>for...of</code>\uFF0C\u6570\u7EC4\u89E3\u6784\u7B49</p><h3 id="\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668" aria-hidden="true">#</a> \u751F\u6210\u5668</h3>`,46),y=n("\u8FD9\u662Fes6\u65B0\u589E\u7684\uFF0C\u53C2\u8003"),f={href:"https://es6.ruanyifeng.com/#docs/generator",title:"generator",target:"_blank",rel:"noopener noreferrer"},g=n("generator"),w=n("\u89E3\u91CA\uFF0C\u751F\u6210\u5668\u662F\u4E00\u79CD\u5F02\u6B65\u89E3\u51B3\u7684\u65B9\u6848,\u4E5F\u53EF\u4EE5\u7406\u89E3\u4E00\u79CD\u51FD\u6570\u5185\u90E8\u7684\u72B6\u6001\u673A,\u80FD\u4E2D\u65AD\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u8BF4\u80FD\u591F\u63A7\u5236\u51FD\u6570\u7684\u8FD0\u884C"),h=a(`<p>\u5177\u4F53\u6211\u4EEC\u4EE5\u4E00\u4E2A\u5B9E\u9645\u4F8B\u5B50\u770B\u4E0B\u751F\u6210\u5668\u662F\u4EC0\u4E48</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">genter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">genter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A\u666E\u901A\u51FD\u6570\uFF0C\u4F46\u662F\u8FD9\u4E2A\u666E\u901A\u51FD\u6570\u6BD4\u8F83\u7279\u6B8A\uFF0C\u524D\u9762\u6709<code>*</code>,\u8FD9\u5C31\u662F\u5B9A\u4E49\u751F\u6210\u5668\u51FD\u6570\uFF0C\u6211\u4EEC\u6682\u5B9A\u628A<code>gen</code>\u8FD9\u4E2A\u79F0\u547C\u4E3A\u751F\u6210\u5668\u5BF9\u8C61</p><p>\u7136\u540E\u6211\u4EEC\u6253\u5370\u751F\u6210\u5668\u5BF9\u8C61\uFF0C\u5B9E\u9645\u662F\u5C31\u50CF\u51FD\u6570\u8C03\u7528\u4E00\u6837\uFF0C\u4E0D\u8FC7\u6B64\u65F6\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A<code>Object Generator</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object <span class="token punctuation">[</span>Generator<span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F46\u662F\u6211\u4EEC\u7EE7\u7EED\u770B\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">genter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">genter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> gen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u6253\u5370\u7684\u7ED3\u679C\u662F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token number">1</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u4E0B\u751F\u6210\u5668\u51FD\u6570\u5185\u90E8\u662F\u6709<code>yield</code>\u8FD9\u6837\u7684\u4E1C\u897F</p><p>\u5B9E\u9645\u4E0A\u8FD9\u5C31\u662F\u5185\u90E8\u51FD\u6570\u7684<code>\u72B6\u6001\u673A</code>\uFF0C\u5F53\u4F60\u4F7F\u7528\u7528\u751F\u6210\u5668\u65F6\uFF0C\u4F60\u8C03\u7528<code>next</code>\u5C31\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u50CF\u8FED\u4EE3\u5668\u4E00\u6837\u8FD4\u56DE<code>{value: xxx, done: false}</code> \u56E0\u6B64\u5728\u4F7F\u7528\u4E0A\uFF0C\u6211\u4EEC\u5FC5\u987B\u8BA4\u6E05\uFF0C\u751F\u6210\u5668\u5FC5\u987B\u662F\u5E26\u6709<code>*</code>\u5B9A\u4E49\u7684\u51FD\u6570\uFF0C\u5185\u90E8\u662F<code>yield</code>\u6267\u884C\u7684\u72B6\u6001\u673A</p><p>\u5F53\u6211\u4EEC\u8C03\u7528\u51FD\u6570\u751F\u6210\u5668\u65F6\uFF0C\u5E76\u4E0D\u4F1A\u7ACB\u5373\u6267\u884C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5BF9\u8C61\u5E76\u8FD4\u56DE\u4E00\u4E2A<code>next</code>\u65B9\u6CD5\uFF0C\u5F53\u904D\u5386\u5BF9\u8C61\u8C03\u7528<code>next</code>\u65F6\uFF0C\u5C31\u4F1A\u8FD4\u56DE<code>yield</code>\u6267\u884C\u7684\u72B6\u6001\u673A\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\u7684\u503C\uFF0C<code>yield</code>\u4F1A\u5728\u5F53\u524D\u72B6\u6001\u6682\u505C\uFF0C\u53EA\u6709\u8C03\u7528<code>next</code>\u65F6\uFF0C\u5C31\u4F1A\u6267\u884C<code>yield</code>\uFF0C<code>yield</code></p><p><code>value</code>\u8868\u793A\u5F53\u524D<code>yield</code>\u7684\u503C\uFF0C<code>done:false</code>\u8868\u793A\u5F53\u524D\u904D\u5389\u6CA1\u6709\u7ED3\u675F\uFF0C\u5982\u679C\u7EE7\u7EED\u6267\u884C<code>gen.next()</code>\u90A3\u4E48\u5C31\u4F1A\u8FD4\u56DE\u5F53\u524D\u7684<code>yield</code>\u503C\uFF0C\u76F4\u5230<code>done:true</code>\u65F6\uFF0C\u8868\u793A\u5F53\u524D\u904D\u5386\u5BF9\u8C61\u5DF2\u7ECF\u5B8C\u5168\u904D\u5386\u5B8C\u6BD5\u3002</p><p>\u6211\u4EEC\u518D\u6765\u770B\u4E0B\u8FD9\u6BB5\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> genterStart <span class="token operator">=</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u4F60\u4F1A\u53D1\u73B0\u5E76\u4E0D\u4F1A\u8C03\u7528<code>start</code>\u65B9\u6CD5</p><p>\u4F46\u662F\u4F60\u6267\u884C\u4E0B\u9762\u4EE3\u7801\u65F6\uFF0C\u624D\u4F1A\u7ACB\u5373\u8C03\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> genterStart <span class="token operator">=</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    genterStart<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4F1A\u53D1\u73B0\u5B9A\u65F6\u5B9A\u65F61s\u540E\u624D\u6267\u884C<code>start</code>\u65B9\u6CD5\uFF0C\u800C\u4E14\u662F\u901A\u8FC7<code>next</code>\u53BB\u6267\u884C\u7684\u3002</p><p>\u6240\u4EE5\u6B64\u65F6\u8FD9\u4E2A<code>start</code>\u53D8\u6210\u4E86\u4E00\u4E2A<code>\u6682\u7F13\u7684\u6267\u884C\u51FD\u6570</code>,\u540C\u65F6\u6211\u4EEC\u8981\u6CE8\u610F<code>yield</code>\u53EA\u80FD\u7528\u5728<code>*</code>\u5B9A\u4E49\u7684\u751F\u6210\u5668\u5185\u90E8</p><h3 id="\u751F\u6210\u5668-\u6241\u5E73\u5316\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668-\u6241\u5E73\u5316\u6570\u7EC4" aria-hidden="true">#</a> \u751F\u6210\u5668-\u6241\u5E73\u5316\u6570\u7EC4</h3><p>\u6211\u4EEC\u5728\u4EE5\u5F80\u7684\u4E1A\u52A1\u4E2D\u591A\u5C11\u6709\u5199\u8FC7\u6241\u5E73\u5316\u6570\u7EC4\uFF0C\u901A\u5E38\u4E5F\u662F\u7528\u9012\u5F52\u5B9E\u73B0\u591A\u7EF4\u6570\u7EC4\u7684\u6253\u5E73,\u73B0\u5728\u6211\u4EEC\u5C1D\u8BD5\u7528\u751F\u6210\u5668\u6765\u5B9E\u73B0\u4E00\u4E2A\u6241\u5E73\u5316\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u662F\u6570\u7EC4\uFF0C\u5219\u9012\u5F52</span>
            <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">flat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">yield</span> item
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> sourceArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> <span class="token function">flat</span><span class="token punctuation">(</span>sourceArr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">// [1,2,3,4,5,6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u8FD9\u4E2A<code>flat</code>\u8C8C\u4F3C\u4E0D\u592A\u901A\u7528\uFF0C\u56E0\u6B64\u53EF\u4E0D\u53EF\u4EE5\u50CF\u539F\u751F<code>flat</code>\u65B9\u6CD5\u4E00\u6837,\u56E0\u6B64\u6211\u4EEC\u5411\u4E0B\u9762\u8FD9\u6837\u505A\uFF0C\u5728<code>Array</code>\u7684\u539F\u578B\u4E0A\u65B0\u589E\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u8BA9\u6240\u6709\u7684\u6570\u7EC4\u90FD\u80FD\u8BBF\u95EE\u8FD9\u4E2A\u81EA\u5B9A\u4E49\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Array\u7684prototype\u4E2D\u7ED1\u5B9A\u4E00\u4E2A\u516C\u6709\u65B9\u6CD5</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$myFlat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2Aflat\u751F\u6210\u5668</span>
    <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> item <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u9012\u5F52\u5F53\u524Dflat</span>
                <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">flat</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">yield</span> item
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> ngen <span class="token operator">=</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>ngen<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> sourceArr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sourceArr2<span class="token punctuation">.</span><span class="token function">$myFlat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/24614/71b56d2f-fbd8-42f5-9473-cde5570d753a.png" alt=""></p><p>\u56E0\u6B64<code>$myFlat</code>\u8FD9\u4E2A\u65B9\u6CD5\u5C31\u50CF\u539F\u751F<code>flat</code>\u4E00\u6837\u4E86</p><h3 id="\u751F\u6210\u5668\u4E0E\u8FED\u4EE3\u5668\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u4E0E\u8FED\u4EE3\u5668\u7684\u5173\u7CFB" aria-hidden="true">#</a> \u751F\u6210\u5668\u4E0E\u8FED\u4EE3\u5668\u7684\u5173\u7CFB</h3><p>\u5F53\u6211\u4EEC\u770B\u5230\u7528<code>*</code>\u5B9A\u4E49\u7684\u65B9\u6CD5\uFF0C\u5C31\u53D8\u6210\u4E00\u4E2A\u751F\u6210\u5668\uFF0C\u6B64\u65F6\u6211\u4EEC\u8C03\u7528\u8FD9\u4E2A\u751F\u6210\u5668\u65B9\u6CD5\uFF0C\u90A3\u4E48\u6B64\u65F6\u5C31\u53EF\u4EE5<code>for...of</code>\u5FAA\u73AF\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gtest <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// gtest.next() { value:1,done: false}</span>
<span class="token comment">// for (let item of gtest) {</span>
<span class="token comment">//     console.log(item) \u8FD9\u91CC\u76F8\u5F53\u4E8E\u5DF2\u7ECF\u8C03\u7528\u4E86gtest.next().value</span>
<span class="token comment">// }</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">]</span> <span class="token operator">=</span> gtest<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6253\u5370\u7684\u7ED3\u679C\u5C31\u662F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>abc <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token keyword">undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u4EEC\u8FDB\u4E00\u6B65\u6D4B\u8BD5\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gtest <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> gtest<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u5C31\u4F1A\u53D1\u73B0<code>gtest</code>\u53EF\u4EE5\u901A\u8FC7<code>Symbol.iterator</code>\u8FD9\u4E2A\u65B9\u6CD5\u76F4\u63A5\u8C03\u7528\uFF0C\u5C45\u7136\u4E8E\u5B83\u672C\u8EAB\u76F8\u7B49\u3002</p><p><img src="https://files.mdnice.com/user/24614/9cf5abcf-9481-4074-bc6d-cc9826e8b93b.png" alt=""> \u4ECE\u63A7\u5236\u53F0\u4E2D\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053<code>gtest</code>\u8FD4\u56DE\u5C31\u662F\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\uFF0C\u5B83\u7684\u6784\u9020\u51FD\u6570\u662F<code>GeneratorFunction</code>,\u5E76\u4E14\u539F\u578B\u4E0A\u6709<code>Symbol.iterator</code>\uFF0C\u800C\u4E14\u662F\u4E00\u4E2A\u8FED\u4EE3\u5668\u3002</p><p>\u5F53\u4F60\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
gtest<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gtest<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
gtest<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u4EE5\u4E0A\u7B49\u4EF7\u4E8E</span>
<span class="token comment">/*
  gtest.next();
  gtest.next();
  gtest.next();
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u4E0B\u63A7\u5236\u53F0\u6253\u5370\u7684\u7ED3\u679C\u5C31\u77E5\u9053\u4E86 <img src="https://files.mdnice.com/user/24614/97a20d01-333f-4027-aeca-ed5f8fedf447.png" alt=""></p><p>\u6240\u4EE5\u5927\u6982\u4E86\u89E3\u751F\u6210\u5668\u4E0E\u8FED\u4EE3\u5668\u7684\u5173\u7CFB\u4E86\u4E48\uFF1F\u672C\u8D28\u4E0A\u662F\u901A\u8FC7\u751F\u6210\u5668\u5BF9\u8C61\u7684prototype\u7684<code>Symbol.iterator</code>\u8FDE\u63A5\u4E86\u8D77\u6765</p><h3 id="\u751F\u6210\u5668\u51FD\u6570\u7684return" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u51FD\u6570\u7684return" aria-hidden="true">#</a> \u751F\u6210\u5668\u51FD\u6570\u7684return</h3><p>\u5F53\u6211\u4EEC\u5728\u751F\u6210\u5668\u51FD\u6570\u5185\u90E8return\u65F6\uFF0C\u90A3\u4E48\u5F53\u8C03\u7528<code>next</code>\u8FED\u4EE3\u5B8C\u6240\u6709\u7684\u503C\u65F6\uFF0C\u7EE7\u7EED\u8C03\u7528<code>next</code>\uFF0C\u5219\u4F1A\u8FD4\u56DE<code>return</code>\u7684\u503C</p><p>\u4EC0\u4E48\u610F\u601D\uFF0C\u6211\u4EEC\u770B\u4E0B\u4E0B\u9762\u8FD9\u6BB5\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gtest <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// {value: 1,done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2,done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 3,done: false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 4,done: true}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined,done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>yield</code>\u540E\u9762\u53EF\u4EE5\u662F\u53D8\u91CF\u6216\u8005\u5177\u4F53\u51FD\u6570\u8FD4\u56DE\u503C \u4F60\u53EF\u4EE5\u8FD9\u4E48\u5199</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">logNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> num
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> b<span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token function">logNum</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gtest <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u7ED3\u679C\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u5668\u4F20\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">logNum</span> <span class="token operator">=</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span> num
    <span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// n\u4E3A\u4E0B\u9762\u7B2C\u4E8C\u4E2Ayield(10)\u8FD9\u91CCn = 10</span>
    <span class="token keyword">yield</span> n <span class="token operator">*</span> b<span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u4E2An\u5C31\u662F\u7B2C\u4E8C\u4E2Anext\u4F20\u5165\u7684\uFF0C\u4F1A\u628A\u7B2C\u4E00\u4E2Ayield\u5F53\u8FD4\u56DE\u503C\uFF0C\u4F20\u7ED9\u4E0B\u4E2Ayield</span>
    <span class="token keyword">yield</span> <span class="token function">logNum</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gtest <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 20</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gtest<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">/*
{ value: 1, done: false }
{ value: 20, done: false }
{ value: 5, done: false }
{ value: 4, done: true }
{ value: undefined, done: true }
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u751F\u6210\u5668\u6355\u83B7\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u6355\u83B7\u5F02\u5E38" aria-hidden="true">#</a> \u751F\u6210\u5668\u6355\u83B7\u5F02\u5E38</h3><p>\u4E3B\u8981\u662F\u5728<code>yield</code>\u6355\u83B7\u5F02\u5E38\uFF0C\u5177\u4F53\u770B\u4E0B\u4E0B\u9762\u8FD9\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> <span class="token string">&#39;---2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
gen<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;\u9519\u8BEF\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5E76\u4E0D\u4F1A\u8FD0\u884C</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u6267\u884C<code>gen.next()</code>\u65F6\u4F1A\u6267\u884C<code>yield 1</code>\u6B64\u65F6\u8FD4\u56DE<code>{value: 1, done: false}</code> \u5F53\u6211\u4EEC\u6267\u884C<code>gen.throw</code>\u65F6\uFF0C\u6B64\u65F6<code>yield 2</code>\u4F1A\u6682\u505C\uFF0C\u5E76\u4E14\u5C31\u4F1A\u4E2D\u65AD\u4E86\u3002\u5E76\u4E14\u540E\u9762\u7684<code>gen.next()</code>\u5C31\u662F\u9ED8\u8BA4\u8FD4\u56DE<code>{value: undefined, done: true}</code></p><h3 id="yield\u72B6\u6001\u673A" tabindex="-1"><a class="header-anchor" href="#yield\u72B6\u6001\u673A" aria-hidden="true">#</a> yield\u72B6\u6001\u673A</h3><p>\u6211\u4EEC\u5728\u8FD9\u4E4B\u524D\u90FD\u89C1\u8FC7<code>yield</code>\u53EA\u80FD\u5728\u751F\u6210\u5668\u4E2D\u4F7F\u7528\uFF0C\u90A3\u5230\u5E95\u6709\u54EA\u4E9B\u4F7F\u7528,\u6211\u4EEC\u5199\u4E2A\u4F8B\u5B50\u719F\u6089\u4E00\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bGen <span class="token operator">=</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// console.log([...bGen]); [1,2,3]</span>
<span class="token comment">// console.log(bGen.next()) \u6CE8\u610F\u8FD9\u4E2A\u4E0E\u4E0A\u9762\u4E0D\u80FD\u540C\u65F6\u4F7F\u7528\uFF0C\u4E0D\u7136\u8FD9\u4E2AbGen\u5C31\u662F\u8FD4\u56DE{value: undefined, done: true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>yield</code>\u540E\u9762\u80FD\u662F\u51FD\u6570\u8FD4\u56DE\u503C\uFF0C\u80FD\u662F\u53D8\u91CF\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u751F\u6210\u5668\u51FD\u6570</p><h3 id="\u8BA9\u4E00\u4E2A\u5BF9\u8C61\u7684\u65B9\u6CD5\u652F\u6301\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#\u8BA9\u4E00\u4E2A\u5BF9\u8C61\u7684\u65B9\u6CD5\u652F\u6301\u751F\u6210\u5668" aria-hidden="true">#</a> \u8BA9\u4E00\u4E2A\u5BF9\u8C61\u7684\u65B9\u6CD5\u652F\u6301\u751F\u6210\u5668</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">*</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span> <span class="token string">&#39;Maic&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: &#39;Maic&#39;, done: false}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B49\u4EF7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getAge</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span> <span class="token number">18</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> age <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 18, done: false}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u751F\u6210\u5668\u4E0D\u80FD\u4E3Anew" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u4E0D\u80FD\u4E3Anew" aria-hidden="true">#</a> \u751F\u6210\u5668\u4E0D\u80FD\u4E3Anew</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// new a() error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u751F\u6210\u5668\u5F02\u6B65\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u5F02\u6B65\u64CD\u4F5C" aria-hidden="true">#</a> \u751F\u6210\u5668\u5F02\u6B65\u64CD\u4F5C</h3><p>\u5728\u4EE5\u5F80\u4E1A\u52A1\u4E2D\u80AF\u5B9A\u6709\u8FD9\u79CD\u573A\u666F\uFF0C\u70B9\u51FB\u9875\u9762\u9996\u5148\u52A0\u8F7D<code>loading</code>,\u7136\u540E\u8BF7\u6C42\u6570\u636E\uFF0C\u5F53\u6570\u636E\u8BF7\u6C42\u6210\u529F\u540E\uFF0C\u5C31\u7ED3\u675F<code>loading</code>,\u6211\u4EEC\u770B\u4E00\u6BB5\u7B80\u5355\u7684\u4F2A\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B9A\u4E49\u4E86\u4E00\u4E2A\u83B7\u53D6\u6570\u636E\u7684\u751F\u6210\u5668\u65B9\u6CD5\uFF0CsetTimeout\u6A21\u62DF\u5F02\u6B65\u8BF7\u6C42</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token punctuation">{</span>
                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A<code>loadUI</code>\u751F\u6210\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">loadUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6B63\u5728\u52A0\u8F7D\u4E2D...,\u5F00\u542Floading...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u52A0\u8F7D\u5B8C\u6210,\u5173\u95EDloading&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> loadStart <span class="token operator">=</span> <span class="token function">loadUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u52A0\u8F7D\u6570\u636E,\u8C03\u7528next().value \u83B7\u53D6yield\u7684\u503C</span>
<span class="token keyword">const</span> currentData <span class="token operator">=</span> loadStart<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
currentData<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    loadStart<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5173\u95ED\u52A0\u8F7D\uFF0C\u52A0\u8F7D\u5B8C\u6210\uFF0C\u6267\u884Cyield \u540E\u9762\u7684\u4EE3\u7801</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/24614/b346d31b-c382-4a74-a0ec-cbeee4aeae76.png" alt=""></p><p>\u6216\u8005\u4F60\u53EF\u4EE5\u8FD9\u6837</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">loadUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6B63\u5728\u52A0\u8F7D\u4E2D...,\u5F00\u542Floading...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u52A0\u8F7D\u5B8C\u6210,\u5173\u95EDloading&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> loadStart <span class="token operator">=</span> <span class="token function">loadUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mockData <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Maic&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        loadStart<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>mockData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// next\u4F20\u5165\u6570\u636E\u5F53\u6210yield\u72B6\u6001\u673A\u7684\u8FD4\u56DE\u503C</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
<span class="token comment">// \u7EE7\u7EED\u6267\u884Cyield\u540E\u9762\u7684\u4EE3\u7801</span>
loadStart<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u7684\u7ED3\u679C\u4F9D\u65E7\u662F\u4E00\u6837\u7684\uFF0C\u8FD9\u6837\u6211\u5C31\u53EF\u4EE5\u901A\u8FC7<code>loadStart</code>\u7CBE\u51C6\u7684\u63A7\u5236\u6570\u636E\u8BF7\u6C42\u5728\u54EA\u91CC\u6267\u884C\u4E86\u3002\u5982\u679C\u6211\u6700\u540E\u4E00\u884C\u4EE3\u7801\u4E0D\u6267\u884C\uFF0C\u90A3\u4E48\u4E45\u4E0D\u4F1A\u6267\u884C\u540E\u9762\u7684\u6253\u5370\u4EE3\u7801\u4E86\uFF0C\u4ECE\u800C\u8FBE\u5230\u7CBE\u51C6\u7684\u63A7\u5236\u51FD\u6570\u5185\u90E8\u7684\u6267\u884C\u3002</p><h3 id="\u63A7\u5236\u591A\u4E2A\u51FD\u6570\u6309\u987A\u5E8F\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u63A7\u5236\u591A\u4E2A\u51FD\u6570\u6309\u987A\u5E8F\u6267\u884C" aria-hidden="true">#</a> \u63A7\u5236\u591A\u4E2A\u51FD\u6570\u6309\u987A\u5E8F\u6267\u884C</h3><p>\u5047\u8BBE\u6709\u4E00\u4E2A\u573A\u666F\uFF0C\u5C31\u662F<code>fn2</code>\u4F9D\u8D56<code>fn1</code>\u7684\u7ED3\u679C\u800C\u51B3\u5B9A\u662F\u5426\u662F\u5426\u6267\u884C\uFF0C<code>fn3</code>\u4F9D\u8D56<code>fn2</code>\u7684\u72B6\u6001\u662F\u5426\u7EE7\u7EED\u6267\u884C\uFF0C\u90A3\u600E\u4E48\u8BBE\u8BA1\u5462\uFF1F\u751F\u6210\u5668\u53EF\u4EE5\u5E2E\u6211\u4EEC\u89E3\u51B3\u8FD9\u4E2A\u9700\u6C42\u95EE\u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u6211\u662Ffn1,\u4F60\u6210\u529F\u4E86\uFF0C\u8BF7\u8FDB\u884C\u4E0B\u4E00\u6B65&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u6211\u662Ffn2,\u5931\u8D25\u4E86&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u606D\u559C\u4F60\uFF0C\u95EF\u5173\u6210\u529F\u4E86...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">[</span>fn1<span class="token punctuation">,</span> fn2<span class="token punctuation">,</span> fn3<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span> <span class="token string">&quot;i&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> it <span class="token operator">=</span> <span class="token function">main</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> it<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u6211\u662Ffn1,\u4F60\u6210\u529F\u4E86\uFF0C\u8BF7\u8FDB\u884C\u4E0B\u4E00\u6B65&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u6211\u662Ffn2,\u5931\u8D25\u4E86&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53<code>fn2</code>\u8FD4\u56DE<code>code:0</code>\u5C31\u4F1A\u7EC8\u6B62<code>break</code>\u4E2D\u6B62\uFF0C\u5F53<code>fn2</code>\u4E2D\u8FD4\u56DE\u7684<code>code</code>\u662F1\u65F6\uFF0C\u624D\u4F1A\u8FDB\u5165\u4E0B\u4E00\u4E2A\u8FED\u4EE3</p><p>\u5F53\u6211\u4EEC<code>for...of</code>\u65F6\uFF0C\u5185\u90E8\u4F1A\u4F9D\u6B21\u8C03\u7528<code>next</code>\u65B9\u6CD5\u8FDB\u884C\u904D\u5386\u6570\u636E\u3002\u56E0\u4E3A\u662F\u8FED\u4EE3\u5668\uFF0C\u6BCF\u6B21<code>next</code>\u7684\u503C\u8FD4\u56DE\u7684\u5C31\u662F<code>yield</code>\u7684\u503C\uFF0C\u5E76\u4E14\u8FD4\u56DE<code>{value: xxx, done: false}</code>,\u76F4\u5230\u6700\u540E<code>{value: undefined, done: true}</code></p><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><ul><li><p>\u8FED\u4EE3\u5668\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FED\u4EE3\u5668\u5BF9\u8C61\u6709\u4E00\u4E2A<code>next</code>\u65B9\u6CD5\uFF0C\u5F53\u6211\u4EEC\u8C03\u7528<code>next</code>\u65B9\u6CD5\u65F6\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61<code>{value: xx, done: false}</code>,<code>value</code>\u5C31\u662F\u5F53\u524D\u8FED\u4EE3\u5668\u8FED\u4EE3\u7684\u5177\u4F53\u503C\uFF0C\u5F53\u8FED\u4EE3\u5668\u5BF9\u8C61\u6BCF\u8C03\u7528\u4E00\u6B21<code>next</code>\u65B9\u6CD5\u65F6\uFF0C\u5C31\u4F1A\u83B7\u53D6\u5F53\u524D\u7684\u503C\uFF0C\u76F4\u5230\u8FED\u4EE3\u5B8C\u5168,\u6700\u540E\u8FD4\u56DE<code>{done: true, value: undefined}</code></p></li><li><p>\u6BCF\u4E00\u4E2A\u8FED\u4EE3\u5668\u90FD\u53EF\u4EE5\u88AB<code>for...of</code>\u3001<code>\u6570\u7EC4\u89E3\u6784</code>\u4EE5\u53CA\u6570\u7EC4\u6269\u5C55</p></li><li><p>\u751F\u6210\u5668\u51FD\u6570\uFF0C<code>yield</code>\u53EF\u4EE5\u4E2D\u65AD\u51FD\u6570\uFF0C\u5F53\u6211\u4EEC\u8C03\u7528\u51FD\u6570\u751F\u6210\u5668\u65F6\uFF0C\u5B9E\u9645\u4E0A\u5E76\u4E0D\u4F1A\u7ACB\u5373\u6267\u884C\u751F\u6210\u5668\u51FD\u6570\uFF0C\u8FD9\u4E2A\u8C03\u7528\u7684\u51FD\u6570\u751F\u6210\u5668\u5728\u8C03\u7528\u65F6\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668\uFF0C\u6BCF\u6B21\u8C03\u7528<code>next</code>\u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u7684\u503C\u8DDF\u8FED\u4EE3\u5668\u4E00\u6837\uFF0C\u5E76\u4E14\u8FD4\u56DE\u7684<code>value</code>\u662F<code>yield</code>\u7684\u503C\uFF0C\u6BCF\u6B21\u8C03\u7528\uFF0C\u624D\u4F1A\u6267\u884Cyield\uFF0C\u540E\u9762\u7684\u4EE3\u7801\u4F1A\u4E2D\u65AD\u3002\u53EA\u6709\u7EE7\u7EED\u8C03\u7528<code>next</code>\u624D\u4F1A\u7EE7\u7EED\u5F80\u540E\u6267\u884C\u3002</p></li><li><p>\u751F\u6210\u5668\u51FD\u6570\u8C03\u7528\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u8FED\u4EE3\u5668\uFF0C\u5177\u5907\u8FED\u4EE3\u5668\u6240\u6709\u7279\u6027\uFF0C<code>yield</code>\u8FD9\u4E2A\u72B6\u6001\u673A\u53EA\u80FD\u5728\u751F\u6210\u5668\u51FD\u6570\u5185\u90E8\u4F7F\u7528</p></li><li><p>\u4EE5\u5B9E\u9645\u4F8B\u5B50\u5BF9<code>\u5BF9\u8C61</code>\u6269\u5C55\u652F\u6301\u8FED\u4EE3\u5668\u7279\u6027\uFF0C\u5982\u679C\u9700\u8981\u652F\u6301\u8FED\u4EE3\u5668\u7279\u5F81\uFF0C\u90A3\u4E48\u5FC5\u987B\u539F\u578B\u4E0A\u6269\u5C55<code>Symbol.iterator</code>\u65B9\u6CD5\uFF0C\u4EE5<code>$flat</code>\u5728\u6570\u7EC4\u539F\u578B\u4E0A\u5229\u7528\u51FD\u6570\u751F\u6210\u5668\u5B9E\u73B0\u6241\u5E73\u5316\u6570\u7EC4\u7B49\u3002</p></li><li><p>\u672C\u6587<a href="&#39;https://github.com/maicFir/lessonNote/tree/master/javascript/19-%E8%BF%AD%E4%BB%A3%E5%99%A8" title="code-example">code-example</a></p></li></ul>`,82);function x(j,_){const p=l("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[r,k,d,s("a",v,[m,t(p)])]),b,s("p",null,[y,s("a",f,[g,t(p)]),w]),h])}var I=e(i,[["render",x],["__file","2022-08-12_advance.html.vue"]]);export{I as default};
