import{_ as o,o as e,c,b as n,a as t,d as s,e as p,r as l}from"./app.13e035d0.js";const u={},i=n("code",null,"react",-1),r=s("\u572816.8\u7248\u672C\u5C31\u7528\u4E86"),k=n("code",null,"hook",-1),d=s(","),v=n("code",null,"hook",-1),m=s("\u662F\u5728\u4EE5\u524D\u7684\u65E0\u72B6\u6001\u7EAF\u51FD\u6570\u7EC4\u4EF6\u589E\u52A0\u4E86\u5185\u90E8\u81EA\u5DF1\u7684\u72B6\u6001\uFF0C\u800C\u4E14\u6211\u4EEC\u5B8C\u5168\u53EF\u4EE5\u7528"),b={href:"https://react.docschina.org/docs/hooks-intro.html",title:"hook",target:"_blank",rel:"noopener noreferrer"},f=s("hook"),g=s("\u65B9\u5F0F\u66FF\u6362\u539F\u6709\u7684"),h=n("code",null,"class",-1),y=s("\u7EC4\u4EF6\uFF0C\u672C\u6587\u662F\u4E00\u7BC7\u91CD\u8BFB"),w=n("code",null,"react\u5B98\u7F51hook",-1),x=s("\u7684\u7B14\u8BB0\u3002"),_=p(`<p>\u5728\u5F00\u59CB\u672C\u6587\u4E4B\u95F4\uFF0C\u4E3B\u8981\u4F1A\u4ECE\u4EE5\u4E0B\u65B9\u9762\u7406\u89E3<code>hook</code></p><ul><li><p>\u4E3A\u4EC0\u4E48\u4F1A\u6709hook,hook\u5230\u5E95\u6709\u4EC0\u4E48\u597D</p></li><li><p>hook\u7EC4\u4EF6\u6BD4class\u7EC4\u4EF6\u66F4\u7B80\u5355\uFF0C\u66F4\u5BB9\u6613\u7EF4\u62A4</p></li><li><p>\u6838\u5FC3<code>hook</code>API\u7684\u4F7F\u7528</p></li></ul><h3 id="hook\u5230\u5E95\u6709\u591A\u597D" tabindex="-1"><a class="header-anchor" href="#hook\u5230\u5E95\u6709\u591A\u597D" aria-hidden="true">#</a> hook\u5230\u5E95\u6709\u591A\u597D</h3><p>\u5728\u5B98\u7F51\u603B\u7ED3\u91CC\uFF0C\u4F7F\u7528\u8FC7\u5F80<code>class</code>\u7EC4\u4EF6\u5176\u5B9E\u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u4E2A\u5F0A\u7AEF</p><ul><li><p>class\u7EC4\u4EF6\u4E4B\u95F4<code>\u72B6\u6001</code>\u96BE\u4EE5\u590D\u7528</p></li><li><p>class\u5185\u90E8\u590D\u6742\u7684\u94A9\u5B50<code>componentDidMount</code>,<code>componentDidUpdate</code>,<code>componentWillUnmount</code>\u8026\u5408\u4E86\u592A\u591A\u7684\u903B\u8F91\uFF0C\u5728<code>class</code>\u7EC4\u4EF6\u8026\u5408\u4E86\u8FD9\u6837\u7C7B\u4F3C\u7684\u751F\u547D\u5468\u671F\u94A9\u5B50\u6709\u592A\u591A\u7684\u903B\u8F91\u72B6\u6001\uFF0C\u4F7F\u5F97\u7EC4\u4EF6\u7684\u590D\u7528\u6709\u5F88\u5927\u6311\u6218\u3002</p></li><li><p><code>class</code>\u7EC4\u4EF6\u4E0D\u6613\u538B\u7F29\uFF0C\u800C\u4E14\u5728\u70ED\u91CD\u8F7D\u4E0A\u6709\u6548\u679C\u4E0D\u597D</p></li></ul><p>\u9488\u5BF9\u4EE5\u4E0A<code>hook</code>\u505A\u4E86\u4E00\u4E9B<code>\u6E10\u8FDB\u589E\u5F3A</code>\uFF0C\u5411\u540E\u517C\u5BB9\uFF0C<code>hook</code>\u4E0D\u662F\u552F\u4E00\u9009\u62E9\uFF0C\u4E0D\u5F71\u54CD\u539F\u6709<code>class</code>\u7EC4\u4EF6\u7684\u751F\u547D\u5468\u671F</p><ul><li><p>\u8BA9\u7EC4\u4EF6\u72B6\u6001\u53EF\u4EE5\u66F4\u597D\u7684\u590D\u7528</p></li><li><p>\u4E0D\u518D\u6709\u90A3\u4E48\u7684<code>\u751F\u547D\u5468\u671F</code>\u94A9\u5B50\u51FD\u6570,\u800C\u662F\u66F4\u7B80\u5355\u7684<code>hook</code>,\u7EC4\u4EF6\u7EC6\u7C92\u5EA6\u53EF\u4EE5\u66F4\u5C0F\u7684\u7EAF\u51FD\u6570\u3002</p></li></ul><h3 id="hook\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#hook\u662F\u4EC0\u4E48" aria-hidden="true">#</a> hook\u662F\u4EC0\u4E48</h3><p><code>hook</code>\u672C\u8D28\u5C31\u662F\u7EAF\u51FD\u6570\uFF0C\u901A\u5E38\u6211\u4EEC\u4F7F\u7528<code>hook</code>\u5C31\u662F<code>useXXX</code>,\u6211\u4EEC\u770B\u4E0B<code>hook</code>\u7684\u7B2C\u4E00\u4E2A\u57FA\u7840hook<code>useState</code></p><h1 id="usestate" tabindex="-1"><a class="header-anchor" href="#usestate" aria-hidden="true">#</a> useState</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> useState<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>initialState<span class="token operator">:</span> <span class="token constant">S</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>SetStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>useState</code>\u7684\u521D\u59CB\u503C\u5C31\u662F\u4F20\u5165\u7684\u5F62\u53C2<code>initState</code>,\u5E76\u4E14\u8FD4\u56DE\u662F\u4E00\u4E2A\u6570\u7EC4<code>[state,dispatch]</code></p><p>\u6211\u4EEC\u770B\u4E00\u4E0B\u5B98\u7F51\u7B80\u5355\u7684\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;before count&#39;</span><span class="token punctuation">)</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>add<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u8BA1\u6570<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useState</code>\u521D\u59CB\u503C\u662F<code>0</code>,\u7136\u540E\u6211\u4EEC\u7528\u6570\u7EC4\u89E3\u6784\u65B9\u5F0F\uFF0C\u7B2C\u4E00\u4E2A\u503C\u662F<code>state</code>\uFF0C\u7B2C\u4E8C\u503C\u662F<code>setState</code>,\u6CE8\u610F\u6211\u4EEC<code>setCount</code>\u662F\u5F02\u6B65\uFF0C\u8FD9\u4E0E<code>class</code>\u7EC4\u4EF6\u7684<code>setState</code>\u662F\u4E00\u6837\u7684</p><h3 id="useeffect" tabindex="-1"><a class="header-anchor" href="#useeffect" aria-hidden="true">#</a> useEffect</h3><p>\u4E3A\u51FD\u6570\u7EC4\u4EF6\u63D0\u4F9B\u4E86<code>\u526F\u4F5C\u7528\u80FD\u529B</code>\uFF0C\u600E\u4E48\u7406\u89E3<code>\u526F\u4F5C\u7528</code>\uFF0C\u5C31\u662F\u6211\u4EEC\u5E73\u65F6\u83B7\u53D6\u6570\u636E\uFF0C\u4FEE\u6539dom\u4E4B\u7C7B\u7684\u64CD\u4F5C\uFF0C\u4E00\u4E2A\u51FD\u6570\u5185\u90E8\u4EA7\u751F\u4E0D\u786E\u5B9A\u6027\u64CD\u4F5C\u8FD9\u5C31\u662F\u526F\u4F5C\u7528\u3002</p><p>\u5B98\u65B9\u89E3\u91CA<code>useEffect</code>\u662F\u539F\u6709<code>componentDidMount</code>,<code>componentDidUpdate</code>,<code>componentWillUnmount</code>\u7684\u7EC4\u5408</p><p>\u5177\u4F53\u6211\u4EEC\u770B\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;before count1&#39;</span><span class="token punctuation">)</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;before count2&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;after count title&#39;</span><span class="token punctuation">)</span>
        document<span class="token punctuation">.</span>title <span class="token operator">=</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token keyword">const</span> <span class="token function-variable function">renderText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;render&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> count
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token function">renderText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>add<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u6DFB\u52A0<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/24614/c6bb6af1-70b3-4d27-8c00-d95f112cd86a.png" alt=""></p><p><code>useEffect</code>\u8FD9\u4E2Ahook\u662F\u5728\u66F4\u65B0dom\u540E\uFF0C\u6267\u884C\u7684\uFF0C\u4E5F\u5C31react\u4F1A\u5728dom\u66F4\u65B0\u540E\u518D\u6267\u884C<code>useEffect</code>\u4E2D\u7684\u5185\u90E8\u7684\u526F\u4F5C\u7528\u51FD\u6570,\u6BCF\u6B21\u66F4\u65B0state\uFF0C\u5C31\u4F1A\u91CD\u65B0\u6E32\u67D3\u7EC4\u4EF6\uFF0C<code>useEffect</code>\u4F1A\u91CD\u65B0\u8C03\u7528\u3002</p><p>\u800C<code>useEffect</code>\u5185\u90E8\u5C31\u662F\u80FD\u83B7\u53D6\u5230\u4FEE\u6539\u540E\u6700\u65B0\u7684\u503C\u3002</p><p>\u4E3A\u5565<code>useEffect</code>\u80FD\u62FF\u5230\u6700\u65B0\u503C\uFF0C\u8FD9\u662F\u56E0\u4E3A\u8FD9\u5176\u5B9E\u7528\u4E86\u4E00\u4E2Ajs\u4E2D\u7684\u95ED\u5305\uFF0C\u5728<code>useEffect</code>\u5185\u90E8\u6709\u8BBF\u95EE\u51FD\u6570\u5916\u90E8\u7684\u53D8\u91CF\uFF0C\u5728<code>Title</code>\u8FD9\u4E2A\u51FD\u6570\u7EC4\u4EF6\u5185\u90E8\u4F5C\u7528\u57DF\u5185\uFF0C<code>useEffect</code>\u5185\u90E8\u662F\u53EF\u4EE5\u8BBF\u95EE\u51FD\u6570\u7EC4\u4EF6\u7684\u53D8\u91CF\u7684\u3002</p><h3 id="\u6D88\u9664useeffect\u526F\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u6D88\u9664useeffect\u526F\u4F5C\u7528" aria-hidden="true">#</a> \u6D88\u9664useEffect\u526F\u4F5C\u7528</h3><p>\u6211\u4EEC\u77E5\u9053<code>useEffect</code>\u6709\u526F\u4F5C\u7528\uFF0C\u90A3\u4E48\u5982\u4F55\u6D88\u9664\u5462\uFF0C\u5B98\u7F51\u4ECB\u7ECD\u5230\uFF0C\u53EA\u9700\u8981\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u5373\u53EF,\u5728\u5B98\u7F51\u63D0\u5230\uFF0C\u5982\u679C\u662F\u5916\u90E8\u6570\u636E\u6E90\uFF0C\u662F\u6709\u5FC5\u8981\u6D88\u9664\u526F\u4F5C\u7528\u7684\uFF0C\u8FD9\u6837\u53EF\u4EE5\u9632\u6B62\u5185\u5B58\u6CC4\u6F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token operator">...</span>
<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;after count title&#39;</span><span class="token punctuation">)</span>
      document<span class="token punctuation">.</span>title <span class="token operator">=</span> count<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6E05\u9664\u526F\u4F5C\u7528&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>useEffect(callback, [])</code>,\u5982\u679C\u662F\u8FD9\u6837\uFF0C\u5C31\u53EA\u4F1A\u8C03\u7528\u4E00\u6B21\uFF0C\u5982\u679C\u4F1A\u4F20\u5165\u4E00\u4E2A\u503C<code>useEffect(callback, [count])</code>,\u90A3\u4E48<code>count</code>\u53D8\u5316\u4E86\uFF0C\u90A3\u4E48<code>useEffect</code>\u5C31\u4F1A\u91CD\u65B0\u8C03\u7528</p><p>\u6211\u4EEC\u5C1D\u8BD5\u5728<code>useEffect</code>\u4F7F\u7528\u4E00\u4E2A\u5B9A\u65F6\u5668\u8BA1\u6570\uFF0C\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;after count title&#39;</span><span class="token punctuation">)</span>
        document<span class="token punctuation">.</span>title <span class="token operator">=</span> count<span class="token punctuation">;</span>
        <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">count</span> <span class="token operator">=&gt;</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6E05\u9664\u526F\u4F5C\u7528&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u4F1A\u53D1\u73B0\u5B9A\u65F6\u5668\u8BA1\u6570\u8BBE\u503C\u662F\u4E0D\u51C6\u786E,\u8FD9\u4E2A\u95EE\u9898\u600E\u4E48\u89E3\u5462\uFF0C\u5B9E\u9645\u4E0A\u53EA\u9700\u8981\u5728<code>useEffect</code>\u4E2D\u6E05\u9664\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;after count title&#39;</span><span class="token punctuation">)</span>
    document<span class="token punctuation">.</span>title <span class="token operator">=</span> count<span class="token punctuation">;</span>
    prevCount<span class="token punctuation">.</span>current <span class="token operator">=</span> count<span class="token punctuation">;</span>
    <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">count</span> <span class="token operator">=&gt;</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6E05\u9664\u526F\u4F5C\u7528&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728hook\u4E0A\u4F7F\u7528\u6709\u89C4\u5B9A</p><ul><li><p>\u4E0D\u80FD\u4F7F\u7528\u5728\u6761\u4EF6\uFF0C\u5FAA\u73AF\uFF0C\u5B50\u51FD\u6570\u4F7F\u7528</p></li><li><p>\u53EA\u5B58\u5728\u4E8E<code>\u51FD\u6570\u7EC4\u4EF6</code>\u4E0E<code>\u81EA\u5B9A\u4E49hook\u4E2D</code>\u8C03\u7528</p></li><li><p>hook\u53EF\u4EE5\u591A\u6B21\u91CD\u590D\u4F7F\u7528</p></li></ul><p>\u901A\u4FD7\u6765\u8BB2\uFF0C\u5C31\u662F\u53EA\u80FD\u5728\u51FD\u6570\u7EC4\u4EF6<code>\u6700\u9876\u5C42</code>\u4F7F\u7528</p><h3 id="\u81EA\u5B9A\u4E49hook" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49hook" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49hook</h3><p>\u50CF<code>render props</code>\u4E0E<code>\u9AD8\u9636\u7EC4\u4EF6</code>\u4E00\u6837\u5171\u4EAB\u7EC4\u4EF6\u72B6\u6001\u903B\u8F91</p><p>\u7528\u4E00\u6BB5\u4E3A\u4F2A\u4EE3\u7801\u6765\u611F\u53D7\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// useFeatchList</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> fetchListProxy <span class="token keyword">from</span> <span class="token string">&#39;@/service/proxy&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useFeatchList</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BF7\u6C42\u83B7\u53D6\u6570\u636E</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>list<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchListProxy</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      data
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u53E6\u4E00\u4E2A\u9875\u9762</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">import</span> react <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> useFeatchList<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./useFeatchList&#39;</span>
  <span class="token keyword">function</span> <span class="token function">List</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFeatchList</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
        <span class="token punctuation">{</span>
          data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token punctuation">{</span>v<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">App</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>List id<span class="token operator">=</span><span class="token string">&quot;123&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">export</span> <span class="token keyword">default</span> App
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useFeatchList</code>\u5C31\u662F\u4E00\u4E2A\u81EA\u5B9A\u4E49hook\uFF0C\u6211\u4EEC\u628A\u8BF7\u6C42\u83B7\u53D6\u6570\u636E\u6210\u4E86\u4E00\u4E2Ahook,\u4E0E\u5B9E\u9645\u7EC4\u4EF6\u89E3\u85D5\u4E86\u51FA\u53BB\uFF0C\u8FD9\u6837\u4E1A\u52A1\u903B\u8F91\u66F4\u52A0\u6E05\u6670\u4E86</p><p>\u6211\u4EEC\u518D\u6765\u770B\u4E0B\u5B98\u65B9\u7684\u4E00\u4E2A\u81EA\u5B9A\u4E49\u81EA\u5DF1\u7684<code>redux</code>,<code>redux</code>\u662F<code>react</code>\u72B6\u6001\u7BA1\u7406\u5DE5\u5177\u7C7B\u4F3C<code>vuex</code>\u4E00\u6837\uFF0C\u4F46\u662F\u4E2A\u4EBA\u89C9\u5F97<code>vuex</code>\u76F8\u6BD4\u8F83<code>redux</code>\u7406\u89E3\u8D77\u6765\u4E5F\u5BB9\u6613\u5F97\u591A\u3002</p><p>\u6211\u4EEC\u4ECA\u5929\u5E76\u4E0D\u6253\u7B97\u53BB\u4E86\u4F7F\u7528<code>redux</code>\u8FD9\u4E2A\u5E93\uFF0C\u8BBE\u8BA1\u4F7F\u7528\u8FD8\u662F\u6709\u4E9B\u590D\u6742\u3002\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u7C7B\u4F3C<code>redux</code>\u7684\u529F\u80FD\uFF0C\u6211\u4EEC\u5C01\u88C5\u4E00\u4E2A\u81EA\u5B9A\u4E49hook,useReducer</p><h3 id="usereducer" tabindex="-1"><a class="header-anchor" href="#usereducer" aria-hidden="true">#</a> useReducer</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> createRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useReducer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../hook/useReducer&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">addReducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;add&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>action<span class="token punctuation">.</span>payload
            <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 <span class="token keyword">function</span> <span class="token function">Title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>addReducer<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>val<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">dispatchAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">renderData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>p key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>v<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handleChangeVal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u5185\u5BB9...&quot;</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>val<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChangeVal<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>dispatchAdd<span class="token punctuation">}</span><span class="token operator">&gt;</span>dispatchAdd<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

        <span class="token punctuation">{</span><span class="token function">renderData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5728<code>hook/useReducer</code>\u4E2D\u5B9A\u4E49\u4E86\u4E00\u4E2A<code>useReducer</code>,<code>useReducer(callback, initState)</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u5C31\u662F\u4E00\u4E2A\u7EAF\u51FD\u6570,<code>useReducer</code>\u8FD4\u56DE\u7684\u5C31\u662F\u4E00\u4E2A\u6570\u7EC4<code>[state, disptch]</code>,\u5B9E\u9645\u4E0A\u8FD9\u4E2A<code>dispatch</code>\u505A\u4E86\u5565\u5462\uFF0C\u5176\u5B9E\u5C31\u662F\u8C03\u7528\u4E86<code>callback</code>\u8FD4\u56DE\u7684\u7ED3\u679C\uFF0C\u91CD\u65B0\u8BBE\u503C\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// hook/useReducer.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token comment">// \u81EA\u5B9A\u4E49\u4E00\u4E2Areducer</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useReducer</span><span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> nextState <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setState</span><span class="token punctuation">(</span>nextState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\u9875\u9762\u4E0A\u5C31\u662Fok\u4E86</p><p><img src="https://files.mdnice.com/user/24614/263bf1a0-6818-49a5-a1ca-8e85164dbe83.png" alt=""></p><p>\u6240\u4EE5\u4E00\u4E2A\u81EA\u5B9A\u4E49<code>useReucer</code>\u5C31\u5DF2\u7ECF\u53EF\u4EE5\u4E86\uFF0C\u5176\u5B9E\u5173\u4E8E\u81EA\u5B9A\u4E49<code>hook</code>\u8FD4\u56DE\u7684\u5E76\u4E0D\u4E00\u5B9A\u662F\u4E00\u4E2A<code>[state, dispatch]</code>,\u8FD9\u70B9\u56E0\u4F60\u4F60\u81EA\u5DF1\u4E1A\u52A1\u800C\u5B9A\uFF0C\u4F46\u662F\u8BB0\u4F4F\u4E00\u70B9<code>hook</code>\u5C31\u662F\u4E00\u4E2A\u7EAF\u51FD\u6570</p><p>\u5B98\u65B9react\u5DF2\u7ECF\u5B9E\u73B0\u4E86<code>useReducer</code>\uFF0C\u6240\u4EE5\u5982\u679C\u5F15\u7528\u5B98\u65B9\uFF0C\u90A3\u5C31\u5F88\u7B80\u5355\u4E86,\u5C31\u53EA\u9700\u8981\u6CE8\u91CA\u5F15\u5165\u81EA\u5B9A\u4E49\u5F15\u5165hook\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> createRef<span class="token punctuation">,</span> useReducer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// import { useReducer } from &#39;../../hook/useReducer&#39;;</span>
<span class="token keyword">function</span> <span class="token function">addReducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;add&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>action<span class="token punctuation">.</span>payload
            <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 <span class="token keyword">function</span> <span class="token function">Title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>addReducer<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>val<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">dispatchAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">renderData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>p key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>v<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handleChangeVal</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u5185\u5BB9...&quot;</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>val<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChangeVal<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>dispatchAdd<span class="token punctuation">}</span><span class="token operator">&gt;</span>dispatchAdd<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

        <span class="token punctuation">{</span><span class="token function">renderData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usecallback" tabindex="-1"><a class="header-anchor" href="#usecallback" aria-hidden="true">#</a> useCallback</h3><p>\u7F13\u5B58\u5185\u90E8\u4F9D\u8D56\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u907F\u514D\u4E0D\u5FC5\u8981\u6E32\u67D3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> createRef<span class="token punctuation">,</span> useReducer<span class="token punctuation">,</span> useCallback <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>addReducer<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>val<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;before count1&#39;</span><span class="token punctuation">)</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;before count2&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
   <span class="token operator">...</span>
    <span class="token keyword">const</span> handleChangeVal <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token function">renderText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>add<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u6DFB\u52A0<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u5185\u5BB9...&quot;</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>val<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChangeVal<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>dispatchAdd<span class="token punctuation">}</span><span class="token operator">&gt;</span>dispatchAdd<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

        <span class="token punctuation">{</span><span class="token function">renderData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="useref" tabindex="-1"><a class="header-anchor" href="#useref" aria-hidden="true">#</a> useRef</h3><p>\u8FD9\u4E2Ahook\u4E0E<code>createRef</code>\u7684\u4F5C\u7528\u7C7B\u4F3C\uFF0C\u53EF\u4EE5\u62FF\u5230\u5177\u4F53dom\uFF0C\u4EE5\u4E0A<code>createRef</code>\u53EF\u4EE5\u6362\u6210<code>useRef</code></p><h3 id="usememo" tabindex="-1"><a class="header-anchor" href="#usememo" aria-hidden="true">#</a> useMemo</h3><p>\u5728\u6E32\u67D3\u671F\u95F4\u5B8C\u6210\u7684\uFF0C\u4F5C\u4E3A\u4F18\u5316\u7EC4\u4EF6\u6E32\u67D3\u7684\u4E00\u79CD\u624B\u6BB5,<code>useMemo</code>\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u7EC4\u4EF6\uFF0C\u53EF\u4EE5\u4F9D\u8D56\u4E8E\u67D0\u4E2A\u503C\uFF0C\u800C\u505A\u4E0D\u5FC5\u8981\u7684\u6E32\u67D3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token keyword">function</span> <span class="token function">Title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> prevCount <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>addReducer<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>val<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Web\u6280\u672F\u5B66\u82D1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;before count1&#39;</span><span class="token punctuation">)</span>
        <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;before count2&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">dispatchAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>value
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> <span class="token function-variable function">renderText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token string">&#39;render&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> count
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">renderData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>p key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>v<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// const handleChangeVal = (e) =&gt; {</span>
    <span class="token comment">//     setValue(e.target.value)</span>
    <span class="token comment">// }</span>
    <span class="token keyword">const</span> handleChangeVal <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u5185\u5BB9...&quot;</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>val<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChangeVal<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>val<span class="token punctuation">]</span><span class="token punctuation">)</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>prev<span class="token operator">:</span><span class="token punctuation">{</span>prevCount<span class="token punctuation">.</span>current<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>now<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">renderText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>add<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u6DFB\u52A0<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token punctuation">{</span>input<span class="token punctuation">}</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>dispatchAdd<span class="token punctuation">}</span><span class="token operator">&gt;</span>dispatchAdd<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

        <span class="token punctuation">{</span><span class="token function">renderData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="memo" tabindex="-1"><a class="header-anchor" href="#memo" aria-hidden="true">#</a> memo</h3><p>\u7F13\u5B58\u7EC4\u4EF6\uFF0C\u76F8\u5F53\u4E8E<code>class</code>\u7EC4\u4EF6\u7684<code>PureComponent</code>,\u4F1A\u4EE5<code>props</code>\u505A\u6D45\u6BD4\u8F83\u4F18\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useReducer<span class="token punctuation">,</span> useCallback<span class="token punctuation">,</span> memo<span class="token punctuation">,</span> useMemo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// import { useReducer } from &#39;../../hook/useReducer&#39;</span>
<span class="token operator">...</span>
<span class="token keyword">function</span> <span class="token function">Title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useReducer</span><span class="token punctuation">(</span>addReducer<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
    <span class="token keyword">const</span> <span class="token function-variable function">Pom</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>p key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>v<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> List <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>Pom data<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Pom<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> handleChangeVal <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setValue</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>input placeholder<span class="token operator">=</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u5185\u5BB9...&quot;</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>val<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChangeVal<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>val<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// console.log(input, &#39;input&#39;)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token comment">/* &lt;input placeholder=&quot;\u8BF7\u8F93\u5165\u5185\u5BB9...&quot; ref={inputRef} value={val} onChange={handleChangeVal} /&gt; */</span><span class="token punctuation">}</span>
        <span class="token punctuation">{</span>input<span class="token punctuation">}</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>dispatchAdd<span class="token punctuation">}</span><span class="token operator">&gt;</span>dispatchAdd<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>List<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>List<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3>`,65),R=s("\u5728\u5B98\u7F51\u63D0\u4F9B\u4E86\u4E00\u7BC7hook\u7684"),C={href:"https://react.docschina.org/docs/hooks-faq.html",title:"FAQ",target:"_blank",rel:"noopener noreferrer"},j=s("FAQ"),S=s("\u975E\u5E38\u503C\u5F97\u4E00\u770B"),E=n("h3",{id:"\u603B\u7ED3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u603B\u7ED3","aria-hidden":"true"},"#"),s(" \u603B\u7ED3")],-1),V=p("<li><p>hook\u66FF\u6362\u5199\u4EE5\u524D\u7684class\u7EC4\u4EF6\u65B9\u5F0F\uFF0Chook\u8BA9\u7EAF\u51FD\u6570\u7EC4\u4EF6\u6709\u4E86\u81EA\u5DF1\u7684\u72B6\u6001</p></li><li><p><code>useEffect</code>\u5C31\u662F\u4EE5\u524Dclass\u7EC4\u4EF6<code>componentDidMount</code>,<code>componentDidupdate</code>,<code>componentWillUnmount</code>\u7684\u96C6\u5408,\u6BCF\u6B21\u66F4\u65B0state,dom\u6E32\u67D3\u540E\u4F1A\u8C03\u7528<code>useEffect</code>\uFF0C\u5185\u90E8\u83B7\u53D6\u7684<code>state</code>\u662F\u6700\u65B0\u66F4\u65B0\u540E\u7684\u503C</p></li><li><p>\u5E38\u7528<code>hook</code>Api\u7684\u4F7F\u7528\uFF0C<code>useState</code>,<code>useEffect</code>,<code>useReducer</code>,<code>useCallback</code>\uFF0C<code>useMemo</code></p></li><li><p>\u6D88\u9664<code>useEffect</code>\u526F\u4F5C\u7528\uFF0C\u5728<code>useEffect</code>\u4E2D\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u5373\u53EF</p></li><li><p><code>memo</code>\u662F\u7EAF\u51FD\u6570\u7EC4\u4EF6\u7684\u4F18\u5316\u7C7B\u4F3Cclass\u7EC4\u4EF6\u7684<code>PureComponent</code></p></li>",5),q=s("\u672C\u6587\u793A\u4F8B"),A={href:"https://github.com/maicFir/lessonNote/tree/master/react/03-react-hook",title:"code example",target:"_blank",rel:"noopener noreferrer"},D=s("code example");function T(L,F){const a=l("ExternalLinkIcon");return e(),c("div",null,[n("p",null,[i,r,k,d,v,m,n("a",b,[f,t(a)]),g,h,y,w,x]),_,n("p",null,[R,n("a",C,[j,t(a)]),S]),E,n("ul",null,[V,n("li",null,[n("p",null,[q,n("a",A,[D,t(a)])])])])])}var P=o(u,[["render",T],["__file","2023-01-07.html.vue"]]);export{P as default};
