import{_ as o,o as e,c,b as n,a as p,e as a,d as s,r as l}from"./app.13e035d0.js";const i={},r=a("<p>\u5728\u4E4B\u524D\u7684\u4E00\u7BC7\u6587\u7AE0\u4E2D\u6211\u4EEC\u6709\u4E86\u89E3\u5230<code>react</code>\u51FD\u6570\u7EC4\u4EF6\u548C<code>class</code>\u7EC4\u4EF6\uFF0C\u4EE5\u53CA<code>react</code>\u6570\u636E\u6D41\uFF0C\u72B6\u6001\u63D0\u5347\uFF0C\u4EE5\u53CA<code>react</code>\u8BBE\u8BA1\u54F2\u5B66\uFF0C\u5728\u6211\u4EEC\u4E86\u89E3\u4E86\u8FD9\u4E9B\u57FA\u672C\u7684\u77E5\u8BC6\u540E\uFF0C\u6211\u4EEC\u9700\u8981\u4E86\u89E3<code>react</code>\u5185\u90E8\u66F4\u6DF1\u7684\u4E00\u4E9B\u77E5\u8BC6</p><p>\u5728\u5F00\u59CB\u672C\u6587\u4E4B\u524D\uFF0C\u4E3B\u8981\u4F1A\u4ECE\u4EE5\u4E0B\u51E0\u4E2A\u70B9\u53BB\u8BA4\u8BC6<code>react</code>\uFF0C\u4EE5\u53CA\u6211\u4EEC\u90A3\u4E9B\u6211\u4EEC\u5E38\u5E38\u9047\u5230\u7684\u5751</p>",2),u=n("li",null,[n("p",null,[n("code",null,"react"),s("\u662F\u5982\u4F55\u66F4\u65B0\u6570\u636E\u7684\uFF0C\u66F4\u65B0\u6570\u636E\u5230\u5E95\u6709\u4E9B\u6CE8\u610F\u70B9")])],-1),k=n("li",null,[n("p",null,[n("code",null,"react"),s("\u4E2D"),n("code",null,"setState"),s("\u6709\u54EA\u4E9B\u4F60\u9700\u8981\u77E5\u9053\u7684")])],-1),d=n("li",null,[n("p",null,"\u5982\u4F55\u4F18\u5316\u7EC4\u4EF6\u6E32\u67D3")],-1),v={href:"https://react.docschina.org/docs/context.html",title:"Context",target:"_blank",rel:"noopener noreferrer"},m=s("Context"),b=s("\u8DE8\u7EC4\u4EF6\u901A\u4FE1"),y=a(`<p>\u6B63\u6587\u5F00\u59CB...</p><h3 id="react\u662F\u5982\u4F55\u66F4\u65B0\u6570\u636E\u7684" tabindex="-1"><a class="header-anchor" href="#react\u662F\u5982\u4F55\u66F4\u65B0\u6570\u636E\u7684" aria-hidden="true">#</a> react\u662F\u5982\u4F55\u66F4\u65B0\u6570\u636E\u7684</h3><p>\u6211\u4EEC\u5728<code>react</code>\u4E2D\u66F4\u65B0\u6570\u636E\u90FD\u662F\u8C03\u7528<code>setState</code>\u8FD9\u4E2A\u65B9\u6CD5\u53BB\u66F4\u65B0\u7684\uFF0C\u8FD9\u4E2A\u66F4\u65B0\u4E5F\u662F<code>\u6279\u91CF\u5F02\u6B65</code>\u66F4\u65B0\u7684\uFF0C\u5728<code>setState</code>\u66F4\u65B0\u6570\u636E\uFF0C\u4E3B\u8981\u53D1\u751F\u4E86\u4EC0\u4E48,\u6211\u4EEC\u770B\u4E00\u4E2A\u7B80\u5355\u7684\u6817\u5B50\uFF0C\u8FD9\u4E5F\u662F\u6211\u4EEC\u4E0A\u6B21\u7684\u4E00\u4E2A\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">List</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 0 \u4EBA\u6C11\u5E01 1 \u4EE3\u8868\u7F8E\u5143</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// this.setState({</span>
        <span class="token comment">//     count: ++this.state.count</span>
        <span class="token comment">// })</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleReduce</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleRmbInput</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> val <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">price</span><span class="token operator">:</span> val<span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleDollInput</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> val <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">price</span><span class="token operator">:</span> val<span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> price<span class="token punctuation">,</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token function-variable function">ExchangeInput</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> price<span class="token punctuation">,</span> handleChange<span class="token punctuation">,</span> type <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>fieldset<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>legend<span class="token operator">&gt;</span><span class="token punctuation">{</span>type <span class="token operator">===</span> <span class="token string">&quot;RmbInput&quot;</span> <span class="token operator">?</span> <span class="token string">&#39;\u4EBA\u6C11\u5E01&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\u7F8E\u5143&#39;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>legend<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>price<span class="token punctuation">}</span>
                    onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>fieldset<span class="token operator">&gt;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> rmbVal <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> price <span class="token operator">:</span> price <span class="token operator">*</span> <span class="token number">7.34</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> dollVal <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> price <span class="token operator">:</span> <span class="token number">0.14</span> <span class="token operator">*</span> price<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;list-app&quot;</span> style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">&#39;10px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleAdd<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleReduce<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ExchangeInput handleChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleRmbInput<span class="token punctuation">}</span> price<span class="token operator">=</span><span class="token punctuation">{</span>rmbVal<span class="token punctuation">}</span> type<span class="token operator">=</span><span class="token string">&quot;RmbInput&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ExchangeInput<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>hr<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>hr<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ExchangeInput handleChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleDollInput<span class="token punctuation">}</span> price<span class="token operator">=</span><span class="token punctuation">{</span>dollVal<span class="token punctuation">}</span> type<span class="token operator">=</span><span class="token string">&quot;DollarInput&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ExchangeInput<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> List
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5148\u770B\u4E0B\u8FD9\u4E2A\u8BA1\u6570\u5668\uFF0C\u5F53\u6211\u70B9\u51FB<code>+</code>\u65F6\uFF0C\u6570\u5B57\u5C31\u4F1A+1\uFF0C\u5F53\u6211\u70B9\u51FB<code>-</code>\u65F6\uFF0C\u5C31\u4F1A-1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u8C8C\u4F3C\u5C31\u53EF\u4EE5\u66F4\u65B0\u6570\u636E\u4E86,\u6211\u4EEC\u4F1A\u53D1\u73B0<code>state</code>\u6253\u5370\u7684\u503C\u662F<code>{count: 1, price: 0, type: 0}</code></p><p>\u5728\u8FD9\u4E4B\u524D\u4E0D\u662F\u8BF4<code>setState</code>\u662F\u4E00\u4E2A\u5F02\u6B65\u7684\u64CD\u4F5C\u5417\uFF1F\u600E\u4E48\u6253\u5370\u662F\u597D\u50CF\u662F\u540C\u6B65\u7684\u4E00\u6837\uFF1F\u4F46\u4E8B\u5B9E\u5E76\u975E\u5982\u6B64,\u5982\u679C\u4F60\u662F\u8FD9\u4E48\u6539\uFF0C\u90A3\u4E48\u4F60\u4F1A\u53D1\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u7684\u7ED3\u679C\u5C31\u662F<code>{count: 0, price: 0, type: 0} &#39;count&#39;</code></p><p>\u8FD9\u5C31\u8BC1\u660E<code>setState</code>\u8FD9\u4E2A\u65B9\u6CD5\u5C31\u662F\u5F02\u6B65\u7684\uFF0C\u4E5F\u5C31\u8BF4\u660E\u5728<code>handleAdd</code>\u8FD9\u4E2A\u5185\u90E8\u65B9\u6CD5\u4E2D\uFF0C\u4F18\u5148\u6267\u884C\u4E86\u540C\u6B65\u4EFB\u52A1\u6267\u884C\u6253\u5370\u64CD\u4F5C\uFF0C\u7136\u540E\u518D\u6267\u884C<code>setState</code>\u7684</p><p>\u4F46\u662F\u4E0A\u9762\u7684\u4E00\u4E2A\u4F8B\u5B50\u8C8C\u4F3C\u8868\u73B0\u8DDF\u8FD9\u4E2A\u4E0D\u592A\u4E00\u6837\uFF0C\u90A3\u662F\u56E0\u4E3A\u5BF9\u8C61\u503C\u5F15\u5165\u7684\u95EE\u9898\uFF0C\u4E0A\u9762\u90A3\u6BB5\u4EE3\u7801\u53EF\u4EE5\u62C6\u5206\u4E0B\u9762\u8FD9\u6837</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> initState <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A<code>++this.state.count</code>\u76F8\u5F53\u4E8E<code>this.state.count+=1</code>,\u5728\u8C03\u7528<code>setState</code>\u65B9\u6CD5\u65F6\uFF0C\u5B9E\u9645\u4E0A\u8FD9\u4E2A<code>state</code>\u7684<code>count</code>\u5C31\u5DF2\u7ECF\u66F4\u6539\uFF0C\u800C<code>this.setState</code>\u8FD9\u4E2A\u65B9\u6CD5\u662F\u5F02\u6B65\uFF0C\u6240\u4EE5\u4F1A\u5148\u6267\u884C\u6253\u5370\uFF0C\u6240\u4EE5\u6253\u5370\u7684\u503C\u81EA\u7136\u662F\u4FEE\u6539\u7684\u503C\u4E86\uFF0C\u90FD\u662F\u540C\u4E00\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528\u3002</p><h3 id="setstate" tabindex="-1"><a class="header-anchor" href="#setstate" aria-hidden="true">#</a> setState</h3><p>\u5BF9\u4E8E<code>setState</code>\u8BBE\u7F6E\u6570\u636E\u662F\u5F02\u6B65\u7684\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u77E5\u9053\u5982\u679C\u60F3\u7ACB\u5373\u83B7\u53D6\u4FEE\u6539\u540E\u7684\u6570\u636E\u5462\uFF0C\u6211\u4EEC\u5148\u770B\u4E0B<code>setState</code>\u8FD9\u4E2A\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>setState<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">2</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6E90\u7801\u91CC\uFF0C\u5C31\u662F\u8FD9\u6837\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token class-name">Component</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">partialState<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> partialState <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> partialState <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span> partialState <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;setState(...): takes an object of state variables to update or a &#39;</span> <span class="token operator">+</span> <span class="token string">&#39;function which returns an object of state variables.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>updater<span class="token punctuation">.</span><span class="token function">enqueueSetState</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> partialState<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token string">&#39;setState&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u5230\u6E90\u7801<code>setState</code>\u65B9\u6CD5\u662F\u6302\u8F7D\u5728<code>Component</code>\u7684<code>prototype</code>\u4E0A\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u7528<code>this</code>\u5C31\u80FD\u8BBF\u95EE\u8BE5\u7EC4\u4EF6\u4E0A\u7684<code>setState</code>,\u800C<code>Component</code>\u5C31\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Component</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context<span class="token punctuation">,</span> updater</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context<span class="token punctuation">;</span> <span class="token comment">// If a component has string refs, we will assign a different object later.</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>refs <span class="token operator">=</span> emptyObject<span class="token punctuation">;</span> <span class="token comment">// We initialize the default updater but the real one gets injected by the</span>
  <span class="token comment">// renderer.</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>updater <span class="token operator">=</span> updater <span class="token operator">||</span> ReactNoopUpdateQueue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u770B\u5230<code>setState</code>\u5185\u90E8\u65B9\u6CD5\u6709\u5BF9\u5165\u53C2\u8FDB\u884C\u7C7B\u578B\u5224\u65AD\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5FC5\u987B\u662F\u4F20\u5165\u4E00\u4E2A\u5BF9\u8C61\u6216\u8005\u51FD\u6570\u800C\u4E14\u4E0D\u4E3A<code>null</code>\u5426\u5219\u5C31\u4F1A\u629B\u51FA\u9519\u8BEF</p><p>\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u628A<code>setState</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E5F\u53EF\u4EE5\u6539\u6210\u51FD\u6570\u8BD5\u8BD5\uFF0C\u4F46\u662F\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5426\u5219\u5E76\u4E0D\u4F1A\u66F4\u65B0UI</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token operator">...</span>state<span class="token punctuation">,</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8FD9\u91CC\u4F9D\u7136\u662F\u4E0A\u4E00\u6B21\u7684\u503C</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u6E90\u7801\u6211\u4EEC\u77E5\u9053<code>setState</code>\u9664\u4E86\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5BF9\u8C61\u6216\u8005\u51FD\u6570\u5916\uFF0C\u4E5F\u63D0\u4F9B\u4E86\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u53C2\u6570<code>callback</code>\uFF0C\u8FD9\u4E2A\u901A\u5E38\u5728\u9879\u76EE\u4E2D\u4E5F\u4F1A\u5F88\u6709\u7528\uFF0C\u5C31\u662F\u5728\u4F60\u66F4\u65B0<code>state</code>\u540E\u60F3\u7ACB\u5373\u62FF\u7740<code>state</code>\u53BB\u505A\u4E00\u4E9B\u5176\u4ED6\u64CD\u4F5C\u65F6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token operator">...</span>state<span class="token punctuation">,</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7ACB\u5373\u83B7\u53D6\u4FEE\u6539\u540E\u7684\u503C</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/24614/b9d9eabf-d3ce-4d08-95c5-eeb3d42ba483.png" alt=""></p><p>\u6211\u4EEC\u53EF\u4EE5\u4FEE\u6539\u503C\u540E\uFF0C\u5728\u56DE\u8C03\u51FD\u6570\u540E\u5C31\u7ACB\u5373\u66F4\u65B0\u503C\u4E86\uFF0C\u6211\u4EEC\u4ECE\u6267\u884C<code>setState</code>\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\u4E5F\u770B\u5230\u5B9E\u9645\u4E0A\u66F4\u65B0UI\u7684\u8FC7\u7A0B\u4E2D\u4E5F\u8C03\u7528\u5185\u90E8\u5176\u4ED6\u5F88\u591A\u65B9\u6CD5\uFF0C\u6BCF\u6B21\u89E6\u53D1<code>setState</code>\u90FD\u4F1A\u6267\u884C<code>render</code>\u51FD\u6570</p>`,28),g=s("\u800C\u6211\u4EEC\u6CE8\u610F\u5230\u5728\u5F00\u53D1\u73AF\u5883"),h=n("code",null,"render",-1),w=s("\u5185\u90E8\u7684"),f=n("code",null,"console.log",-1),x=s("\u4F1A\u88AB\u6253\u5370\u4E24\u6B21\uFF0C\u8FD9\u70B9\uFF0C"),C={href:"https://github.com/facebook/react/issues/17786",title:"\u5B98\u65B9\u6709\u89E3\u91CA",target:"_blank",rel:"noopener noreferrer"},_=s("\u5B98\u65B9\u6709\u89E3\u91CA"),S=s("\uFF0C\u4E3B\u8981\u662F"),j=n("code",null,"\u5F00\u53D1\u73AF\u5883",-1),B=s("\u53CC\u8C03\u7528\u4E86\u6E32\u67D3\u751F\u547D\u5468\u671F\uFF0C\u5E2E\u52A9\u5728\u6E32\u67D3\u4E2D\u53EF\u4EE5\u67E5\u627E\u51FA\u526F\u4F5C\u7528\u5F15\u51FA\u7684\u95EE\u9898."),q=a(`<p>\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u628A<code>ExchangeInput</code>\u7EC4\u4EF6\u53EF\u4EE5\u63D0\u51FA\u53BB\uFF0C\u4E0D\u5728<code>render</code>\u4E2D\u5B9A\u4E49\uFF0C\u8FD9\u6837\u6027\u80FD\u4E0A\u4F1A\u66F4\u597D</p><h3 id="\u7EC4\u4EF6\u6E32\u67D3\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u6E32\u67D3\u4F18\u5316" aria-hidden="true">#</a> \u7EC4\u4EF6\u6E32\u67D3\u4F18\u5316</h3><p>\u4E00\u4E2A\u7EC4\u4EF6\u5F53<code>state</code>\u6216\u8005<code>props</code>\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u5C31\u4F1A\u66F4\u65B0\u7EC4\u4EF6,\u5177\u4F53\u5199\u4E2A\u4F8B\u5B50</p><p>\u65B0\u5EFA\u4E00\u4E2A\u7EC4\u4EF6<code>Box</code>\u7EC4\u4EF6\uFF0C\u6211\u53EF\u4EE5\u901A\u8FC7\u7236\u7EC4\u4EF6\u53EF\u4EE5\u63A7\u5236\u5176\u5BBD\u5EA6\u4E0E\u9AD8\u5EA6\uFF0C\u5E76\u4E14\u70B9\u51FB\u80CC\u666F\u53EF\u4EE5\u6362\u80A4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Box.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Box</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">divStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">width</span><span class="token operator">:</span> props<span class="token punctuation">.</span>count <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">height</span><span class="token operator">:</span> props<span class="token punctuation">.</span>count <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4F18\u5316\uFF0C\u9ED8\u8BA4\u662F\u8FD4\u56DEtrue,\u5982\u679C\u8FD4\u56DEfalse,\u5219\u4E0D\u4F1A\u6E32\u67D3\u7EC4\u4EF6</span>
    <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token parameter">nextProps<span class="token punctuation">,</span> nextState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count <span class="token operator">!==</span> nextProps<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token operator">!==</span> nextState<span class="token punctuation">.</span>color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">updateStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> divStyle <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> divStyle
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
            <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleChangeBg</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">&#39;red&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;green&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token punctuation">}</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChangeBg<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>color<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>count<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Box
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>index.js</code>\u4E2D\u5F15\u5165</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">&#39;./Box&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">List</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 0 \u4EBA\u6C11\u5E01 1 \u4EE3\u8868\u7F8E\u5143</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// console.log(222)</span>
        <span class="token comment">// console.trace();</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> price<span class="token punctuation">,</span> type <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">const</span> rmbVal <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> price <span class="token operator">:</span> price <span class="token operator">*</span> <span class="token number">7.34</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> dollVal <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> price <span class="token operator">:</span> <span class="token number">0.14</span> <span class="token operator">*</span> price<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;list-app&quot;</span> style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">&#39;10px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleAdd<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleReduce<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Box count<span class="token operator">=</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Box<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> List
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://files.mdnice.com/user/24614/3e548ad9-90c8-4f6b-a766-6c69be589bcd.png" alt=""> \u5F53\u4FEE\u6539<code>count</code>\u65F6\uFF0C\u5C31\u4F1A\u66F4\u65B0\u8FD9\u4E2A<code>box</code>\u7684\u5BBD\u5EA6\u4E0E\u9AD8\u5EA6</p><p>\u5728<code>Box</code>\u7EC4\u4EF6\u4E3B\u8981\u770B\u8FD9\u6BB5\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token parameter">nextProps<span class="token punctuation">,</span> nextState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count <span class="token operator">!==</span> nextProps<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token operator">!==</span> nextState<span class="token punctuation">.</span>color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),R=s("\u5F53\u6211\u4EEC\u8C03\u7528"),P=n("code",null,"setState",-1),I=s("\u540E\uFF0C\u5C31\u4F1A\u8C03\u7528\u8FD9\u4E2A\u94A9\u5B50\u51FD\u6570\uFF0C\u8FD9\u4E2A\u94A9\u5B50\u51FD\u6570\u9ED8\u8BA4\u662F\u8FD4\u56DE"),O=n("code",null,"true",-1),V=s(",\u5982\u679C\u4F60\u60F3\u4F18\u5316\uFF0C\u5728\u67D0\u4E9B\u6761\u4EF6\u4E0B\u53EF\u4EE5\u8FD4\u56DE"),A=n("code",null,"false",-1),E=s("\u4E0D\u6E32\u67D3\u7EC4\u4EF6\u3002\u5B98\u65B9\u4E5F\u8BF4\u660E\u4E86\u8FD9\u4E2A\u662F\u4E00\u4E2A"),L={href:"https://react.docschina.org/docs/optimizing-performance.html",title:"`\u6D45\u6BD4\u8F83`",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"\u6D45\u6BD4\u8F83",-1),$=s(",\u5982\u679C\u662F\u5F15\u7528\u6570\u636E\u7C7B\u578B\uFF0C\u6700\u597D\u4E0D\u8981\u5728\u539F\u6709\u6570\u636E\u4E0A\u8FDB\u884C\u64CD\u4F5C\uFF0C\u56E0\u4E3A\u662F\u540C\u4E00\u4EFD\u5F15\u7528\uFF0C\u5BB9\u6613\u51FA\u95EE\u9898\u3002"),U=a(`<p>\u5173\u4E8E\u6D45\u6BD4\u8F83\uFF0C\u5B98\u65B9\u4E5F\u7ED9\u51FA\u4E86\u4E00\u79CD\u6BD4\u8F83\u66FF\u6362\u65B9\u6848\uFF0C\u4F60\u53EF\u4EE5\u7528<code>PureComponent</code>\u7EC4\u4EF6\u66FF\u4EE3\u4F60\u8FD9\u79CD\u73B0\u6709\u505A\u7684\u4F18\u5316</p><p>\u56E0\u6B64\u4F60\u53EF\u4EE5\u66FF\u6362\u6210\u4E0B\u9762\u8FD9\u6837</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Box</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>PureComponent</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">divStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">width</span><span class="token operator">:</span> props<span class="token punctuation">.</span>count <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">height</span><span class="token operator">:</span> props<span class="token punctuation">.</span>count <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4F18\u5316\uFF0C\u9ED8\u8BA4\u662F\u8FD4\u56DEtrue,\u5982\u679C\u8FD4\u56DEfalse,\u5219\u4E0D\u4F1A\u6E32\u67D3\u7EC4\u4EF6</span>
    <span class="token comment">// shouldComponentUpdate(nextProps, nextState) {</span>
    <span class="token comment">//     if (this.props.count !== nextProps.count) {</span>
    <span class="token comment">//         return true</span>
    <span class="token comment">//     }</span>
    <span class="token comment">//     if (this.state.color !== nextState.color) {</span>
    <span class="token comment">//         return true;</span>
    <span class="token comment">//     }</span>
    <span class="token comment">//     return false</span>
    <span class="token comment">// }</span>
    <span class="token function-variable function">updateStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> divStyle <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> divStyle
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
            <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">handleChangeBg</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">&#39;red&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;green&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token punctuation">}</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChangeBg<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>color<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>count<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Box
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5<code>PureComponent</code>\u7B97\u662F\u4F18\u5316\u7EC4\u4EF6\u6E32\u67D3\u7B80\u6D01\u6700\u5FEB\u901F\u7684\u4E00\u79CD\u65B9\u6CD5\u4E86</p><h3 id="\u8DE8\u7EC4\u4EF6\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#\u8DE8\u7EC4\u4EF6\u901A\u4FE1" aria-hidden="true">#</a> \u8DE8\u7EC4\u4EF6\u901A\u4FE1</h3><p>\u5728<code>react</code>\u7236\u5B50\u6570\u636E\u4F20\u9012\u90FD\u662F\u901A\u8FC7<code>props</code>\uFF0C\u5982\u679C\u9047\u5230\u5D4C\u5957\u7EC4\u4EF6\u597D\u51E0\u7EA7\u60C5\u51B5\u4E0B\uFF0C\u90A3\u4E48<code>props</code>\u4F20\u9012\u5C06\u4F1A\u4E00\u5C42\u4E00\u5C42\u4F20\u5165\u5B59\u7EC4\u4EF6\u4E2D\uFF0C\u6709\u6CA1\u6709\u66F4\u597D\u7684\u89E3\u51B3\u529E\u6CD5\u5462\uFF1F</p><p>\u6709\u4E24\u79CD\u901A\u7528\u7684\u65B9\u6848\uFF0C\u5728<code>react</code>\u4E2D\u4F60\u4E5F\u53EF\u4EE5\u7528\u72B6\u6001\u7BA1\u7406\u5DE5\u5177\uFF0C\u6BD4\u5982<code>redux</code>\u5C06\u72B6\u6001\u5B58\u50A8\u5230\u5168\u5C40\u7684<code>store</code>\u4E2D\uFF0C\u90A3\u4E48\u8DE8\u7EC4\u4EF6\u4EFB\u610F\u4E00\u4E2A\u7EC4\u4EF6\u90FD\u53EF\u4EE5\u8BBF\u95EE\u4E86\uFF0C\u9664\u4E86\u8FD9\u79CD\u8FD8\u6709\u4E00\u79CD\u65B9\u6848\u90A3\u4E48\u5C31\u662F<code>Context</code>\uFF0C\u8FD9\u79CD\u65B9\u6848\u6709\u70B9\u7C7B\u4F3C<code>vue</code>\u4E2D\u7684<code>provide/inject</code>\u4E5F\u662F\u8DE8\u7EC4\u4EF6\u4F20\u9012\u6570\u636E\uFF0C\u4E0D\u8FC7<code>react</code>\u7684\u505A\u6CD5\u8981\u7A0D\u5FAE\u590D\u6742\u4E00\u4E9B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">&#39;./Box&#39;</span>
<span class="token keyword">const</span> initColor <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;\u9EC4\u8272&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> ColorContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>initColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">List</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 0 \u4EBA\u6C11\u5E01 1 \u4EE3\u8868\u7F8E\u5143</span>
            initColor
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;list-app&quot;</span> style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">&#39;10px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
           <span class="token operator">...</span>
            <span class="token operator">&lt;</span>ColorContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>initColor<span class="token punctuation">}</span> <span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>Box count<span class="token operator">=</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Box<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ColorContext<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>
           
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> List
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4EE5\u4E0A\u4EE3\u7801\u4E2D\u53EF\u4EE5\u770B\u51FA\u4E3B\u8981\u662F\u505A\u4E86\u4EE5\u4E0B\u51E0\u4EF6\u4E8B</p><ul><li>\u521B\u5EFA<code>createContext</code>\u5BF9\u8C61</li><li>\u521B\u5EFA\u5BF9\u8C61\u8C03\u7528<code>Provider</code>\u5305\u88F9\u5B50\u7EC4\u4EF6<code>Box</code>\u5E76\u4F20\u5165<code>value</code>\u521D\u59CB\u503C</li></ul><p>\u6211\u4EEC\u7EE7\u7EED\u770B\u4E0B<code>Box</code>\u8FD9\u4E2A\u7EC4\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> OtherContent <span class="token keyword">from</span> <span class="token string">&#39;./OtherContent&#39;</span>
<span class="token keyword">class</span> <span class="token class-name">Box</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>PureComponent</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">divStyle</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">width</span><span class="token operator">:</span> props<span class="token punctuation">.</span>count <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">height</span><span class="token operator">:</span> props<span class="token punctuation">.</span>count <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;100px&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token operator">...</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token punctuation">}</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChangeBg<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>color<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>count<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>OtherContent<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>OtherContent<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Box
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u4F1A\u53D1\u73B0\u53C8\u5F15\u5165\u4E86\u4E00\u4E2A\u5176\u4ED6\u7684\u7EC4\u4EF6<code>OtherContent</code>,\u8FD9\u4E2A\u7EC4\u4EF6\u5C31\u662F\u5B59\u7EC4\u4EF6\uFF0C\u6240\u4EE5\u60F3\u8981\u7236\u7EC4\u4EF6\u7684\u6570\u636E\u76F4\u63A5\u5728<code>\u5B59\u7EC4\u4EF6</code>\u4E0A\u4F7F\u7528\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u5728<code>OtherContent</code>\u7EC4\u4EF6\u4E2D\u8FD9\u4E48\u505A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./index&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">OtherContent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>ColorContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">Pdom</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>p style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> state<span class="token punctuation">.</span>color <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>context<span class="token operator">:</span> <span class="token punctuation">{</span>state<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>Pdom<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Pdom<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> OtherContent<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4EE5\u4E0A\u4EE3\u7801\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF0C\u6211\u4EEC\u5FC5\u987B\u8981\u505A\u4EE5\u4E0B\u51E0\u4EF6\u4E8B</p><ul><li>\u5F15\u5165\u521B\u5EFA\u7684<code>Contenxt</code></li><li>\u8C03\u7528<code>useContext</code>\u51FD\u6570\uFF0C\u5176\u4E2D\u5F62\u53C2\u5C31\u662F\u6211\u4EEC\u5F15\u5165\u521B\u5EFA\u7684<code>Contenxt</code>\uFF0C\u8FD4\u56DE\u521D\u59CB\u503C</li></ul><p>\u56E0\u6B64\u6211\u4EEC\u770B\u5230\u6700\u7EC8\u7684\u7ED3\u679C\u5C31\u662F\u4E0B\u9762\u8FD9\u6837\u7684 <img src="https://files.mdnice.com/user/24614/4f6d2d26-d9ce-4892-9276-c612d2abf518.png" alt=""></p><p>\u6700\u9876\u5C42\u7684\u6570\u636E\u5C31\u4F20\u5165\u4E86\u5B59\u5B50\u7EC4\u4EF6\u4E2D\u53BB\u4E86\u3002</p><p>\u5982\u679C\u6211\u60F3\u6539\u53D8\u5B59\u7EC4\u4EF6<code>OtherContent</code>\u7684\u72B6\u6001\u5462?</p><p>\u53EA\u9700\u8981\u5728\u521D\u59CB\u6570\u636E\u4E2D\u6302\u8F7D\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u6CE8\u610F<code>changeColor</code>\u4F1A\u4ECE<code>value</code>\u4F20\u5165\u5B50\u7EC4\u4EF6\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">&#39;./Box&#39;</span>
<span class="token keyword">const</span> initColor <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;\u9EC4\u8272&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">changeColor</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> ColorContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>initColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">List</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 0 \u4EBA\u6C11\u5E01 1 \u4EE3\u8868\u7F8E\u5143</span>
            <span class="token literal-property property">initColor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>initColor<span class="token punctuation">,</span>
                <span class="token literal-property property">changeColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>changeColor
            <span class="token punctuation">}</span><span class="token punctuation">,</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function-variable function">changeColor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>state<span class="token punctuation">,</span>
                <span class="token literal-property property">initColor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token operator">...</span>state<span class="token punctuation">.</span>initColor<span class="token punctuation">,</span>
                    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>initColor<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">&#39;yellow&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;blue&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>initColor<span class="token punctuation">.</span>text <span class="token operator">===</span> <span class="token string">&#39;\u9EC4\u8272&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;\u84DD\u8272&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\u9EC4\u8272&#39;</span><span class="token punctuation">,</span>

                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token operator">...</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> rmbVal <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> price <span class="token operator">:</span> price <span class="token operator">*</span> <span class="token number">7.34</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> dollVal <span class="token operator">=</span> type <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> price <span class="token operator">:</span> <span class="token number">0.14</span> <span class="token operator">*</span> price<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;list-app&quot;</span> style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">&#39;10px&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
           
            <span class="token operator">&lt;</span>ColorContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>initColor<span class="token punctuation">}</span> <span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>Box count<span class="token operator">=</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Box<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ColorContext<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> List
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u6211\u4EEC\u770B\u4E0B<code>Box</code>\u7EC4\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> OtherContent <span class="token keyword">from</span> <span class="token string">&#39;./OtherContent&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ColorContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./index&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Box</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>PureComponent</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color <span class="token punctuation">}</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChangeBg<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>color<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>color<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>count<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ColorContext<span class="token punctuation">.</span>Consumer<span class="token operator">&gt;</span>
                <span class="token punctuation">{</span>
                    <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> changeColor <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:void(0)&quot;</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                                <span class="token function">changeColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>\u6539\u53D8OtherContent<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
                            <span class="token operator">&lt;</span>OtherContent<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>OtherContent<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ColorContext<span class="token punctuation">.</span>Consumer<span class="token operator">&gt;</span>

        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Box
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u4EEC\u60F3\u5728<code>Box</code>\u7EC4\u4EF6\u6539\u53D8<code>OtherContent</code>\u7684\u7EC4\u4EF6\u72B6\u6001\uFF0C\u90A3\u4E48\u53EA\u9700\u8981\u7528<code>ColorContext.Consumer</code>\u5305\u88F9\u8D77\u6765\uFF0C\u4F46\u662F\u8FD9\u91CC\u9762\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u7EC4\u4EF6\u624D\u884C,\u8FD9\u4E2A<code>changeColor</code>\u5B9E\u9645\u4E0A\u5C31\u662F\u7236\u7EC4\u4EF6<code>value</code>\u4F20\u5165\u5230\u5B50\u7EC4\u4EF6\u91CC\u9762\u7684\u3002</p><p>\u6700\u540E\u4FEE\u6539<code>OtherContent</code>\u7684\u72B6\u6001\u8FD8\u662F\u8C03\u7528\u6839\u7EC4\u4EF6\u4E0A<code>changeColor</code>\u65B9\u6CD5\uFF0C\u4E5F\u662F\u8C03\u7528<code>setState</code>\u4FEE\u6539\u4E86\u539F\u521D\u59CB\u503C\u7684\u6570\u636E\u3002</p><p><img src="https://files.mdnice.com/user/24614/7ab00a98-cec9-4c41-8ac1-b59bb080bc8f.png" alt=""></p><p>\u5F53\u6211\u4EEC\u70B9\u51FB<code>OtherContent</code>\u4E0A\u9762\u7684\u6587\u5B57\u65F6\uFF0C\u5C31\u53EF\u4EE5\u6539\u53D8\u81EA\u8EAB\u5143\u7D20\u7684state\u4E86\u3002</p><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3>`,28),D=a("<li><p>\u5F53\u6211\u4EEC\u66F4\u65B0<code>state</code>\u4E3B\u8981\u662F\u4F9D\u8D56<code>setState</code>\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4FEE\u6539\u503C\u662F\u5F02\u6B65\u8C03\u7528\u7684</p></li><li><p>\u6211\u4EEC\u8981\u77E5\u9053<code>setState</code>\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u53EF\u4EE5\u662F\u5BF9\u8C61\u4E5F\u53EF\u4EE5\u662F\u51FD\u6570\uFF0C\u5F53\u662F\u51FD\u6570\u65F6\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u624D\u884C\uFF0C\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u53C2\u6570\u53EF\u4EE5\u7ACB\u5373\u83B7\u53D6\u5230\u4FEE\u6539\u540E\u7684state\u503C,\u800C\u4E14<code>setState</code>\u4FEE\u6539\u6570\u636E\u662F\u6279\u91CF\u5F02\u6B65\u66F4\u65B0\u7684</p></li><li><p>\u7EC4\u4EF6\u4F18\u5316\u53EF\u4EE5\u7528<code>React.PureComponent</code>\u4EE3\u66FF\u539F\u6709\u7684<code>React.Component</code>\uFF0C\u4E3B\u8981\u662F\u66FF\u4EE3\u539F\u6709\u7684<code>shouldComponentUpdate</code>\u94A9\u5B50\u505A\u4E86\u4E00\u5C42\u6D45\u6BD4\u8F83\uFF0C\u4F1A\u5E2E\u4F60\u505A\u4E00\u4E9B\u4F18\u5316\uFF0C\u4E0D\u5FC5\u8981\u7684\u91CD\u590D\u6E32\u67D3\uFF0C<code>shouldComponentUpdate</code>\u94A9\u5B50\u9ED8\u8BA4\u8FD4\u56DE<code>true</code>,\u5F53\u8FD4\u56DE<code>false</code>\u65F6\uFF0C\u4E0D\u4F1A\u6E32\u67D3\u7EC4\u4EF6</p></li><li><p>\u8DE8\u7EC4\u4EF6\u901A\u4FE1\uFF0C\u4E3B\u8981\u5229\u7528\u5185\u7F6E\u7684API<code>React.createContext</code>\u5B9E\u73B0\u8DE8\u7EC4\u4EF6\u901A\u4FE1\uFF0C\u6709\u70B9\u7C7B\u4F3Cvue\u4E2D\u7684<code>provide/inject</code>\u529F\u80FD</p></li>",4),z=s("\u672C\u6587\u793A\u4F8B"),F={href:"https://github.com/maicFir/lessonNote/tree/master/react/01-react-demo",title:"code example",target:"_blank",rel:"noopener noreferrer"},Q=s("code example");function T(W,G){const t=l("ExternalLinkIcon");return e(),c("div",null,[r,n("ul",null,[u,k,d,n("li",null,[n("p",null,[n("a",v,[m,p(t)]),b])])]),y,n("p",null,[g,h,w,f,x,n("a",C,[_,p(t)]),S,j,B]),q,n("p",null,[R,P,I,O,V,A,E,n("a",L,[N,p(t)]),$]),U,n("ul",null,[D,n("li",null,[n("p",null,[z,n("a",F,[Q,p(t)])])])])])}var J=o(i,[["render",T],["__file","2022-11-12.html.vue"]]);export{J as default};
